<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linux on kakahuote</title>
        <link>https://blog.928330.xyz/tags/linux/</link>
        <description>Recent content in Linux on kakahuote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Tue, 07 Oct 2025 15:03:18 +0800</lastBuildDate><atom:link href="https://blog.928330.xyz/tags/linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>RAID</title>
        <link>https://blog.928330.xyz/p/raid/</link>
        <pubDate>Sun, 28 Sep 2025 22:52:36 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/raid/</guid>
        <description>&lt;img src="http://picture.928330.xyz/typora/56ab540a33f6eab79937c1187dd72855.jpg" alt="Featured image of post RAID" /&gt;&lt;p&gt;&lt;strong&gt;本来是只想写写RAID题目的，但有太多概念不清楚了，不知不觉有点写过头了&amp;hellip;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/RAID&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RAID&amp;ndash;维基百科
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/m0_37867238/article/details/143604850&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;历年美亚杯RAID重组解析汇总&amp;ndash;小谢取证
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forensics.xidian.edu.cn/wiki/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;XDforensics-Wiki
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/0xl4k1d/p/15449572.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Raid重组复习&amp;ndash;0xL4k1d
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/melonbo/article/details/150591869&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入UFSExplorer：自定义RAID配置指南&amp;ndash;M百问
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mercer5.github.io/2021/10/31/raid%E9%87%8D%E7%BB%84/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;raid重组-mercer
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;什么是raid&#34;&gt;什么是RAID
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;RAID，全称Redundant Array of Independent Disks，独立磁盘冗余阵列&lt;/strong&gt;是一种将多个独立的物理磁盘驱动器组合成一个逻辑单元的存储技术&lt;/p&gt;
&lt;p&gt;对于操作系统而言，这个由多块磁盘组成的RAID阵列看起来就像一个单一的大容量硬盘&lt;/p&gt;
&lt;p&gt;那么，RAID技术有什么好的？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据容错&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为在多个磁盘上有存储数据的副本或校验信息，RAID可以有效防止因单块磁盘故障而导致的数据丢失&lt;/p&gt;
&lt;p&gt;当一块磁盘损坏时，系统可以利用其余磁盘上的冗余数据进行恢复，这抵御故障并继续运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;性能提升&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过将数据分割成小块并同时读写到多个磁盘上，数据传输速率高，读写性能远超单个磁盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这种方式也被称为条带化存储，每个条带包含一段连续的数据，同一条逻辑行的数据块分布在不同磁盘上&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;条带这个东西不太好用文字理解，举个例子&lt;/p&gt;
&lt;p&gt;假设有两块硬盘DiskA、DiskB，要存储的数据是字符串&lt;code&gt;ABCDEFGH&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未条带化&lt;/strong&gt;（普通存储）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DiskA：&lt;code&gt;ABCDEFGH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;DiskB：空&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;读取的时候只能A读，B不工作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;条带化存储&lt;/strong&gt;（条带大小2字节）：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;DiskA&lt;/th&gt;
          &lt;th&gt;DiskB&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;B&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;D&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;E&lt;/td&gt;
          &lt;td&gt;F&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;G&lt;/td&gt;
          &lt;td&gt;H&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;也就是说第一个条带=&lt;code&gt;A&lt;/code&gt;（DiskA） +   &lt;code&gt;B&lt;/code&gt;（DiskB），大小就是&lt;code&gt;AB&lt;/code&gt;（两个字节），后面的也以此类推&lt;/p&gt;
&lt;p&gt;同一个条带的上下两部分数据存储在了AB两块磁盘的同一个位置&lt;/p&gt;
&lt;p&gt;每次读取数据时，&lt;strong&gt;按照条带来读，无需切换硬盘&lt;/strong&gt;，和普通的两个盘分别存储有本质区别&lt;/p&gt;
&lt;p&gt;这样读取的时候两块盘可以同时工作，速度几乎翻倍！这就是最简单的RAID0的工作原理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;前置知识&#34;&gt;前置知识
&lt;/h1&gt;&lt;p&gt;不想看的可以跳转：&lt;a class=&#34;link&#34; href=&#34;#RAID%e7%ba%a7%e5%88%ab&#34; &gt;RAID级别
    
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;物理盘physical-diskpd&#34;&gt;物理盘（Physical Disk，PD）
&lt;/h2&gt;&lt;p&gt;是实际存在的硬件存储设备，如HDD（Hard Disk Drive，机械硬盘）、SSD（Solid State Drive，固态硬盘）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HDD是依靠旋转的磁盘和机械磁头读写数据的传统硬盘&lt;/strong&gt;，有真实的机械运动，因此读写速度受机械臂移动和盘片旋转限制，随机访问慢，并且不耐摔，但大容量成本低，所以通常用作大容量备份或冷存储&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SSD则完全没有机械部件，数据存储在电子闪存中&lt;/strong&gt;，读写几乎即时，随机访问和顺序访问速度都很快，是耐摔王，但价格高，写入次数有限，需要通过固件和控制器管理寿命，通常作系统盘和高速应用&lt;/p&gt;
&lt;h2 id=&#34;虚拟盘virtual-disk-vd-&#34;&gt;虚拟盘（Virtual Disk ，VD ）
&lt;/h2&gt;&lt;p&gt;是通过软件技术模拟出来的磁盘存储设备，没有物理结构，但在系统层面像真实磁盘&lt;/p&gt;
&lt;p&gt;常见以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;本地虚拟盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在单台计算机上由操作系统或软件创建的虚拟盘，例如VHD、VMDK之类的，用于虚拟机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络存储虚拟盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过网络提供的虚拟盘，可以被多台设备访问，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAS（Network Attached Storage）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文件级存储，通过网络共享文件，常用于家庭或企业文件共享&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SAN（Storage Area Network）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;块级存储，通过高速网络提供虚拟磁盘给服务器使用，多用于企业数据库或虚拟机存储&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;云存储虚拟盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云服务商提供的块存储或对象存储虚拟盘，把我们的文件放在远程服务器上，这些服务器内部可能是HDD 或SSD，经过虚拟化后提供我们一个虚拟盘，通过网络访问就像访问本地盘一样，例如百度网盘&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;网络存储虚拟盘更像企业内部自建硬盘，使用局域网（LAN）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而云存储虚拟盘是互联网远程虚拟盘，使用互联网（WAN），用户只是远程使用而已&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;逻辑盘logical-disk-ld&#34;&gt;逻辑盘（Logical Disk ，LD）
&lt;/h2&gt;&lt;p&gt;是在物理盘上通过软件划分出来的具有逻辑结构的存储区域，依赖物理盘，也叫做分区&lt;/p&gt;
&lt;p&gt;一个物理盘可划分为多个逻辑盘，如Windows的C、D盘，Linux的/dev/sda1、/dev/sda2分区&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么要分区？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;隔离数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以将操作系统文件与用户数据分开放置。如果系统分区损坏需要重装，用户数据分区可以不受影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用不同文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以在同一块硬盘上为不同的分区创建不同的文件系统，以满足不同需求&lt;/p&gt;
&lt;p&gt;例如，一个ext4分区给Linux用，一个NTFS分区用于和Windows共享数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;专用空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建专门的分区用作交换空间，作为物理内存的补充&lt;/p&gt;
&lt;p&gt;将频繁读写的文件（如日志）放在独立分区，可以减少磁盘碎片，方便备份和管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;磁盘组disk-group&#34;&gt;磁盘组（Disk Group）
&lt;/h2&gt;&lt;p&gt;是将多块物理盘组合成一个组，RAID阵列就是磁盘组&lt;/p&gt;
&lt;h2 id=&#34;扇区sector&#34;&gt;扇区（Sector）
&lt;/h2&gt;&lt;h3 id=&#34;物理扇区&#34;&gt;物理扇区
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;是硬盘硬件上可以独立寻址和进行读写操作的最小物理区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于物理层面的原因，没有硬盘能做到一个bit一个bit对数据进行操作&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;机械硬盘&lt;/strong&gt;，它指的是盘片上磁道的一个特定弧段，硬盘的磁头在执行一次读写命令时，至少要处理这么大一块物理区域&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;固态硬盘&lt;/strong&gt;，它对应于NAND闪存芯片中的一个物理页或块的一部分，是SSD主控能够操作的最小数据单元&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个物理扇区并不完全用来存储用户数据，它还包含了其余内容，用于确保数据能被准确定位和可靠读写：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;间隙&lt;/strong&gt;：用于分隔不同的扇区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步标记&lt;/strong&gt;：帮助磁头在高速旋转中同步数据读取的时机&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地址标记&lt;/strong&gt;：记录这个扇区的唯一物理地址（哪个磁头、哪个柱面、哪个扇区）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;纠错码（ECC）&lt;/strong&gt;：这是一段根据数据内容计算出来的校验码，在读取数据时，硬盘会重新计算ECC并与存储的ECC进行比对，以发现并纠位错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样方便了管理，也产生了空间开销&lt;/p&gt;
&lt;p&gt;随着硬盘容量的急剧增大，使用512字节的物理扇区变得越来越低效，现在很多硬盘物理扇区扩大到了4096字节（4KB），被称为先进格式化（Advanced Format，AF），相当于把8个小扇区的管理开销合并为1个大扇区的开销，空间利用率显著提高，并且更大的扇区意味着可以分配更多的空间给ECC码，从而设计出更好的纠错算法&lt;/p&gt;
&lt;h4 id=&#34;糟糕的问题&#34;&gt;糟糕的问题
&lt;/h4&gt;&lt;p&gt;当我们要写入HDD的数据不足512B的时候，硬盘也会先把包含目标字节的整个扇区512B读入缓存，在缓存中修改要写入的那些字节，之后重新计算ECC，最后把整个512B扇区写回磁盘&lt;/p&gt;
&lt;p&gt;也就是说，硬盘把所有&lt;strong&gt;不是512B整数倍&lt;/strong&gt;的&lt;strong&gt;写&lt;/strong&gt;过程，都变成了&lt;strong&gt;读-改-写&lt;/strong&gt;的过程！这会造成性能的浪费！&lt;/p&gt;
&lt;p&gt;而对于SSD，这个情况更加严重：&lt;/p&gt;
&lt;p&gt;SSD最小写单元是页，通常是4KB，但它最小的可擦除单元却是按照块计算，通常是128KB&lt;/p&gt;
&lt;div class=&#34;alert alert-tip&#34;&gt;
    &lt;div class=&#34;alert-header&#34;&gt;
        &lt;span class=&#34;alert-icon&#34;&gt;
            💡
        &lt;/span&gt;
        &lt;span class=&#34;alert-title&#34;&gt;
            Tip
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;alert-content&#34;&gt;
        &lt;p&gt;NAND闪存写入页之前页必须是干净的，也就是所有位都是1，不能直接覆盖，而擦除必须整块擦除&lt;/p&gt;
&lt;p&gt;如果把块设置成和页一样大，可擦除最小单位变成4KB，坏块产生概率更高，还会加速磨损&lt;/p&gt;
&lt;p&gt;如果把页设置成和块一样大，写入最小单位变成128KB，小文件写入会严重浪费，性能下降&lt;/p&gt;
&lt;p&gt;所以现在的设置是理论最优喔&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;当写入数据不是4KB的整数倍的时候会变成读-改-写，这还好，如果要写的页已经写过，无法覆盖，那就必须擦除，而擦除所带来的改就是整个块的改动，有几百KB，甚至达到MB的级别！&lt;/p&gt;
&lt;p&gt;这就是所谓的“&lt;strong&gt;写放大&lt;/strong&gt;”问题，而它几乎是不可避免的&lt;/p&gt;
&lt;h3 id=&#34;逻辑扇区&#34;&gt;逻辑扇区
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;类似逻辑地址，逻辑扇区是一个抽象概念，是硬盘让操作系统和用户看到的假设出来的东西&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作系统使用一种名为&lt;strong&gt;逻辑块地址 (Logical Block Addressing, LBA)&lt;/strong&gt; 的方式来访问硬盘&lt;/p&gt;
&lt;p&gt;在这种模式下，整个硬盘被看作一个从0开始编号的、连续线性的逻辑扇区数组，操作系统无需关心数据具体存放在哪个盘片、哪个磁头、哪个柱面上，只需要关心线性的LBA地址就可以了，这极大地简化了软件开发&lt;/p&gt;
&lt;p&gt;比如，当操作系统需要读取数据时，它只用发出简单的指令：给我LBA地址为12345的数据，就会自动取出第12346个扇区（注意扇区编号从0开始的）&lt;/p&gt;
&lt;p&gt;并且，这还保证了新硬件能够兼容旧的操作系统，比如从HDD变为SSD，或改变内部存储结构，只要硬盘的固件能够正确地将操作系统发来的LBA地址请求翻译成对内部物理存储单元的操作即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑扇区大小可以与物理扇区不同&lt;/strong&gt;，接着往下看&lt;/p&gt;
&lt;h3 id=&#34;硬盘扇区格式标准&#34;&gt;硬盘扇区格式标准
&lt;/h3&gt;&lt;h4 id=&#34;512n512-native512原生&#34;&gt;512n（512 Native，512原生）
&lt;/h4&gt;&lt;p&gt;最传统的标准，即硬盘的物理扇区大小和逻辑扇区大小都是512字节&lt;/p&gt;
&lt;p&gt;所见即所得，操作系统看到的逻辑结构与硬盘的物理结构完全一致，不存在转换和模拟&lt;/p&gt;
&lt;h4 id=&#34;512e512-emulation512模拟&#34;&gt;512e（512 Emulation，512模拟）
&lt;/h4&gt;&lt;p&gt;这是当前最主流的标准，硬盘的物理扇区大小是4096字节 (4KB)，但它对外伪装成512字节的逻辑扇区与操作系统沟通，来保证对旧软件和操作系统的向后兼容性&lt;/p&gt;
&lt;p&gt;在windows的cmd，使用下面的命令可以查看C盘扇区大小：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fsutil fsinfo ntfsinfo C:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250930163549065&#34; href=&#34;http://picture.928330.xyz/typora/image-20250930163549065.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250930163549065.png&#34; alt=&#34;image-20250930163549065&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;但这样也会导致问题：当操作系统尝试写入一个未与底层4KB物理扇区边界对齐的512字节逻辑扇区时，就会触发一次之前说过的读-改-写操作，这被称为&lt;strong&gt;未对齐写入&lt;/strong&gt;，也会导致性能下降&lt;/p&gt;
&lt;h4 id=&#34;4kn4k-native4k原生&#34;&gt;4Kn（4K Native，4K原生）
&lt;/h4&gt;&lt;p&gt;最现代的标准，硬盘的物理扇区大小和逻辑扇区大小都是4096字节&lt;/p&gt;
&lt;h2 id=&#34;linux系统的物理盘与逻辑盘表示&#34;&gt;Linux系统的物理盘与逻辑盘表示
&lt;/h2&gt;&lt;p&gt;在Linux的设计哲学中，有一个核心思想是“一切皆文件”，这意味着硬件设备，如硬盘、键盘、鼠标等，都会在文件系统中以一个特殊文件的形式存在&lt;/p&gt;
&lt;p&gt;这些设备文件都集中存放在&lt;code&gt;/dev&lt;/code&gt;目录（也就是device的意思）下，通过读写这些文件，就可以与对应的硬件设备进行交互&lt;/p&gt;
&lt;h3 id=&#34;设备命名规则&#34;&gt;设备命名规则
&lt;/h3&gt;&lt;p&gt;一般格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/[&lt;span style=&#34;color:#e06c75&#34;&gt;设备类型&lt;/span&gt;][&lt;span style=&#34;color:#e06c75&#34;&gt;磁盘序号&lt;/span&gt;][&lt;span style=&#34;color:#e06c75&#34;&gt;分区号&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;sd-通用硬盘&#34;&gt;sd (通用硬盘)
&lt;/h4&gt;&lt;p&gt;这是最常见的前缀，源于 &amp;ldquo;SCSI disk&amp;rdquo;&lt;/p&gt;
&lt;p&gt;它被广泛用于表示几乎所有类型的现代硬盘，包括SATA硬盘、SAS硬盘，甚至U盘和通过USB连接的移动硬盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其命名方式为：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;sd&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;X&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;N&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt;：表示&lt;strong&gt;磁盘序号的字母&lt;/strong&gt; (&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;b&lt;/code&gt;，&lt;code&gt;c&lt;/code&gt;…)，按内核检测到的顺序分配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;：表示该磁盘上的&lt;strong&gt;分区号&lt;/strong&gt; (&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;…)，此部分是可选的，没有则代表整块硬盘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/sda&lt;/code&gt;：表示系统中第一块被识别的&lt;code&gt;sd&lt;/code&gt;类型物理硬盘&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/sdb2&lt;/code&gt;：表示第二块&lt;code&gt;sd&lt;/code&gt;类型硬盘上的第2个分区&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;hdide硬盘&#34;&gt;hd（IDE硬盘）
&lt;/h4&gt;&lt;p&gt;是&amp;quot;Hard disk&amp;quot;的缩写，这是早期用于表示IDE/PATA接口硬盘的前缀，在现代系统中已非常少见&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其命名方式基本和sd相同：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;hd&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;X&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;N&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt;：表示&lt;strong&gt;磁盘序号的字母&lt;/strong&gt; (&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;b&lt;/code&gt;，&lt;code&gt;c&lt;/code&gt;…)，按内核检测到的顺序分配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;：表示该磁盘上的&lt;strong&gt;分区号&lt;/strong&gt; (&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;…)，此部分是可选的，没有则代表整块硬盘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/hda&lt;/code&gt;：表示第一块IDE硬盘&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/hdb2&lt;/code&gt;：表示第二块IDE硬盘上的第2个分区&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;vd虚拟化硬盘&#34;&gt;vd（虚拟化硬盘）
&lt;/h4&gt;&lt;p&gt;是&amp;quot;Virtual disk&amp;quot;的缩写，常见于KVM等虚拟化环境中，代表分配给虚拟机的虚拟硬盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其命名方式也和sd大差不差：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;vd&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;X&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;N&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt;：表示&lt;strong&gt;磁盘序号的字母&lt;/strong&gt; (&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;b&lt;/code&gt;，&lt;code&gt;c&lt;/code&gt;…)，按内核检测到的顺序分配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;：表示该磁盘上的&lt;strong&gt;分区号&lt;/strong&gt; (&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;…)，此部分是可选的，没有则代表整块硬盘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/vda&lt;/code&gt;：表示分配给当前虚拟机的第一块虚拟硬盘&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/vdb1&lt;/code&gt;：表示第二块虚拟硬盘上的第1个分区&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;nvmenvme固态硬盘&#34;&gt;nvme（NVMe固态硬盘）
&lt;/h4&gt;&lt;p&gt;表示通过**NVMe (Non-Volatile Memory Express，非易失性存储器快速通道）**协议连接的高速固态硬盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其命名方式有些特殊：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;nvme&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;X&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#e06c75&#34;&gt;n&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;Y&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#e06c75&#34;&gt;p&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;Z&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt;：表示NVMe&lt;strong&gt;控制器&lt;/strong&gt;的序号，从&lt;code&gt;0&lt;/code&gt;开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&amp;lt;Y&amp;gt;&lt;/code&gt;：表示控制器下的&lt;strong&gt;命名空间&lt;/strong&gt;（可以理解为磁盘），从&lt;code&gt;1&lt;/code&gt;开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&amp;lt;Z&amp;gt;&lt;/code&gt;：表示该磁盘上的&lt;strong&gt;分区号&lt;/strong&gt;，从&lt;code&gt;1&lt;/code&gt;开始&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/nvme0n1&lt;/code&gt;：表示第0个控制器上的第1块NVMe磁盘&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/nvme1n2p2&lt;/code&gt;：表示第1个控制器上的第2块NVMe磁盘上的第2个分区&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mmcblkemmc--sd卡&#34;&gt;mmcblk（eMMC / SD卡）
&lt;/h4&gt;&lt;p&gt;用于表示嵌入式设备中的存储，如eMMC闪存或SD/TF卡&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其命名方式也有点不同：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;dev&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;mmcblk&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;X&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#e06c75&#34;&gt;p&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#e06c75&#34;&gt;Y&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;X&amp;gt;&lt;/code&gt;：表示eMMC/SD卡&lt;strong&gt;设备&lt;/strong&gt;的序号，从&lt;code&gt;0&lt;/code&gt;开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&amp;lt;Y&amp;gt;&lt;/code&gt;：表示该设备上的&lt;strong&gt;分区号&lt;/strong&gt;，从&lt;code&gt;1&lt;/code&gt;开始&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/mmcblk0&lt;/code&gt;：表示系统中第一张被识别的SD卡或eMMC芯片&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/mmcblk1p1&lt;/code&gt;：表第二张卡上的第1个分区&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分区编号的规则&#34;&gt;分区编号的规则
&lt;/h3&gt;&lt;p&gt;分区号&lt;code&gt;N&lt;/code&gt;的分配方式并总是从1开始就一直向后排，它与硬盘的分区表格式有关，主要有两种：MBR和GPT&lt;/p&gt;
&lt;h4 id=&#34;mbr-master-boot-record主引导记录&#34;&gt;MBR (Master Boot Record，主引导记录)
&lt;/h4&gt;&lt;p&gt;这是一种较老的分区方案，限制一块MBR硬盘最多只能有4个主分区&lt;/p&gt;
&lt;p&gt;为了突破4个分区的限制，可以将其中一个主分区设置为&lt;strong&gt;扩展分区&lt;/strong&gt;，然后在扩展分区内部可以创建多个&lt;strong&gt;逻辑分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因此，分区编号&lt;code&gt;1&lt;/code&gt;到&lt;code&gt;4&lt;/code&gt;总是留给主分区或扩展分区，逻辑分区的编号则从&lt;code&gt;5&lt;/code&gt;开始&lt;/p&gt;
&lt;p&gt;所以，如果我们看到一块硬盘的分区是&lt;code&gt;/dev/sda1&lt;/code&gt;、&lt;code&gt;/dev/sda2&lt;/code&gt;、&lt;code&gt;/dev/sda5&lt;/code&gt;，这通常意味着&lt;code&gt;sda1&lt;/code&gt;和&lt;code&gt;sda2&lt;/code&gt;是主分区，而 &lt;code&gt;sda5&lt;/code&gt; 是扩展分区里的第一个逻辑分区&lt;/p&gt;
&lt;h4 id=&#34;gpt-guid-partition-tableguid分区表&#34;&gt;GPT (GUID Partition Table，GUID分区表)
&lt;/h4&gt;&lt;p&gt;这是一种更现代、更灵活的分区方案，是当前的主流标准，理论上支持无限个分区（但操作系统通常限制为128个）&lt;/p&gt;
&lt;p&gt;没有主分区、扩展分区、逻辑分区的复杂概念，所有分区地位平等&lt;/p&gt;
&lt;p&gt;分区编号就是简单地从&lt;code&gt;1&lt;/code&gt;开始连续递增，如&lt;code&gt;/dev/sda1&lt;/code&gt;、&lt;code&gt;/dev/sda2&lt;/code&gt;、&lt;code&gt;/dev/sda3&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;实例&#34;&gt;实例
&lt;/h3&gt;&lt;p&gt;在linux里使用&lt;code&gt;lsblk&lt;/code&gt; (list block devices，列出块设备) 命令可以清晰地看到系统中的磁盘和分区结构&lt;/p&gt;
&lt;p&gt;假设一台Linux服务器有两块SATA硬盘，&lt;code&gt;lsblk&lt;/code&gt;的输出如下（我现有的linux机分盘都很少，杜撰一个吧）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;NAME&lt;/span&gt;   &lt;span style=&#34;color:#e06c75&#34;&gt;MAJ&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;MIN&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;RM&lt;/span&gt;   &lt;span style=&#34;color:#e06c75&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;RO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TYPE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;MOUNTPOINT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;sda&lt;/span&gt;      &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;238.5&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;G&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;disk&lt;/span&gt;                                &lt;span style=&#34;color:#7f848e&#34;&gt;// 第一块物理硬盘，总容量为238.5G
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;├─&lt;span style=&#34;color:#e06c75&#34;&gt;sda1&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;512&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;M&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;part&lt;/span&gt; /&lt;span style=&#34;color:#e06c75&#34;&gt;boot&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;efi&lt;/span&gt;			  &lt;span style=&#34;color:#7f848e&#34;&gt;// sda上的第一个分区，大小为512M，被挂载到了/boot/efi目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;└─&lt;span style=&#34;color:#e06c75&#34;&gt;sda2&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;238&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;G&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;part&lt;/span&gt; /							&lt;span style=&#34;color:#7f848e&#34;&gt;// sda上的第二个分区，大小为238G，被挂载为根目录/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;sdb&lt;/span&gt;      &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;16&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;931.5&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;G&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;disk&lt;/span&gt; 							  &lt;span style=&#34;color:#7f848e&#34;&gt;// 第二块物理硬盘，总容量为931.5G
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;└─&lt;span style=&#34;color:#e06c75&#34;&gt;sdb1&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;17&lt;/span&gt;   &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;931.5&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;G&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;part&lt;/span&gt; /&lt;span style=&#34;color:#c678dd&#34;&gt;data&lt;/span&gt;				  &lt;span style=&#34;color:#7f848e&#34;&gt;// sdb上的第一个分区，大小为931.5G，被挂载到了/data目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;列名&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;NAME&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;设备名，例如&lt;code&gt;sda&lt;/code&gt;，&lt;code&gt;sda1&lt;/code&gt;等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;MAJ:MIN&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;主设备号:次设备号，用于Linux内核识别设备&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;RM&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;是否为可移动设备（1是可移动，如U盘或光驱，0是固定磁盘）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;SIZE&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;设备或分区的大小&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;RO&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;是否为只读（1是只读，0是可读写）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;TYPE&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;设备类型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;MOUNTPOINT&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;当前挂载点路径，没有挂载则为空&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;文件系统&#34;&gt;文件系统
&lt;/h2&gt;&lt;p&gt;当我们有了一个分区后，它还只是一片空白的存储空间，我们还需要一种规则来组织和管理将要存入其中的数据，这种规则就是文件系统，&lt;strong&gt;文件系统本质上是操作系统的一部分&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在windows的cmd下，可以使用下面命令查看所有卷的文件系统：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wmic logicaldisk get name,filesystem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251001235258602&#34; href=&#34;http://picture.928330.xyz/typora/image-20251001235258602.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251001235258602.png&#34; alt=&#34;image-20251001235258602&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;在linux则可以使用下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df -T
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251001235356981&#34; href=&#34;http://picture.928330.xyz/typora/image-20251001235356981.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251001235356981.png&#34; alt=&#34;image-20251001235356981&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;格式化&#34;&gt;格式化
&lt;/h3&gt;&lt;p&gt;在一个分区上创建文件系统的过程，就叫做&lt;strong&gt;格式化（Format）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从技术上讲，格式化的核心就是在指定的分区上创建一套全新空白的文件系统&lt;/strong&gt;，就像拿到一本空白的笔记本，在第一页画好目录的表格，为之后写内容做好组织规划&lt;/p&gt;
&lt;p&gt;不过为什么我们日常的体验是“格式化=擦除数据”呢？&lt;/p&gt;
&lt;p&gt;这完全取决于我们执行的是哪一种格式化，格式化主要分为两种：&lt;strong&gt;快速格式化&lt;/strong&gt;和&lt;strong&gt;完全格式化&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;快速格式化&#34;&gt;快速格式化
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;操作系统只会擦除文件系统的索引区域，然后写入一套新的空白的索引，不会处理真正存储内容的数据区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对操作系统来说，既然目录已经是空白的了，那它就认为这个分区上没有任何文件，因此硬盘看起来是空的&lt;/p&gt;
&lt;p&gt;但实际上，之前的所有数据都还原封不动地在磁盘上，只是失去了能够找到它们的索引信息&lt;/p&gt;
&lt;p&gt;也正因如此，数据恢复可能性非常高，数据恢复软件会跳过被删除的目录，直接扫描整个硬盘的数据区域，根据文件头信息和数据结构来重建出原始文件&lt;/p&gt;
&lt;h4 id=&#34;完全格式化&#34;&gt;完全格式化
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;既删除目录，也擦除所有内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行完全格式化，操作系统会做两件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行一次快速格式化，创建新的空白文件系统。&lt;/li&gt;
&lt;li&gt;从头到尾扫描整个分区，并向每一个扇区的每一个bit写入0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样一来，所有旧数据都会被毫无意义的0数据彻底覆盖掉。硬盘被真正地清空了，完全不能恢复&lt;/p&gt;
&lt;h3 id=&#34;常见的文件系统类型&#34;&gt;常见的文件系统类型
&lt;/h3&gt;&lt;h4 id=&#34;fat&#34;&gt;FAT
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称File Allocation Table，文件分配表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;结构简单，兼容性极佳，几乎所有主流操作系统和电子设备都支持，常用于U盘、SD卡、移动硬盘，作为跨平台数据交换的媒介&lt;/p&gt;
&lt;p&gt;FAT文件系统关键结构就是FAT，即文件分配表，作用就是记录磁盘上每个簇的使用情况和文件存储位置，簇是磁盘上最小的数据分配单位，由若干扇区组成&lt;/p&gt;
&lt;p&gt;FAT的分区大小=最大簇数×每簇大小，最大簇数由每个簇编号占用的位数决定，通常写在名字里，比如FAT12就是每个簇用12位表示，最大簇数2¹²=4096个，而每簇大小不太固定&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FAT16&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非常早期的版本，在DOS和Windows 95时代流行，已经基本被淘汰&lt;/p&gt;
&lt;p&gt;最大仅支持2GB的分区（在某些系统中可达4GB）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FAT32&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是FAT16的改进版本，但它依旧无法管理大于4GB的单个文件，并且最大分区支持也有限（Windows上限制为32GB，理论上可达2TB）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;exFAT (Extended File Allocation Table)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由微软推出，专为解决FAT32的缺点&lt;/p&gt;
&lt;p&gt;它打破了4GB单文件和分区大小的限制，同时针对闪存介质的特性进行了优化，减少了不必要的写入操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ntfs&#34;&gt;NTFS
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称New Technology File System，新技术文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是Windows系统的标准文件系统，支持大文件和大分区，并提供文件权限管理、加密、日志、压缩等强大功能，可靠性和安全性高&lt;/p&gt;
&lt;p&gt;感兴趣可以看看我的另一篇博客：&lt;a class=&#34;link&#34; href=&#34;https://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8A/#ntfs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NTFS系统
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;refs&#34;&gt;ReFS
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称Resilient File System，弹性文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是微软为Windows Server系统推出的、旨在替代NTFS的新一代文件系统，但它的核心设计目标不是替代桌面版的NTFS，而是为数据中心和大规模存储提供更高的数据完整性和可用性&lt;/p&gt;
&lt;p&gt;它通过对元数据和可选的用户数据进行校验和来主动检测和修复数据损坏，其写入时复制（Copy-on-Write）机制确保了在写入过程中发生意外时，旧数据不会被破坏，极大地增强了数据恢复能力&lt;/p&gt;
&lt;p&gt;常用于Windows Server的存储空间和Hyper-V虚拟化场景&lt;/p&gt;
&lt;h4 id=&#34;ext&#34;&gt;ext
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称Extended File System，扩展文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Linux系统的标准文件系统，用于几乎所有的Linux发行版，从桌面到服务器，&lt;strong&gt;以及安卓手机的内部存储&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ext2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经典的早期版本，性能良好，但与FAT类似，缺少日志功能，在服务器等场景下可靠性不足&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ext3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它在ext2的基础上加入了日志功能，在不改变底层结构的情况下，极大地提升了文件系统的可靠性，成为了许多Linux发行版的长期默认选项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ext4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当前的主流标准，它在前代基础上引入了多项重要改进，如Extents（优化大文件的存储方式，减少碎片并提升性能）、支持更大的文件和卷、更快的自检速度等，使其更现代化、性能更强&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;btrfs&#34;&gt;Btrfs
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称B-tree File System&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是Linux的新一代文件系统，旨在替代ext系列文件系统，尤其适合企业级存储和虚拟化环境&lt;/p&gt;
&lt;p&gt;Btrfs内置了快照、校验和、数据压缩、写时复制以及多磁盘管理等功能，它非常灵活，允许动态地添加、删除设备和调整卷大小，目前已成为一些Linux发行版（如Fedora, openSUSE）的默认文件系统&lt;/p&gt;
&lt;h4 id=&#34;xfs&#34;&gt;XFS
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称Extended Filesystem X，扩展文件系统X&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是一种高性能日志文件系统，最初由硅谷图形公司SGI为其IRIX操作系统开发，后来被Linux采用&lt;/p&gt;
&lt;p&gt;XFS的结构设计使其在文件数量和大小增长时，性能下降幅度很小，特别适合处理大文件和高并发读写场景&lt;/p&gt;
&lt;p&gt;因其稳定性和高吞吐量的特性，XFS成为了许多企业级Linux发行版（如Red Hat Enterprise Linux及其衍生版CentOS）的默认文件系统，尤其适用于数据库、媒体服务器和科学计算等场景&lt;/p&gt;
&lt;h4 id=&#34;tmpfs&#34;&gt;tmpfs
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称Temporary File System，临时文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是Linux下的一种虚拟文件系统，完全驻留在内存中，用于存放临时文件&lt;/p&gt;
&lt;p&gt;数据不持久，重启后丢失，支持动态调整大小，常用于&lt;code&gt;/tmp&lt;/code&gt;、&lt;code&gt;/run&lt;/code&gt;等目录&lt;/p&gt;
&lt;h4 id=&#34;devtmpfs&#34;&gt;devtmpfs
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;全称Device Temporary File System，设备临时文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是Linux内核专门为&lt;code&gt;/dev&lt;/code&gt;目录提供的虚拟文件系统，用于管理设备节点&lt;/p&gt;
&lt;p&gt;在内存中动态生成，不占用硬盘，系统启动早期即可挂载，方便设备驱动初始化&lt;/p&gt;
&lt;h4 id=&#34;hfs-与-apfs&#34;&gt;HFS+ 与 APFS
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;HFS+全称Hierarchical File System Plus，分层文件系统增强版&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;APFS全称Apple File System，苹果文件系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;他们都是苹果macOS系统的文件系统，HFS+是长期的标准，而APFS（Apple File System）是从2017年开始推出的新一代文件系统，专门为固态硬盘和闪存优化，性能和可靠性更强&lt;/p&gt;
&lt;h2 id=&#34;卷volume&#34;&gt;卷（Volume）
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;卷是将分区格式化后, 创建了文件系统, 能够被系统所识别和访问的存储区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在最简单的情况下，一个卷和一个分区是一一对应的，比如在一块硬盘上划分了C、D两个分区，那么就有两个对应的卷&lt;/p&gt;
&lt;p&gt;但一个卷也可以跨越多个分区，甚至多块物理硬盘，例如RAID阵列，在操作系统看来就是一个跨越了多块物理盘的巨大逻辑卷&lt;/p&gt;
&lt;h2 id=&#34;windows物理磁盘的管理模式&#34;&gt;Windows物理磁盘的管理模式
&lt;/h2&gt;&lt;h3 id=&#34;基础磁盘-basic-disk&#34;&gt;基础磁盘 (Basic Disk)
&lt;/h3&gt;&lt;p&gt;这是Windows系统默认的磁盘类型，当我们初始化一块新硬盘时，系统默认会将其设置为基础磁盘&lt;/p&gt;
&lt;p&gt;它使用我们之前讨论过的传统分区表（MBR或GPT）来组织磁盘&lt;/p&gt;
&lt;p&gt;基础磁盘上的一个分区（或简单卷）不能跨越到多个物理磁盘上，每个分区都完全包含在一块物理硬盘的内部&lt;/p&gt;
&lt;h3 id=&#34;动态磁盘-dynamic-disk&#34;&gt;动态磁盘 (Dynamic Disk)
&lt;/h3&gt;&lt;p&gt;这是Windows提供的一种更高级的磁盘管理模式，它提供了基础磁盘所不具备的许多高级功能&lt;/p&gt;
&lt;p&gt;动态磁盘不使用传统的分区表来定义卷，而是使用一个逻辑磁盘管理器（LDM，Logical Disk Manager）的数据库来跟踪所有动态卷的信息，这个数据库会被复制到系统中每一个动态磁盘上，以实现冗余&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;动态磁盘允许创建跨越多个物理硬盘的卷（这实际上就是一种软件RAID的实现，后面会讲到）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;简单卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;功能上等同于基础磁盘上的一个分区，但它只能在动态磁盘上创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨区卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将来自多个物理磁盘上的未分配空间合并成一个巨大的卷&lt;/p&gt;
&lt;p&gt;数据会先写满第一块盘的空间，然后再接着写到下一块盘，类似JBOD（Just a Bunch of Disks）概念&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;带区卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将数据条带化地同时写入到多个物理磁盘上，以提高读写性能，等同于软件RAID0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜像卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将数据完全一致地写入到两块物理磁盘上，实现数据冗余，等同于软件RAID1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RAID-5 卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将数据和奇偶校验信息条带化地分布到三个或更多的物理磁盘上，等同于软件RAID5&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它无需昂贵的硬件RAID卡，就能在操作系统层面实现RAID功能，管理非常灵活&lt;/p&gt;
&lt;p&gt;但不好的是兼容性差，因为这是微软的专有技术，Linux和macOS系统通常无法原生识别动态磁盘卷&lt;/p&gt;
&lt;p&gt;此外，从动态磁盘转换回基础磁盘，需要删除磁盘上的所有卷，会导致数据丢失&lt;/p&gt;
&lt;h2 id=&#34;驱动器drive&#34;&gt;驱动器（Drive）
&lt;/h2&gt;&lt;p&gt;驱动器是指可以存储和访问数据的存储单元，它可以是分区、卷或者磁盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理驱动器&lt;/strong&gt;：真实存在的硬盘或固态盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑驱动器&lt;/strong&gt;：操作系统识别后的分区或者卷&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;虚拟驱动器&lt;/strong&gt;：通过工具在内存中创建的模拟磁盘，操作系统可像对待真实磁盘一样访问&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每一个驱动器都会有一个驱动器号&lt;/strong&gt;，是Windows系统为方便用户访问而给卷分配的标识符，例如&lt;code&gt;C:&lt;/code&gt;、&lt;code&gt;D:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们完整看到的驱动器号过程应该是这样的：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理硬盘 → 分区 → 文件系统  → 卷 → 挂载 → 驱动器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如我们插入U盘，系统会识别分区，然后作为卷挂载，它是实打实的新的硬盘空间&lt;/p&gt;
&lt;p&gt;而当用FTKImager这样的工具挂载镜像时，软件会在内存中创建一个虚拟磁盘，Windows会识别其中的卷，并给它分配一个驱动器号，之后就能在“我的电脑”里看到一个新盘符，空间来源就是镜像文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;驱动器不会用盘符标识，&lt;strong&gt;而是通过设备文件和挂载点来管理&lt;/strong&gt;，比如&lt;code&gt;/dev/sda1&lt;/code&gt;挂载到&lt;code&gt;/home&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;挂载mount&#34;&gt;挂载（Mount）
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;挂载是将存储设备（磁盘、分区、镜像、容器等）接入文件系统，从而让用户和程序能够访问其内容的过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;挂载前，设备的内容是孤立的，操作系统无法通过普通路径访问&lt;/p&gt;
&lt;p&gt;挂载后，就可以通过某个路径访问设备里的数据了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而挂载点就是操作系统用来访问挂载设备的路径或位置&lt;/strong&gt;，在Linux通常是一个空目录，比如 &lt;code&gt;/mnt/usb&lt;/code&gt;、&lt;code&gt;/media/cdrom&lt;/code&gt;，而Windows默认挂载方式是分配驱动器号，也可以挂载到空目录&lt;/p&gt;
&lt;h3 id=&#34;windows挂载&#34;&gt;windows挂载
&lt;/h3&gt;&lt;p&gt;插入U盘、使用软件挂载镜像应该都很熟悉了，这里正好借着我添加移动硬盘的过程来说一下：&lt;/p&gt;
&lt;p&gt;首先win+x组合键调出功能栏，打开磁盘管理&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251002005926909&#34; href=&#34;http://picture.928330.xyz/typora/image-20251002005926909.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251002005926909.png&#34; alt=&#34;image-20251002005926909&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;新的硬盘会显示未分配空间，是灰色的（我的分配好了），在这上面右键，选择新建简单卷：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251002012039643&#34; href=&#34;http://picture.928330.xyz/typora/image-20251002012039643.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251002012039643.png&#34; alt=&#34;image-20251002012039643&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251002012052615&#34; href=&#34;http://picture.928330.xyz/typora/image-20251002012052615.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251002012052615.png&#34; alt=&#34;image-20251002012052615&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;一直下一步默认，其中会让你选择驱动器符号和填写磁盘名称，按自己的喜好来就行&lt;/p&gt;
&lt;h3 id=&#34;linux挂载&#34;&gt;Linux挂载
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;命令行挂载&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sdb1 /mnt/usb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/dev/sdb1&lt;/code&gt;是要挂载的目标，&lt;code&gt;/mnt/usb&lt;/code&gt;是挂载点&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看挂载信息&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount        &lt;span style=&#34;color:#7f848e&#34;&gt;# 查看当前所有挂载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df -h        &lt;span style=&#34;color:#7f848e&#34;&gt;# 查看挂载的设备及占用空间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;卸载设备&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umount /mnt/usb   &lt;span style=&#34;color:#7f848e&#34;&gt;# 或 umount /dev/sdb1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Linux的文件系统是树结构，所有挂载都是挂在这个树上&lt;/p&gt;
&lt;h1 id=&#34;raid级别&#34;&gt;RAID级别
&lt;/h1&gt;&lt;p&gt;ok啊，终于进入正题了&lt;/p&gt;
&lt;p&gt;根据不同的数据组织方式和冗余策略，形成有不同的RAID级别&lt;/p&gt;
&lt;p&gt;找资料的时候看见一张特好玩的图：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;用饮水机比喻 轻松理解RAID技术 &#34; href=&#34;http://picture.928330.xyz/typora/ChMljV2ElGeIV8OBAABvKCcoLWMAAP3MgO2JJAAAG9A622.jpg&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/ChMljV2ElGeIV8OBAABvKCcoLWMAAP3MgO2JJAAAG9A622.jpg&#34; alt=&#34;用饮水机比喻 轻松理解RAID技术 &#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;等看完下面的内容就懂了，虽然不太准确，但还是挺形象的hhh&lt;/p&gt;
&lt;div class=&#34;alert alert-tip&#34;&gt;
    &lt;div class=&#34;alert-header&#34;&gt;
        &lt;span class=&#34;alert-icon&#34;&gt;
            💡
        &lt;/span&gt;
        &lt;span class=&#34;alert-title&#34;&gt;
            Tip
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;alert-content&#34;&gt;
        &lt;p&gt;图里前三个并不是RAID的概念，而是数据存取/服务部署的概念，最好了解一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Standalone（单机部署/单盘存取）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只能从一块硬盘获取数据，如果硬盘挂掉，那么数据就不可用&lt;/p&gt;
&lt;p&gt;对于服务，则是只把服务部署在一个主机，服务坏了就坏了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hotswap（热插拔）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;热插拔是指在系统运行过程中，可以直接插入或拔出硬件设备，而不需要关机或重启系统&lt;/p&gt;
&lt;p&gt;而**热备技术（HotSpare，简称HS）**就是依靠它实现：一块硬盘工作，另一块硬盘作为热备，当主盘故障时系统自动切换到备用盘&lt;/p&gt;
&lt;p&gt;服务部署也是同理，以一个服务作为热备，随时顶替&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cluster（集群）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同一数据存储在多个硬盘里/同一服务部署在多台主机上，形成集群，一个坏了另一个还能用&lt;/p&gt;
&lt;p&gt;和HS不一样的是会切换硬盘/主机&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯，图里的这种幽默也由此可见一斑了&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;raid0条带化&#34;&gt;RAID0：条带化
&lt;/h2&gt;&lt;p&gt;2个以上硬盘并联&lt;/p&gt;
&lt;p&gt;将数据分块，无冗余地并行写入阵列中的所有磁盘，空间利用率高高的，就是磁盘本身的容量&lt;/p&gt;
&lt;p&gt;读写性能极高，是所有RAID级别中理论速度最快的&lt;/p&gt;
&lt;p&gt;但也因为没有任何数据冗余，任何一块磁盘损坏都会导致所有数据的丢失&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/RAID_0.svg/250px-RAID_0.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/RAID_0.svg/250px-RAID_0.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid1镜像&#34;&gt;RAID1：镜像
&lt;/h2&gt;&lt;p&gt;将数据完整地复制到另一块或多块磁盘上，形成互为镜像的副本，提供了很高的数据安全性&lt;/p&gt;
&lt;p&gt;但其磁盘空间利用率只有一半，并且写入性能相比单盘没有提升（没有使用条带化），是比较不行的冗余方式&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/RAID_1.svg/250px-RAID_1.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/RAID_1.svg/250px-RAID_1.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid2位级条带化汉明码校验&#34;&gt;RAID2：位级条带化+汉明码校验
&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;位&lt;/strong&gt;级别上对数据进行条带化，并使用专门的磁盘存储汉明码进行错误校验，实时纠正单位数据错误&lt;/p&gt;
&lt;p&gt;这种方式实现复杂，可用空间是(N-P)*S，其中N是总盘数，P是校验盘数，S是盘容量&lt;/p&gt;
&lt;p&gt;校验盘的数量P与数据盘的数量有关，关系有点复杂，就不展开了&lt;/p&gt;
&lt;p&gt;随着现代硬盘自带纠错功能，该级别已被市场淘汰了&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/RAID2_arch.svg/500px-RAID2_arch.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/RAID2_arch.svg/500px-RAID2_arch.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid3块级条带化专用校验盘&#34;&gt;RAID3：块级条带化+专用校验盘
&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;字节&lt;/strong&gt;级别上进行数据条带化，使用一块专用的磁盘来存储所有数据的奇偶校验信息，可用空间是(N-1)*S&lt;/p&gt;
&lt;p&gt;至少使用三块硬盘，如果只有两块就和RAID1一样了&lt;/p&gt;
&lt;p&gt;由于数据按字节分布在所有数据盘上，任何读写操作都需要所有磁盘协同工作，这使其不适合处理大量随机的小型读写请求，适合大块连续数据的读写，例如未压缩视频编辑&lt;/p&gt;
&lt;p&gt;但由于所有校验操作都集中在一块专用盘上，导致高并发随机写入的性能被大幅限制，因此也已很少使用&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/RAID_3.svg/330px-RAID_3.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/RAID_3.svg/330px-RAID_3.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid4块级条带化专用校验盘&#34;&gt;RAID4：块级条带化+专用校验盘
&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;块&lt;/strong&gt;级别上对数据进行条带化，并同样使用一块专用磁盘存储奇偶校验信息，所以可用空间也是(N-1)*S&lt;/p&gt;
&lt;p&gt;至少使用三块盘，理由和RAID3一样&lt;/p&gt;
&lt;p&gt;相比RAID3，改善了小文件的读取性能，因为读取请求可以由单个数据盘独立完成&lt;/p&gt;
&lt;p&gt;但写入操作时，这块专用的校验盘依然制约了性能，核心问题并未得到解决&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/RAID_4.svg/330px-RAID_4.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/RAID_4.svg/330px-RAID_4.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid5分布式奇偶校验&#34;&gt;RAID5：分布式奇偶校验
&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;块&lt;/strong&gt;级别上条带化数据，将奇偶校验信息交错地分布到所有磁盘上，性能、容量和安全性之间有很好的平衡&lt;/p&gt;
&lt;p&gt;因为奇偶校验信息占据的空间刚好是一块盘，所以可用空间也是(N-1)*S&lt;/p&gt;
&lt;p&gt;至少使用三块硬盘，如果只有两块的话就无法存储完整的条带信息了&lt;/p&gt;
&lt;p&gt;它可以在单块磁盘损坏时不丢失数据，因为后续的读取可以通过阵列中剩余的数据和奇偶校验块计算出来&lt;/p&gt;
&lt;p&gt;但由于奇偶校验计算是在整个条带上进行的，其每个写入操作都需要重新计算校验值，性能会有一定损失&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/RAID_5.svg/330px-RAID_5.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/RAID_5.svg/330px-RAID_5.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于RAID5是非常常用的类型，也是电子取证重点考察的部分，我们重点讲一下它&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RAID5的核心在于其校验数据的分布式存储，其校验原理基于异或运算(XOR，用符号&lt;code&gt;^&lt;/code&gt;代指)&lt;/p&gt;
&lt;p&gt;例如，RAID5存储方式下有A1, A2, A3三个数据块，其校验块Ap的计算方式为&lt;code&gt;Ap = A1 ^ A2 ^ A3&lt;/code&gt;，如果其中一个数据块（如A2）丢失，可以通过&lt;code&gt;A2 = A1 ^ A3 ^ Ap&lt;/code&gt;来恢复&lt;/p&gt;
&lt;p&gt;而校验块在磁盘间的分布规律，即所谓“循环方式”，是重组中最关键的一环&lt;/p&gt;
&lt;p&gt;它由两个东西决定：&lt;strong&gt;循环方向&lt;/strong&gt;和&lt;strong&gt;同步性（对称性）&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;循环方向&#34;&gt;循环方向
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;决定RAID5每条条带的奇偶校验块（P）在不同磁盘上的分布方式&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;左循环&#34;&gt;左循环
&lt;/h4&gt;&lt;p&gt;校验块&lt;code&gt;P0, P1, P2...&lt;/code&gt;从阵列的&lt;strong&gt;最后一个盘&lt;/strong&gt;开始，&lt;strong&gt;从右向左&lt;/strong&gt;依次移动&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;右循环&#34;&gt;右循环
&lt;/h4&gt;&lt;p&gt;校验块&lt;code&gt;P0, P1, P2...&lt;/code&gt;从阵列的&lt;strong&gt;第一个盘&lt;/strong&gt;开始，&lt;strong&gt;从左向右&lt;/strong&gt;依次移动&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;P4&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;同步性对称性&#34;&gt;同步性（对称性）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;决定写数据和校验时，磁盘是否按固定顺序同时参与写入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面内容我们默认使用左循环的方式，填入D0~D8这九个数据块&lt;/p&gt;
&lt;h4 id=&#34;异步不对称&#34;&gt;异步（不对称）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;下一个数据条带的起始数据块总是从0号盘开始写入，不考虑上一行校验块的位置&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
          &lt;td&gt;D2&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
          &lt;td&gt;D4&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
          &lt;td&gt;D5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;D6&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;D7&lt;/td&gt;
          &lt;td&gt;D8&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其实就是每行从0依次由低到高填入&lt;/p&gt;
&lt;h4 id=&#34;同步对称&#34;&gt;同步（对称）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;下一个数据条带的起始数据块紧跟在当前条带校验块所在的磁盘之后，如果校验块在最后一个盘，则起始数据块回到0号盘&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
          &lt;td&gt;D2&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;D4&lt;/td&gt;
          &lt;td&gt;D5&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;D8&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;D6&lt;/td&gt;
          &lt;td&gt;D7&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;P5&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;先判断下一个条带的校验块位于哪个磁盘，然后将数据写入校验块所在的磁盘的下一个磁盘&lt;/p&gt;
&lt;p&gt;之后向高号盘写入，直至该条带内编号最大的数据块写满后，再回到同条带内的0号盘写入，直至写满条带&lt;/p&gt;
&lt;p&gt;比如条带三，因为校验块是Disk1，数据写入顺序就是D6（Disk2）-&amp;gt; D7（Disk3）-&amp;gt; D8（Disk0）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至此，我们就掌握了完整的RAID5写入标准数据与校验数据的方式&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;raid6双分布式奇偶校验&#34;&gt;RAID6：双分布式奇偶校验
&lt;/h2&gt;&lt;p&gt;在RAID5的基础上增加了第二个独立的校验块，并将两种校验信息都交错分布在所有磁盘上&lt;/p&gt;
&lt;p&gt;有两组独立的校验信息，占用的总空间等于两块磁盘的容量，所以可用空间是(N-2)*S&lt;/p&gt;
&lt;p&gt;至少需要4块磁盘，可以容忍两块磁盘同时损坏&lt;/p&gt;
&lt;p&gt;但也因为要进行两次校验计算，RAID6的写入性能，尤其是小数据块的随机写入，通常低于RAID5&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;img&#34; href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/RAID_6.svg/330px-RAID_6.svg.png&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/RAID_6.svg/330px-RAID_6.svg.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;raid10-10&#34;&gt;RAID10 (1+0)
&lt;/h2&gt;&lt;p&gt;先将磁盘两两配对做RAID1（镜像），然后再将这些镜像对组合成一个RAID0（条带化）&lt;/p&gt;
&lt;p&gt;兼具RAID1的高可靠性和RAID0的高性能，只要每个镜像对中至少有一块磁盘正常，数据就不会丢失&lt;/p&gt;
&lt;p&gt;但成本高，且磁盘利用率和RAID1一样，只有50%&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;D2&lt;/td&gt;
          &lt;td&gt;D2&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Disk0/1是镜像组1，Disk2/3是镜像组2&lt;/p&gt;
&lt;p&gt;使用RAID0对镜像组条带化后，多组镜像同时读写&lt;/p&gt;
&lt;h2 id=&#34;raid50-50&#34;&gt;RAID50 (5+0)
&lt;/h2&gt;&lt;p&gt;先将磁盘分组构建多个RAID5阵列，再将这些RAID5阵列组合成一个RAID0&lt;/p&gt;
&lt;p&gt;每个子RAID5组都允许坏一块盘，提供了比单个RAID5更高的性能和更好的容错能力&lt;/p&gt;
&lt;p&gt;可用空间是K*(M-1)*S，K是RAID5子阵列的数量，M是每个子阵列中的磁盘数量&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
          &lt;th&gt;Disk4&lt;/th&gt;
          &lt;th&gt;Disk5&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
          &lt;td&gt;D4&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;D5&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;D6&lt;/td&gt;
          &lt;td&gt;D7&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
          &lt;td&gt;D8&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;前3块盘是RAID5组1，后3块盘是RAID5组2&lt;/p&gt;
&lt;p&gt;RAID0跨两组条带化后，多组并行，提高性能&lt;/p&gt;
&lt;h2 id=&#34;raid60-60&#34;&gt;RAID60 (6+0)
&lt;/h2&gt;&lt;p&gt;先将磁盘分组构建多个RAID6阵列，再将这些RAID6阵列组合成一个RAID0&lt;/p&gt;
&lt;p&gt;每个子RAID6组都允许坏两块盘，提供了极高的性能和顶级的容错能力&lt;/p&gt;
&lt;p&gt;可用空间是K*(M-2)*S&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;条带号&lt;/th&gt;
          &lt;th&gt;Disk0&lt;/th&gt;
          &lt;th&gt;Disk1&lt;/th&gt;
          &lt;th&gt;Disk2&lt;/th&gt;
          &lt;th&gt;Disk3&lt;/th&gt;
          &lt;th&gt;Disk4&lt;/th&gt;
          &lt;th&gt;Disk5&lt;/th&gt;
          &lt;th&gt;Disk6&lt;/th&gt;
          &lt;th&gt;Disk7&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;D0&lt;/td&gt;
          &lt;td&gt;D1&lt;/td&gt;
          &lt;td&gt;P0&lt;/td&gt;
          &lt;td&gt;Q0&lt;/td&gt;
          &lt;td&gt;D4&lt;/td&gt;
          &lt;td&gt;D5&lt;/td&gt;
          &lt;td&gt;P1&lt;/td&gt;
          &lt;td&gt;Q1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;D2&lt;/td&gt;
          &lt;td&gt;P2&lt;/td&gt;
          &lt;td&gt;Q2&lt;/td&gt;
          &lt;td&gt;D3&lt;/td&gt;
          &lt;td&gt;D6&lt;/td&gt;
          &lt;td&gt;P3&lt;/td&gt;
          &lt;td&gt;Q3&lt;/td&gt;
          &lt;td&gt;D7&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;每组4块盘，RAID0跨两组条带化，提升性能&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面三种方式和RAID0组合都是为了在高容错的基础上提高读写效率&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;raid的实现模式&#34;&gt;RAID的实现模式
&lt;/h1&gt;&lt;h2 id=&#34;软件raid&#34;&gt;软件RAID
&lt;/h2&gt;&lt;p&gt;所有数据和校验运算都由CPU负责，成本低廉，无需额外硬件，但会占用CPU资源，影响系统性能&lt;/p&gt;
&lt;p&gt;例如操作系统内置的RAID功能，或者主板芯片组提供的RAID功能，都是软件RAID&lt;/p&gt;
&lt;p&gt;不过主板损坏后，可能难以找到同款主板来重建RAID&lt;/p&gt;
&lt;h2 id=&#34;硬件raid&#34;&gt;硬件RAID
&lt;/h2&gt;&lt;p&gt;通过一块专用的RAID控制器卡来实现，该卡上有自己的处理器（称作ROC, RAID-on-Chip）、缓存和BIOS，独立处理所有RAID运算，对主CPU透明&lt;/p&gt;
&lt;p&gt;性能高，不占用主机CPU资源，通常有缓存和备用电池以防掉电数据丢失，可靠性高，易于迁移，但成本较高&lt;/p&gt;
&lt;h1 id=&#34;raid重组&#34;&gt;RAID重组
&lt;/h1&gt;&lt;p&gt;要成功手动重组一个RAID阵列，必须确定以下三个东西：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;RAID类型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;条带大小&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环方式&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2023美亚&#34;&gt;2023美亚
&lt;/h2&gt;&lt;p&gt;检材给了三个镜像：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928164412452&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928164412452.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928164412452.png&#34; alt=&#34;image-20250928164412452&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;usf&#34;&gt;USF
&lt;/h3&gt;&lt;p&gt;这个工具强到离谱，速度快而且非常自动化，非常推荐使用&lt;/p&gt;
&lt;h4 id=&#34;自动重组&#34;&gt;自动重组
&lt;/h4&gt;&lt;p&gt;打开三个镜像：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928164318386&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928164318386.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928164318386.png&#34; alt=&#34;image-20250928164318386&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928164522254&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928164522254.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928164522254.png&#34; alt=&#34;image-20250928164522254&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;在左侧显示已经添加后，点击reflash刷新，可以看已经自动重组完成了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928170957861&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928170957861.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928170957861.png&#34; alt=&#34;image-20250928170957861&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;其中三个NAS磁盘都被划分成了一模一样的三个分区：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mirror component (Ext2/3/4) partition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RAID1阵列的组件，用于存放NAS的操作系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SWAP partition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用作Linux系统的交换分区（虚拟内存），在NAS中，这个分区通常也会被设置为一个RAID1阵列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RAID5 component partition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RAID5阵列的组件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三块5.40GB硬盘组成的RAID5阵列，可用容量为&lt;code&gt;(3-1) * 5.40 GB = 10.80 GB&lt;/code&gt;，也就是组好的SG7:2的大小&lt;/p&gt;
&lt;p&gt;而下面重组完成的卷大小是10GB，非常合理&lt;/p&gt;
&lt;p&gt;右键对应的RAID分区，选择查看信息，可以看到具体的RAID情况：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250930162538750&#34; href=&#34;http://picture.928330.xyz/typora/image-20250930162538750.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250930162538750.png&#34; alt=&#34;image-20250930162538750&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;查看重组后的RAID5信息：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928173043903&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928173043903.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928173043903.png&#34; alt=&#34;image-20250928173043903&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;在USF里面也能直接查看文件系统：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928212805098&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928212805098.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928212805098.png&#34; alt=&#34;image-20250928212805098&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h4 id=&#34;手动重组&#34;&gt;手动重组
&lt;/h4&gt;&lt;p&gt;除了自动分析，也能使用手动分析重组功能：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928214055410&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928214055410.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928214055410.png&#34; alt=&#34;image-20250928214055410&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928220053871&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928220053871.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928220053871.png&#34; alt=&#34;image-20250928220053871&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h4 id=&#34;导出磁盘&#34;&gt;导出磁盘
&lt;/h4&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928182313789&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928182313789.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928182313789.png&#34; alt=&#34;image-20250928182313789&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;选择一比一复制：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928182328076&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928182328076.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928182328076.png&#34; alt=&#34;image-20250928182328076&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928183645001&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928183645001.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928183645001.png&#34; alt=&#34;image-20250928183645001&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;火眼可以正常解析：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929225553541&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929225553541.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929225553541.png&#34; alt=&#34;image-20250929225553541&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;但不知道为什么不能进行火眼仿真&lt;/p&gt;
&lt;h3 id=&#34;r-studio&#34;&gt;R-Studio
&lt;/h3&gt;&lt;p&gt;点击打开镜像，把三个镜像都导进去，然后再使用右上角的RAID功能：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928204440006&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928204440006.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928204440006.png&#34; alt=&#34;image-20250928204440006&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;到这一步不知道为什么实在卡的不行，暂时缓一下，下次重启电脑后再更新（&lt;/p&gt;
&lt;h3 id=&#34;美亚计算机取证大师&#34;&gt;美亚计算机取证大师
&lt;/h3&gt;&lt;h4 id=&#34;自动重组-1&#34;&gt;自动重组
&lt;/h4&gt;&lt;p&gt;新建案例（注意这里选择添加磁盘镜像进行分析，而不是直接选择RAID重组）：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928200854922&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928200854922.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928200854922.png&#34; alt=&#34;image-20250928200854922&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;点击下一步后会自动识别出有动态磁盘，选择继续分析：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928200925018&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928200925018.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928200925018.png&#34; alt=&#34;image-20250928200925018&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;进入案件后，在证据文件这里找到RAID5，已经自动识别出来了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928201454170&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928201454170.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928201454170.png&#34; alt=&#34;image-20250928201454170&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;右键选择扫描磁盘结构：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928201526150&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928201526150.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928201526150.png&#34; alt=&#34;image-20250928201526150&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;扫完之后会多出来两个卷，就是存储了内容的卷了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928221327512&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928221327512.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928221327512.png&#34; alt=&#34;image-20250928221327512&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;点击卷就能查看文件系统：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928212858092&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928212858092.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928212858092.png&#34; alt=&#34;image-20250928212858092&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;看别人说其实还需要右键RAID5，选择RAID重组：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928201616532&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928201616532.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928201616532.png&#34; alt=&#34;image-20250928201616532&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
    &lt;div class=&#34;alert-header&#34;&gt;
        &lt;span class=&#34;alert-icon&#34;&gt;
            📝
        &lt;/span&gt;
        &lt;span class=&#34;alert-title&#34;&gt;
            Note
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;alert-content&#34;&gt;
        &lt;p&gt;这里也能看见三个盘的起始的偏移量都是4832886784字节，条带大小是128扇区，符合RAID5的规范&lt;/p&gt;
&lt;p&gt;但回顾之前使用USF的分析结果，那边说偏移量是9439232扇区，64KB&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其实这里涉及到计算：一个扇区的大小是512字节&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（以防你是跳着看的：&lt;a class=&#34;link&#34; href=&#34;#%e6%89%87%e5%8c%ba%ef%bc%88Sector%ef%bc%89&#34; &gt;扇区
    
&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;由此能计算出他们其实是一样的：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;偏移量 = 9439232扇区*512字节 = 4832886784字节&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;条带大小 = 128扇区*512字节 = 65536字节 = 64K字节&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;据说重组后才能看到文件系统，不过我做的过程里只需要扫描磁盘结构之后就能看到了，不知道这一步是什么意思，可能是方便之后导出镜像？&lt;/p&gt;
&lt;p&gt;总之以后注意一下，遇到问题再重组一下&lt;/p&gt;
&lt;h4 id=&#34;导出镜像&#34;&gt;导出镜像
&lt;/h4&gt;&lt;p&gt;右键RAID5选择制作镜像文件：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928220633293&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928220633293.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928220633293.png&#34; alt=&#34;image-20250928220633293&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这里可以选择镜像文件的格式：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250928201947883&#34; href=&#34;http://picture.928330.xyz/typora/image-20250928201947883.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250928201947883.png&#34; alt=&#34;image-20250928201947883&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;导出后还会附赠一个说明文档：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929225504653&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929225504653.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929225504653.png&#34; alt=&#34;image-20250929225504653&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;火眼能够正常解析：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929225516891&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929225516891.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929225516891.png&#34; alt=&#34;image-20250929225516891&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;弘连火眼证据分析&#34;&gt;弘连火眼证据分析
&lt;/h3&gt;&lt;p&gt;需要在工具箱里面下载使用：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929214704136&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929214704136.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929214704136.png&#34; alt=&#34;image-20250929214704136&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;使用信息查询能快速分析RAID的各种信息：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250930155819686&#34; href=&#34;http://picture.928330.xyz/typora/image-20250930155819686.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250930155819686.png&#34; alt=&#34;image-20250930155819686&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这里也是使用扇区来表示偏移量的&lt;/p&gt;
&lt;p&gt;使用重组功能，勾选自动解析，就能自动重组了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929214819769&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929214819769.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929214819769.png&#34; alt=&#34;image-20250929214819769&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;导出的文件是&lt;code&gt;.001&lt;/code&gt;格式，会放在一个火眼生成的虚拟驱动器里：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929215206710&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929215206710.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929215206710.png&#34; alt=&#34;image-20250929215206710&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这个文件也是能被正常解析的：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929225407141&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929225407141.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929225407141.png&#34; alt=&#34;image-20250929225407141&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;比较坑的是生成的虚拟驱动器想要关掉很麻烦，火眼没有这个功能，windows的磁盘管理也看不见这个驱动器&lt;/p&gt;
&lt;p&gt;试了好几次，我的步骤是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.手动删除生成的镜像（剪切也行，反正别让他在里面，让这个虚拟驱动器里面没有东西）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.在重组页面点击“清空”，把拖进去重组的镜像都删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.再次点击生成文件，此时提示找不到信息，虚拟驱动器也随之消失了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;据客服所说，关掉RAID重组工具页面就会自动卸载，不过我没试过&lt;/p&gt;
&lt;h2 id=&#34;2019&#34;&gt;2019
&lt;/h2&gt;&lt;p&gt;给出的是四个机械硬盘镜像&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250930103649432&#34; href=&#34;http://picture.928330.xyz/typora/image-20250930103649432.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250930103649432.png&#34; alt=&#34;image-20250930103649432&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;ftk--美亚取证大师&#34;&gt;FTK + 美亚取证大师
&lt;/h3&gt;&lt;p&gt;没找到其他办法，可能是因为这是硬RAID？&lt;/p&gt;
&lt;p&gt;使用FTK挂载这四个镜像（选择每个盘的.E01就可以，后面的会自动识别的）：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929010420615&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929010420615.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929010420615.png&#34; alt=&#34;image-20250929010420615&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;挂载完成后可以在检材目录下看见一个&lt;code&gt;.adcf&lt;/code&gt;文件：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929225647571&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929225647571.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929225647571.png&#34; alt=&#34;image-20250929225647571&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个&lt;code&gt;.adcf&lt;/code&gt;文件是FTK创建的缓存/差异文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;writable&lt;/code&gt;(可写入)模式时，为了保护原文件不被修改，FTK会把所有写入操作都记录在这个文件中&lt;/p&gt;
&lt;p&gt;挂载过程里你可能可能看见这样的错误提示：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20251002013300975&#34; href=&#34;http://picture.928330.xyz/typora/image-20251002013300975.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20251002013300975.png&#34; alt=&#34;image-20251002013300975&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;错误提示表明这个已经存在的&lt;code&gt;HDD1.E01.adcf&lt;/code&gt;文件已经损坏，删掉再挂载即可，会生成一个新的&lt;/p&gt;
&lt;p&gt;不知道为什么，挂载之后在文件管理器可以看见，但在磁盘管理看不见这两个驱动器：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929012450186&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929012450186.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929012450186.png&#34; alt=&#34;image-20250929012450186&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;无伤大雅，美亚是可以识别到的：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929004556468&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929004556468.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929004556468.png&#34; alt=&#34;image-20250929004556468&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929004610756&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929004610756.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929004610756.png&#34; alt=&#34;image-20250929004610756&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;全都勾选后，自动计算序列，要一点时间：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929010516351&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929010516351.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929010516351.png&#34; alt=&#34;image-20250929010516351&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;只有一种可能啊，那就是正确的了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929011513915&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929011513915.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929011513915.png&#34; alt=&#34;image-20250929011513915&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;双击应用这个序列：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929011801653&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929011801653.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929011801653.png&#34; alt=&#34;image-20250929011801653&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;已经还原了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250929012403125&#34; href=&#34;http://picture.928330.xyz/typora/image-20250929012403125.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250929012403125.png&#34; alt=&#34;image-20250929012403125&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这几个磁盘都很大，或许是挂载之后让美亚重组更方便了，才能如此迅速扫出来&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux命令（文件写入与查看篇）</title>
        <link>https://blog.928330.xyz/p/linux%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E4%B8%8E%E6%9F%A5%E7%9C%8B%E7%AF%87/</link>
        <pubDate>Wed, 27 Aug 2025 14:12:37 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/linux%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E4%B8%8E%E6%9F%A5%E7%9C%8B%E7%AF%87/</guid>
        <description>&lt;img src="http://picture.928330.xyz/typora/fcc033dfd187d8eb0d29169a672d75ce.jpg" alt="Featured image of post Linux命令（文件写入与查看篇）" /&gt;&lt;p&gt;迟来的第二篇！&lt;del&gt;其实我早就写好了，忘记发了&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;这一篇还是挺重要的，包括$符号、重定向等等，算是解决了之前看别人写的命令的很多疑惑&lt;/p&gt;
&lt;p&gt;第一篇看这里：&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/linux%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%AF%87/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux命令（文件管理篇）
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;echo--在终端显示一行文本或变量&#34;&gt;echo —— 在终端显示一行文本或变量
&lt;/h1&gt;&lt;p&gt;主要功能是将紧跟在它后面的字符串或变量的值输出到标准输出&lt;/p&gt;
&lt;h2 id=&#34;语法格式&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;字符串&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;shell的解析&#34;&gt;Shell的解析
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;echo&lt;/code&gt;在实际执行之前，Shell会先对命令行进行解析，处理各种扩展规则&lt;/p&gt;
&lt;p&gt;这使得&lt;code&gt;echo&lt;/code&gt;的行为不仅取决于它的参数内容，还取决于这些参数是如何写的&lt;/p&gt;
&lt;h3 id=&#34;命令解析顺序&#34;&gt;命令解析顺序
&lt;/h3&gt;&lt;p&gt;Shell 在执行&lt;code&gt;echo&lt;/code&gt;命令之前，会按照以下顺序解析命令行内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;变量替换&lt;/strong&gt;，例如&lt;code&gt;$USER&lt;/code&gt;、&lt;code&gt;$HOME&lt;/code&gt;等会被替换成当前环境中相应的值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命令替换&lt;/strong&gt;，例如&lt;code&gt;$(date)&lt;/code&gt; 或&lt;code&gt;date&lt;/code&gt;会被替换为命令执行后的输出结果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路径通配符&lt;/strong&gt;，如&lt;code&gt;*.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引号的解析和空格的处理&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于&lt;code&gt;$&lt;/code&gt;使用方法移步：[$符号的使用](#echo扩展：$ —— Shell中的特殊元字符)&lt;/p&gt;
&lt;h3 id=&#34;使用双引号----弱引用&#34;&gt;使用双引号 &amp;quot; &amp;quot; —— 弱引用
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;双引号内部的内容保留大部分字面意义，但允许进行变量和命令替换&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Hello &lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$USER&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;, today is &lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#c678dd&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;$USER&lt;/code&gt;被替换成当前用户名，&lt;code&gt;$(date)&lt;/code&gt;被替换成当前系统时间，输出结果可能是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello bob, today is Tue Jul 30 20:00:00 JST 2025
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;双引号还可以保留字符串中的空格，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Hello      World&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;会输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello      World
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用单引号----强引用&#34;&gt;使用单引号 &amp;rsquo; &amp;rsquo; —— 强引用
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;单引号内部的所有内容都按字面含义处理，禁止任何形式的变量和命令替换&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;Hello $USER, today is $(date)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello $USER, today is $(date)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即完全照原样输出，不做任何解析&lt;/p&gt;
&lt;h3 id=&#34;不使用引号&#34;&gt;不使用引号
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;不加引号的参数会被Shell正常解析，包括变量和命令替换&lt;/strong&gt;，但有两个值得注意的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多个空格会被压缩为一个&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果参数中有特殊字符或空格，Shell会认为它们是分隔符或命令符号&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; Hello      &lt;span style=&#34;color:#e06c75&#34;&gt;$USER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出类似：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello bob
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;空格被压缩了，只显示一个空格&lt;/p&gt;
&lt;h2 id=&#34;常用参数&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-n&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;不在末尾输出自动的换行符&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-e&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;启用对反斜杠转义字符的解释&lt;/strong&gt;，例如，&lt;code&gt;\n&lt;/code&gt;会被解释为换行，&lt;code&gt;\t&lt;/code&gt;会被解释为制表符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-E&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显式地禁用对反斜杠转义字符的解释&lt;/strong&gt;（通常是默认行为）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;显示简单的文本字符串&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Hello, Linux World!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用转义字符进行格式化输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Files found:\n\t- /path/to/file1.txt\n\t- /path/to/file2.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Files found:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - /path/to/file1.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - /path/to/file2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;echo扩展--shell中的特殊元字符&#34;&gt;echo扩展：$ —— Shell中的特殊元字符
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;$&lt;/code&gt;符号本身并不是一个命令，而是Linux Shell中的一个特殊元字符&lt;/p&gt;
&lt;p&gt;它的核心功能是进行扩展，即将其后面的内容替换成别的值，例如变量的值或命令的执行结果&lt;/p&gt;
&lt;h2 id=&#34;变量引用&#34;&gt;变量引用
&lt;/h2&gt;&lt;h3 id=&#34;引用普通变量&#34;&gt;引用普通变量
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;linux&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会输出linux&lt;/p&gt;
&lt;h3 id=&#34;引用环境变量&#34;&gt;引用环境变量
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$HOME&lt;/span&gt;              &lt;span style=&#34;color:#7f848e&#34;&gt;# 当前用户的主目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$HOSTNAME&lt;/span&gt;     &lt;span style=&#34;color:#7f848e&#34;&gt;# 当前主机名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$PATH&lt;/span&gt;                &lt;span style=&#34;color:#7f848e&#34;&gt;# 可执行程序搜索路径，即/bin和/sbin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$SHELL&lt;/span&gt;               &lt;span style=&#34;color:#7f848e&#34;&gt;# 默认shell类型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$USER&lt;/span&gt;                &lt;span style=&#34;color:#7f848e&#34;&gt;# 当前用户名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$UID&lt;/span&gt;                  &lt;span style=&#34;color:#7f848e&#34;&gt;# 当前用户ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;顺便提一嘴，查看环境变量有哪些可以使用&lt;code&gt;printenv&lt;/code&gt;、&lt;code&gt;env&lt;/code&gt;、&lt;code&gt;set&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;避免歧义&#34;&gt;避免歧义
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;${}&lt;/code&gt;的写法在变量名后紧跟其他字符时可避免歧义：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会输出linux123&lt;/p&gt;
&lt;h2 id=&#34;命令替换&#34;&gt;命令替换
&lt;/h2&gt;&lt;h3 id=&#34;使用&#34;&gt;使用$()
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#c678dd&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先执行&lt;code&gt;date&lt;/code&gt;命令，再将其输出替换到&lt;code&gt;echo&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用反引号&#34;&gt;使用反引号
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;`&lt;/span&gt;date&lt;span style=&#34;color:#98c379&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推荐使用&lt;code&gt;$()&lt;/code&gt;，因为可嵌套&lt;/p&gt;
&lt;h2 id=&#34;算术扩展&#34;&gt;算术扩展
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;使用双重括号&lt;code&gt;(())&lt;/code&gt;包裹表示算术表达式：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$((表达式))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可进行整数运算：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会输出输出3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也可以定义变量：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;$((&lt;/span&gt;x*2&lt;span style=&#34;color:#c678dd&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将会输出10&lt;/p&gt;
&lt;h2 id=&#34;特殊变量&#34;&gt;特殊变量
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Shell内置有很多特殊变量，用&lt;code&gt;$&lt;/code&gt;引用，一般在脚本里面使用，方便脚本编写：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;变量名&lt;/th&gt;
          &lt;th&gt;含义说明&lt;/th&gt;
          &lt;th&gt;示例值 / 用法&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$0&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;当前脚本的名称&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;./myscript.sh&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$1&lt;/code&gt;~&lt;code&gt;$9&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;脚本的第1到第9个参数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$1&lt;/code&gt;是第1个参数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${10}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;第10个及以上的参数，必须使用大括号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;${10}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$#&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;传递给脚本的参数个数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;3&lt;/code&gt; 表示有三个参数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;以独立字符串形式表示所有参数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;arg1&amp;quot; &amp;quot;arg2&amp;quot; &amp;quot;arg3&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$*&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;以一个整体字符串形式表示所有参数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;arg1 arg2 arg3&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$$&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;当前Shell进程的PID&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;13542&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;最近一次后台运行的进程PID&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;18321&lt;/code&gt;（如&lt;code&gt;sleep 10 &amp;amp;&lt;/code&gt;后的进程号）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;上一条命令的退出状态（0 表示成功，非 0 失败）&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;0&lt;/code&gt;表示成功，&lt;code&gt;1&lt;/code&gt;表示失败&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$-&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;当前Shell启动时使用的选项&lt;/td&gt;
          &lt;td&gt;如&lt;code&gt;himBH&lt;/code&gt;表示启用了哪些选项&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;上一条命令中的最后一个参数&lt;/td&gt;
          &lt;td&gt;比如刚运行&lt;code&gt;cp file1 file2&lt;/code&gt;，则为&lt;code&gt;file2&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;字符串处理&#34;&gt;字符串处理
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$&lt;/code&gt;结合&lt;code&gt;{}&lt;/code&gt;可进行多种扩展操作：&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;默认值处理&#34;&gt;默认值处理
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;表达式&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${var:-word}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;如果var未设置或为空，返回word&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${var:=word}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;如果var未设置或为空，返回word并将其赋值给var&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${var:?message}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;如果var未设置或为空，输出message到标准错误，并中止脚本&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${var:+word}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;如果var设置了值，返回word，否则返回空&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;var未定义或为空时输出default&lt;/p&gt;
&lt;h3 id=&#34;字符串长度&#34;&gt;字符串长度
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;${#&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;变量名&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这是一种字符串长度计算语法，会计算变量名中字符串的字符数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;linux&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;${#&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;       
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令会输出5&lt;/p&gt;
&lt;h3 id=&#34;子串截取&#34;&gt;子串截取
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;变量名&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;起始位置&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;长度&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;变量名&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;起始位置&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;起始位置0开始计数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;若不指定长度，则截取到末尾&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;若起始位置为负数，从右往左数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：定义字符串&lt;code&gt;str=&amp;quot;linuxsystem&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出linux，从位置0开始，截取5个字符&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;:&lt;span style=&#34;color:#e06c75&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出system，从位置5开始截到末尾&lt;/p&gt;
&lt;h3 id=&#34;子串删除&#34;&gt;子串删除
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${变量%模式}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;从变量值&lt;strong&gt;末尾&lt;/strong&gt;开始，删除&lt;strong&gt;最短&lt;/strong&gt;匹配的 &lt;code&gt;模式&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${变量%%模式}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;从变量值&lt;strong&gt;末尾&lt;/strong&gt;开始，删除&lt;strong&gt;最长&lt;/strong&gt;匹配的 &lt;code&gt;模式&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${变量#模式}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;从变量值&lt;strong&gt;开头&lt;/strong&gt;开始，删除&lt;strong&gt;最短&lt;/strong&gt;匹配的 &lt;code&gt;模式&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${变量##模式}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;从变量值&lt;strong&gt;开头&lt;/strong&gt;开始，删除&lt;strong&gt;最长&lt;/strong&gt;匹配的 &lt;code&gt;模式&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;/home/user/file.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;echo ${path%/*}&lt;/code&gt;  ：输出&lt;code&gt;/home/user&lt;/code&gt;
&lt;code&gt;echo ${path##*/}&lt;/code&gt;  ：输出&lt;code&gt;file.txt&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;cat--连接文件并打印到标准输出&#34;&gt;cat —— 连接文件并打印到标准输出
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;cat&lt;/code&gt;命令是Linux中一个非常基础且功能强大的文本文件处理工具&lt;/p&gt;
&lt;p&gt;它的名称是concatenate(连接)的缩写，其核心功能是将一个或多个文件的内容连接起来，并将其输出到标准输出(通常是终端屏幕)&lt;/p&gt;
&lt;h2 id=&#34;语法格式-1&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名1&amp;gt; &amp;lt;文件名2&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux标准输入输出与重定向&#34;&gt;Linux标准输入输出与重定向
&lt;/h2&gt;&lt;h3 id=&#34;标准输入输出&#34;&gt;标准输入输出
&lt;/h3&gt;&lt;p&gt;在Linux中，命令运行时默认会关联三个数据流：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;标准输入(stdin)：命令获取数据的默认来源，一般是键盘输入，文件描述符为0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准输出(stdout)：命令输出结果的默认目的地，一般是终端屏幕，文件描述符为1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准错误(stderr)：命令的错误信息输出的默认目的地，也是终端屏幕，文件描述符为2&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如执行&lt;code&gt;cat file.txt&lt;/code&gt;，程序会从标准输入中读取文件内容并写到标准输出，因此屏幕上可以看到结果&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;&amp;amp;&lt;/code&gt;+&lt;code&gt;文件描述符&lt;/code&gt;，可以表示对应输入输出的位置，比如&lt;code&gt;&amp;amp;1&lt;/code&gt;就是标准输出当前所在的位置，类似指针&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;重定向操作符&#34;&gt;重定向操作符
&lt;/h3&gt;&lt;p&gt;重定向是指把命令的标准输入或标准输出指向到其他位置（如文件），常见用法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;：把命令的标准输出重定向到指定文件，如果文件存在，会覆盖原内容，默认作用于标准输出(stdout)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt; &amp;gt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把字符串写入&lt;code&gt;test.txt&lt;/code&gt;，覆盖其原有内容&lt;/p&gt;
&lt;p&gt;因为&amp;gt;默认作用于stdout，也就是说平时代表标准输入的1省略了，他等价于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt; 1&amp;gt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;code&gt;1&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;之间不能有任何空格，否则会被解析成&lt;code&gt;echo&lt;/code&gt;后字符串的一部分，对于&lt;code&gt;0&lt;/code&gt;和&lt;code&gt;2&lt;/code&gt;也是一样&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;还可以使用空的内容重定向文件，快速做到清除文件：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;经过我的测试，这个效果和&lt;code&gt;cat &amp;gt; test.txt&lt;/code&gt;一样，执行之后要手动&lt;code&gt;ctrl+c&lt;/code&gt;退出，不然输入的内容就写进去了，或许不同系统有不同效果吧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;：把命令的标准输出以追加方式重定向到指定文件，不会覆盖原内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把字符串追加到&lt;code&gt;test.txt&lt;/code&gt;的末尾&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;：把标准输入重定向为某个文件内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;lt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会从&lt;code&gt;test.txt&lt;/code&gt;读取数据作为标准输入并显示在屏幕，结果上等同于&lt;code&gt;cat test.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不过我们一般不这样使用，而是结合其他命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sort &amp;lt; test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会对&lt;code&gt;test.txt&lt;/code&gt;内容排序后输出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;：启动多行输入模式（HereDocument）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把接下来的多行内容作为标准输入，直到遇到&lt;code&gt;EOF&lt;/code&gt;标识符，这个标识符是自己定义的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt;：把命令的标准错误流（stderr）重定向到指定文件，如果文件存在，会覆盖原内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls nofile.txt 2&amp;gt; error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把&lt;code&gt;ls&lt;/code&gt;的错误信息写入到&lt;code&gt;error.log&lt;/code&gt;文件中，而不是显示在屏幕上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;：把命令的标准错误流以追加方式重定向到指定文件，不会覆盖原内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls nofile.txt 2&amp;gt;&amp;gt; error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把错误信息追加到&lt;code&gt;error.log&lt;/code&gt;文件末尾&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;：把标准错误重定向到标准输出的位置（合并到一起）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yourcommand &amp;gt; log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令会把标准输出和标准错误都写入到&lt;code&gt;log&lt;/code&gt;文件中（先把标准输出重定向到&lt;code&gt;log&lt;/code&gt;，再把标准错误重定向到标准输出，也是&lt;code&gt;log&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同样的，&lt;code&gt;&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;amp;1&lt;/code&gt;之间不能有空格，否则&lt;code&gt;&amp;amp;1&lt;/code&gt;会被当成文件名处理&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;：同时重定向标准输出和标准错误流到指定文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yourcommand &amp;amp;&amp;gt; log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面命令也会把标准输出和标准错误都写入到&lt;code&gt;log&lt;/code&gt;文件中，一步到位，但只在bash或zsh等兼容shell中有效，老的sh不支持&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;上面我们提到的重定向都是针对当前的命令，如果想要对整个当前shell都生效，必须用&lt;code&gt;exec&lt;/code&gt;重定向：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; &amp;amp;&amp;gt; log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样之后在这个shell里的所有输出都会写进&lt;code&gt;log&lt;/code&gt;，直到恢复或退出&lt;/p&gt;
&lt;h2 id=&#34;常用参数-1&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-n&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;从1开始为所有输出行编号&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-b&lt;/td&gt;
          &lt;td&gt;与-n类似，但&lt;strong&gt;只为非空行编号&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;当遇到有连续两行以上的空白行，就代换为一行的空白行&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-E&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;在每行结束处显示一个&lt;code&gt;$&lt;/code&gt;符号&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-T&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;将Tab制表符显示为&lt;code&gt;^I&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示不可打印字符（除了换行符和 Tab）&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-e&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;等价于&lt;code&gt;-vE&lt;/code&gt;&lt;/strong&gt;：显示不可见字符，行尾加&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-A&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;等价于&lt;code&gt;-vET&lt;/code&gt;&lt;/strong&gt;：显示不可见字符，行尾加&lt;code&gt;$&lt;/code&gt;，Tab制表符显示为&lt;code&gt;^I&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-1&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;同时查看并合并多个文件的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat file1.txt file2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;cat&lt;/code&gt;会按照参数顺序，将&lt;code&gt;file1.txt&lt;/code&gt;和&lt;code&gt;file2.txt&lt;/code&gt;的内容连续地打印到屏幕上&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建新文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt; new_file.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 执行该命令后，光标会停留在下一行等待输入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 输入想要的内容，例如：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello, world.This is a new file.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 按下 Ctrl + C 组合键来保存并退出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这里&lt;code&gt;cat&lt;/code&gt;因为没有指定文件名，所以从键盘（标准输入）读取内容，而&lt;code&gt;&amp;gt;&lt;/code&gt;将这些内容重定向到了&lt;code&gt;new_file.txt&lt;/code&gt;文件中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也可以使用&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;指定标识符：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt; file.txt &lt;span style=&#34;color:#98c379&#34;&gt;&amp;lt;&amp;lt; END
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;# 输入想要的内容，例如：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;Hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;World
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;END&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# file.txt的内容会变成：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;World
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合并多个文件为一个新文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat part1.log part2.log &amp;gt; full.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;向文件末尾追加内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt;&amp;gt; file.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 输入内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 按下 Ctrl + C 结束&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以使用&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;指定标识符：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt;&amp;gt; file.txt &amp;lt;&amp;lt; END
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示文件内容并附带行号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat -n file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tac--逆序连接并打印文件内容&#34;&gt;tac —— 逆序连接并打印文件内容
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;tac&lt;/code&gt;的名称非常直观，就是&lt;code&gt;cat&lt;/code&gt;命令的反写，核心功能也与&lt;code&gt;cat&lt;/code&gt;正好相反：&lt;code&gt;cat&lt;/code&gt;从第一行开始正序显示文件内容，而&lt;code&gt;tac&lt;/code&gt;则从&lt;strong&gt;最后一行开始逆序显示文件内容&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;语法格式-2&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tac &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tac的基本执行流程&#34;&gt;tac的基本执行流程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;读取整个文件的内容&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tac&lt;/code&gt;通常是先读取完整个文件（或标准输入）到内存中（或者内部缓冲区）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按分隔符拆分内容&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;默认分隔符是换行符&lt;code&gt;\n&lt;/code&gt;，也可以用&lt;code&gt;-s&lt;/code&gt;指定其他分隔符&lt;/li&gt;
&lt;li&gt;如果使用了&lt;code&gt;-r&lt;/code&gt;，分隔符则是一个正则表达式，用于匹配多种分隔符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tac&lt;/code&gt;会把文件内容按照分隔符切分成若干“块”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;倒序输出这些块&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;按块的顺序从最后一个块开始输出到第一个块&lt;/li&gt;
&lt;li&gt;在每两个块之间加上分隔符，默认情况下，分隔符附加在块内容的后面（块后）&lt;/li&gt;
&lt;li&gt;如果加了&lt;code&gt;-b&lt;/code&gt;，分隔符放在块内容前&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出拼接成最终倒序结果&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;输出每个块以及分隔符，形成完整倒序后的文本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常用参数-2&#34;&gt;常用参数
&lt;/h2&gt;&lt;p&gt;不同于&lt;code&gt;cat&lt;/code&gt;，&lt;code&gt;tac&lt;/code&gt;的参数非常少&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-b&lt;/td&gt;
          &lt;td&gt;在每行内容之前附加分隔符（默认为换行符）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-r&lt;/td&gt;
          &lt;td&gt;将分隔符当作正则表达式来处理&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s &amp;lt;字符串&amp;gt;&lt;/td&gt;
          &lt;td&gt;使用指定的字符串作为记录分隔符，而不是默认的换行符&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-2&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tac命令的几个用法都有些难以理解，这里我们举几个具体的例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假设我们有一个&lt;code&gt;numbers.txt&lt;/code&gt;文件，内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Three&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行&lt;code&gt;tac&lt;/code&gt;命令，块分割是&lt;code&gt;One,Two&lt;/code&gt;和&lt;code&gt;Three&lt;/code&gt;，按照&lt;code&gt;块2 - 分隔符 - 块1&lt;/code&gt;的倒序，输出结果将会是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Three&lt;/span&gt; \&lt;span style=&#34;color:#e06c75&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Three&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果使用&lt;code&gt;-b&lt;/code&gt;参数，让分隔符输出在块之前，按照&lt;code&gt;分隔符 - 块2 - 块1&lt;/code&gt;的顺序，输出结果将会是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;nThree&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                   ←&lt;span style=&#34;color:#e06c75&#34;&gt;注意这一行是&lt;/span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;n造成的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;ThreeOne&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果使用&lt;code&gt;tac -s , &lt;/code&gt;，即使用&lt;code&gt;,&lt;/code&gt;作为分隔符，块分割将会变成&lt;code&gt;One&lt;/code&gt;和&lt;code&gt;Two\nThree\n&lt;/code&gt;（注意最后一行末尾也是有换行符的），按照&lt;code&gt;块2 - 分隔符 - 块1&lt;/code&gt;的倒序，输出结果将会是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;nThree&lt;/span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;n&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Three&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果使用&lt;code&gt;-b&lt;/code&gt;参数，让分隔符输出在块之前，按照&lt;code&gt;分隔符 - 块2 - 块1&lt;/code&gt;的顺序，输出结果将会是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;nThree&lt;/span&gt;\&lt;span style=&#34;color:#e06c75&#34;&gt;nOne&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Two&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Three&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;One&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查找文件中最后一次出现某个模式的行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tac log | grep -m &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tac log&lt;/code&gt;: 首先将整个日志文件按行逆序，最新的日志现在在最上面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;|&lt;/code&gt;: 将逆序后的内容通过管道传递给&lt;code&gt;grep&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;grep -m 1 &amp;quot;ERROR&amp;quot;&lt;/code&gt;: 在逆序的输出中，查找第一个匹配“ERROR”的行，因为文件已经逆序，所以这个“第一个”匹配的行实际上是原始文件中的最后一个，&lt;code&gt;-m 1&lt;/code&gt;确保&lt;code&gt;grep&lt;/code&gt;在找到后立即停止&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;less--more--分页显示文本文件内容&#34;&gt;less &amp;amp; more —— 分页显示文本文件内容
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;less&lt;/code&gt;和&lt;code&gt;more&lt;/code&gt; 是Linux中用于&lt;strong&gt;分页查看&lt;/strong&gt;长文本文件的命令&lt;/p&gt;
&lt;p&gt;当一个文件的内容超过一屏时，使用&lt;code&gt;cat&lt;/code&gt;会瞬间刷满屏幕导致无法看清前面的内容，此时就应该使用&lt;code&gt;less&lt;/code&gt;或&lt;code&gt;more&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;语法格式-3&#34;&gt;语法格式
&lt;/h2&gt;&lt;p&gt;使用方式相同：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more/less &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;从more到less的演进&#34;&gt;从more到less的演进
&lt;/h2&gt;&lt;h3 id=&#34;more&#34;&gt;more
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;more&lt;/code&gt;是Unix系统中最早的分页查看工具，意思是“更多”，表示“继续显示更多内容”&lt;/p&gt;
&lt;p&gt;它允许用户分屏浏览文本文件或命令输出，默认一页一页地显示内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但它的功能简单，交互有限，只能向下翻页（按空格键或回车键），不支持向上滚动回看已经滚过的内容&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;less&#34;&gt;less
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;less&lt;/code&gt;是对&lt;code&gt;more&lt;/code&gt;的改进版本，它其实是开玩笑地取名，含义是“less is more”（少即是多）&lt;/p&gt;
&lt;p&gt;改进点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持双向滚动（上下翻页都能用）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持搜索、跳转、更丰富的交互&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;处理大文件更高效，打开大文件时速度更快，因为它不会一次性将整个文件读入内存&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在几乎所有的现代Linux发行版中，&lt;code&gt;less&lt;/code&gt;已经完全取代&lt;code&gt;more&lt;/code&gt;成为默认和推荐的分页器&lt;/p&gt;
&lt;h2 id=&#34;交互模式下的常用按键&#34;&gt;交互模式下的常用按键
&lt;/h2&gt;&lt;p&gt;当我们使用&lt;code&gt;less&lt;/code&gt;/&lt;code&gt;more&lt;/code&gt;打开一个文件后，就进入了它的交互模式，可以使用按键进行操作&lt;/p&gt;
&lt;h3 id=&#34;more-1&#34;&gt;more
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;按键&lt;/th&gt;
          &lt;th&gt;功能&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;空格键 / f&lt;/td&gt;
          &lt;td&gt;向下翻一页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;b&lt;/td&gt;
          &lt;td&gt;向上翻一页**（部分版本支持）**&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Enter键&lt;/td&gt;
          &lt;td&gt;向下滚动一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/pattern&lt;/td&gt;
          &lt;td&gt;向下搜索字符串&lt;code&gt;pattern&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;less-1&#34;&gt;less
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;按键&lt;/th&gt;
          &lt;th&gt;功能&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;空格键 / f&lt;/td&gt;
          &lt;td&gt;向下翻一页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;b&lt;/td&gt;
          &lt;td&gt;向上翻一页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Enter键 / j / ↓&lt;/td&gt;
          &lt;td&gt;向下滚动一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;k / ↑&lt;/td&gt;
          &lt;td&gt;向上滚动一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;G&lt;/td&gt;
          &lt;td&gt;直接跳转到文件末尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;g&lt;/td&gt;
          &lt;td&gt;直接跳转到文件开头&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;d&lt;/td&gt;
          &lt;td&gt;向下滚动半页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;u&lt;/td&gt;
          &lt;td&gt;向上滚动半页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/pattern&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;向下&lt;/strong&gt;搜索字符串&lt;code&gt;pattern&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;?pattern&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;向上&lt;/strong&gt;搜索字符串&lt;code&gt;pattern&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;n&lt;/td&gt;
          &lt;td&gt;跳转到&lt;strong&gt;下一个&lt;/strong&gt;搜索匹配项&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;N&lt;/td&gt;
          &lt;td&gt;跳转到&lt;strong&gt;上一个&lt;/strong&gt;搜索匹配项&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;q&lt;/td&gt;
          &lt;td&gt;退出&lt;code&gt;less&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;h&lt;/td&gt;
          &lt;td&gt;显示帮助菜单，列出所有可用按键&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;常用参数-3&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;more-2&#34;&gt;more
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-d&lt;/td&gt;
          &lt;td&gt;显示“按空格继续，q退出”的提示信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;每次显示前清屏&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;合并连续多个空行为一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-num&lt;/td&gt;
          &lt;td&gt;设置每次显示的行数（如&lt;code&gt;-20&lt;/code&gt;表示20行）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;统计行数时，连同换行符一起计算&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;less-2&#34;&gt;less
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-N&lt;/td&gt;
          &lt;td&gt;显示行号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-S&lt;/td&gt;
          &lt;td&gt;不自动换行，横向超出屏幕的内容用&lt;code&gt;→&lt;/code&gt;标示&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-X&lt;/td&gt;
          &lt;td&gt;退出时不清屏，保留显示内容&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-z N&lt;/td&gt;
          &lt;td&gt;指定滚动的页面行数N&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;搜索时忽略大小写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-I&lt;/td&gt;
          &lt;td&gt;搜索时忽略大小写，且搜索模式固定&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-p pattern&lt;/td&gt;
          &lt;td&gt;启动后直接跳转到第一个匹配&lt;code&gt;pattern&lt;/code&gt;的地方&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-F&lt;/td&gt;
          &lt;td&gt;如果内容只有一屏，直接退出 less&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-R&lt;/td&gt;
          &lt;td&gt;显示颜色转义序列（保留颜色）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;学习过&lt;code&gt;vim&lt;/code&gt;编辑器的肯定会发现&lt;code&gt;less&lt;/code&gt;和&lt;code&gt;vim&lt;/code&gt;操作有许多相似之处，也的确如此 —— 他们都是&lt;code&gt;vi&lt;/code&gt;编辑器的后辈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:aqua&#34;&gt;&lt;strong&gt;什么？你还没有学过vim？点击即送免费课堂！&lt;/strong&gt;&lt;/span&gt;    &lt;strong&gt;&amp;ndash;&amp;gt;&lt;/strong&gt;     &lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vim完全使用教程
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用示例-3&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看一个长文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less/more log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分页查看命令输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -alh /etc | less/more
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看文件并显示行号（less独有）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less -N log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置每页显示的行数（more独有）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more -20 log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在文件中进行搜索&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;操作流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;使用&lt;code&gt;less&lt;/code&gt;打开文件后，直接按&lt;code&gt;/&lt;/code&gt;键&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入想搜索的关键词（例如&lt;code&gt;ERROR&lt;/code&gt;），再按回车&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;less&lt;/code&gt;会高亮显示第一个匹配项，可以按&lt;code&gt;n&lt;/code&gt;键跳转到下一个匹配项，按&lt;code&gt;N&lt;/code&gt;键跳转到上一个&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;head--从文件头部查看内容&#34;&gt;head —— 从文件头部查看内容
&lt;/h1&gt;&lt;p&gt;与&lt;code&gt;cat&lt;/code&gt;不同，其核心功能是显示指定文件开头的部分内容&lt;/p&gt;
&lt;h2 id=&#34;语法格式-4&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;常用参数-4&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-1&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-n &amp;lt;行数&amp;gt;&lt;br /&gt;或 -&amp;lt;行数&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件的开头N行&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c &amp;lt;字节数&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按字节数显示文件的开头内容，而不是按行数&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;控制与输出&#34;&gt;控制与输出
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-q&lt;/td&gt;
          &lt;td&gt;当处理多个文件时，不显示每个文件名前的头部标签&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;总是显示文件名头部标签&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-4&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看文件的开头10行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在不指定行数时，默认显示文件的开头10行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看文件的开头5行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head -n &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以使用下面的简写形式，效果完全一样：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head -5 /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看多个文件的头部标签&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head -n &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; file1.txt file2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;当&lt;code&gt;head&lt;/code&gt;处理多个文件时，它会默认在每个文件的内容前显示文件名作为标题（如&lt;code&gt;==&amp;gt; file1.txt &amp;lt;==&lt;/code&gt;），方便区分&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tail--从文件尾部查看内容&#34;&gt;tail —— 从文件尾部查看内容
&lt;/h1&gt;&lt;p&gt;与&lt;code&gt;head&lt;/code&gt;命令正好相反，&lt;code&gt;tail&lt;/code&gt;的核心功能是显示指定文件末尾的部分内容&lt;/p&gt;
&lt;h2 id=&#34;语法格式-5&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux日志监控&#34;&gt;Linux日志监控
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tail&lt;/code&gt;命令之所以重要，是因为它完美地契合了Linux系统管理的常见需求——日志监控&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Linux系统中，应用程序和系统服务的日志通常是不断增长的文本文件，&lt;strong&gt;最新的内容总是在文件末尾&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail&lt;/code&gt;命令最强大的功能之一就是能够&lt;strong&gt;实时地跟踪一个文件的末尾&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当新内容被追加到文件中时（例如，一条新的日志记录被写入），&lt;code&gt;tail&lt;/code&gt;可以立即将其显示在终端上，这使其成为系统管理员和开发者监控程序状态和排查问题的必备工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux管道与命令组合&#34;&gt;Linux管道与命令组合
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;管道&lt;code&gt;|&lt;/code&gt;的作用是将前一个命令的标准输出直接作为后一个命令的标准输入&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;错误信息默认不会被传递，如果要传递错误输出，可用&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;合并，比如&lt;code&gt;命令1 2&amp;gt;&amp;amp;1 | 命令2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head&lt;/code&gt;和&lt;code&gt;tail&lt;/code&gt;命令经常在管道中组合使用，以精确地提取出文件的中间部分&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-5&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-2&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-n &amp;lt;行数&amp;gt;&lt;br /&gt;或 -&amp;lt;行数&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;N是正整数：显示文件的末尾N行&lt;br /&gt;N是带&lt;code&gt;+&lt;/code&gt;的数字：从文件第N行开始输出到文件结尾（不能使用&lt;code&gt;-&amp;lt;行数&amp;gt;&lt;/code&gt;形式）&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;**持续监控并显示文件的追加内容&lt;br /&gt;**当文件增长时，新内容会实时显示出来。按&lt;code&gt;Ctrl+C&lt;/code&gt;退出&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-F&lt;/td&gt;
          &lt;td&gt;**与-f类似，但更强大&lt;br /&gt;**当被监控的文件被重命名或删除后重新创建时，-F能够智能地重新打开新文件并继续监控&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c &amp;lt;字节数&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按字节数显示文件的末尾内容，而不是按行数&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;控制与输出-1&#34;&gt;控制与输出
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-q&lt;/td&gt;
          &lt;td&gt;当处理多个文件时，不显示每个文件名前的头部标签&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;总是显示文件名头部标签&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-5&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看文件的最后10行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在不指定行数时，默认显示文件的末尾10行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从第10行开始查看文件到结尾&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail -n +10 file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看&lt;code&gt;error.log&lt;/code&gt;文件的最后100行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail -n &lt;span style=&#34;color:#d19a66&#34;&gt;100&lt;/span&gt; error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以使用下面的简写形式，效果完全一样：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail -100 error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;持续监控Nginx访问日志文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail -f /var/log/nginx/access.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;每当有新的访问请求被记录下来，该条日志就会立即显示在终端上，按&lt;code&gt;Ctrl+C&lt;/code&gt;可以停止监控&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看一个日志文件的第101行到110行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head -n &lt;span style=&#34;color:#d19a66&#34;&gt;110&lt;/span&gt; log | tail -n &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;head -n 110 large_file.log&lt;/code&gt; 先取出文件的前110行内容&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;|&lt;/code&gt; (管道符) 将这110行内容作为输入，传递给下一个命令&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tail -n 10&lt;/code&gt; 接收到这110行内容，并从中取出最后的10行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终，屏幕上显示的就是原始文件的第101行到第110行&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tee--从标准输入读取并同时写入到标准输出和文件&#34;&gt;tee —— 从标准输入读取并同时写入到标准输出和文件
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;tee&lt;/code&gt;的名称来源于水管工程中的T型三通管，功能也与之类似：&lt;/p&gt;
&lt;p&gt;它从标准输入读取数据，然后将其一分为二，一份输出到标准输出，另一份输出到一个或多个文件中&lt;/p&gt;
&lt;h2 id=&#34;语法格式-6&#34;&gt;语法格式
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;tee&lt;/code&gt;命令几乎总是与管道符&lt;code&gt;|&lt;/code&gt;结合使用，收前一个命令的输出作为自己的输入&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;某个命令&amp;gt; | tee &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux管道中的三通管&#34;&gt;Linux管道中的“三通管”
&lt;/h2&gt;&lt;p&gt;可以把&lt;code&gt;tee&lt;/code&gt;的处理想象一个水管的T型三通接头：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ┌────&amp;gt; &lt;span style=&#34;color:#e06c75&#34;&gt;stdout&lt;/span&gt;（&lt;span style=&#34;color:#e06c75&#34;&gt;屏幕&lt;/span&gt;）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;stdin&lt;/span&gt; ───┤
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                └────&amp;gt; &lt;span style=&#34;color:#e06c75&#34;&gt;文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据流（就像水流）通过管道&lt;code&gt;|&lt;/code&gt;流入&lt;code&gt;tee&lt;/code&gt;命令，而&lt;code&gt;tee&lt;/code&gt;命令就像这个三通接头，它将数据流一分为二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一股水流继续沿着管道向下流，&lt;strong&gt;流向标准输出（您的屏幕）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;另一股水流从T字的侧口流出，&lt;strong&gt;被导入到一个或多个文件中&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个特性使得我们可以在不中断管道流的情况下，既能实时查看命令输出，又能将其保存到文件中&lt;/p&gt;
&lt;h2 id=&#34;常用参数-6&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;追加模式&lt;/strong&gt;，将内容追加到指定文件的末尾，而不是覆盖原有内容&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;忽略中断信号（Ctrl+C）&lt;/strong&gt;，在长时间运行的管道任务中避免意外中断&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-6&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看&lt;code&gt;ls -l&lt;/code&gt;命令输出并同时保存到文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -l | tee file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;追加内容到日志文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;this is a message&amp;#34;&lt;/span&gt; | tee -a log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结合&lt;code&gt;sudo&lt;/code&gt;向需要root权限的文件写入内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;127.0.0.1 myapp.local&amp;#34;&lt;/span&gt; | sudo tee -a /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;不能直接使用&lt;code&gt;sudo echo &amp;quot;...&amp;quot; &amp;gt;&amp;gt; /etc/hosts&lt;/code&gt;，因为输出重定向&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;是由当前的普通用户Shell执行的，它没有权限写入&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;而在这个命令中，管道&lt;code&gt;|&lt;/code&gt;将&lt;code&gt;echo&lt;/code&gt;的输出传递给&lt;code&gt;tee&lt;/code&gt;命令&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tee&lt;/code&gt;命令是在&lt;code&gt;sudo&lt;/code&gt;的权限提升作用下运行的，可以将从管道接收到的内容写入到&lt;code&gt;/etc/hosts&lt;/code&gt;中&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将输出保存到多个文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date | tee date_log1.txt date_log2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Linux命令（文件管理篇）</title>
        <link>https://blog.928330.xyz/p/linux%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%AF%87/</link>
        <pubDate>Wed, 06 Aug 2025 13:08:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/linux%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%AF%87/</guid>
        <description>&lt;img src="http://picture.928330.xyz/typora/fb86b7621fba4d5ef41dce013ca5a72e.jpg" alt="Featured image of post Linux命令（文件管理篇）" /&gt;&lt;p&gt;系统地学习linux命令 —— 这是我从接触linux以来就一直想要做的一件事，可是始终没有找到时间&lt;/p&gt;
&lt;p&gt;现在终于得闲了，嘻嘻&lt;/p&gt;
&lt;p&gt;我个人认为，与其单独地学习linux的知识点，不如从常见的命令开始，跟着命令一起学习&lt;/p&gt;
&lt;p&gt;而且依照知识点和命令循序渐进，对于初学者应该也比较容易接受&lt;/p&gt;
&lt;p&gt;于是就有了这篇文章&lt;/p&gt;
&lt;h1 id=&#34;pwd--显示当前工作目录的完整路径&#34;&gt;pwd —— 显示当前工作目录的完整路径
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;全称是 &lt;strong&gt;p&lt;/strong&gt;rint &lt;strong&gt;w&lt;/strong&gt;orking &lt;strong&gt;d&lt;/strong&gt;irectory，用于显示当前终端所在的工作目录的完整路径&lt;/p&gt;
&lt;h2 id=&#34;语法格式&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;pwd&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;命令通常不与路径参数一起使用，因为它总是显示当前所在的位置&lt;/p&gt;
&lt;h2 id=&#34;linux工作目录&#34;&gt;Linux工作目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在Linux中，每个进程（包括正在使用的shell终端）都有一个当前工作目录，我们执行的所有相对路径命令都是基于这个目录的&lt;/li&gt;
&lt;li&gt;路径分为物理路径和逻辑路径，物理路径是文件系统上不包含任何符号链接的真实路径，逻辑路径则可能包含符号链接，&lt;code&gt;pwd&lt;/code&gt;命令可以在这两种路径之间进行切换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数&#34;&gt;常用参数
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;的参数非常少，主要就是以下两个，用于处理符号链接的情况：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-L&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;逻辑路径&lt;/strong&gt;&lt;br /&gt;显示包含符号链接的路径，这是大多数shell中的默认行为。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-P&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;物理路径&lt;/strong&gt;&lt;br /&gt;显示解析所有符号链接后的真实物理路径，不包含&lt;code&gt;.&lt;/code&gt;或&lt;code&gt;..&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例&#34;&gt;使用示例
&lt;/h2&gt;&lt;p&gt;没有示例，这个很简单，自己用去吧&lt;/p&gt;
&lt;h1 id=&#34;cd--切换当前工作目录&#34;&gt;cd —— 切换当前工作目录
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt;全名&lt;strong&gt;c&lt;/strong&gt;hange &lt;strong&gt;d&lt;/strong&gt;irectory(改变目录)，其功能是切换用户当前所在工作目录&lt;/p&gt;
&lt;h2 id=&#34;语法格式-1&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;目标路径&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux路径与特殊目录&#34;&gt;Linux路径与特殊目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;绝对路径&lt;/strong&gt;：从根目录&lt;code&gt;/&lt;/code&gt;开始的完整路径，例如&lt;code&gt;/home/user/documents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相对路径&lt;/strong&gt;：从当前工作目录开始的路径，不以&lt;code&gt;/&lt;/code&gt;开头，例如&lt;code&gt;../pictures&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特殊目录快捷方式&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;：当前用户的&lt;strong&gt;主目录&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;：&lt;strong&gt;上一次&lt;/strong&gt;所在的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;：&lt;strong&gt;当前&lt;/strong&gt;目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;..&lt;/code&gt;：&lt;strong&gt;上一级&lt;/strong&gt;目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-1&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-L&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;遵循逻辑路径&lt;/strong&gt;&lt;br /&gt;如果要切换到的目录是一个符号链接，则进入该符号链接本身。这是默认行为&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-P&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;遵循物理路径&lt;/strong&gt;&lt;br /&gt;在切换目录前，解析所有的符号链接，直接进入其指向的真实物理目录&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-1&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用绝对路径切换到系统日志目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; /var/log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用相对路径进入当前目录下的子目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; dir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;返回主目录，有两种方式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不带任何参数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;或者使用&lt;code&gt;~&lt;/code&gt;快捷方式：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换到上一级目录 —— 这是日常操作中使用频率非常高的命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在当前目录和上一个目录之间切换&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换到包含特殊字符的目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;My Documents&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果目录名包含空格或其它特殊字符，需要用引号将其包裹起来&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ls--显示目录中的文件及其属性信息&#34;&gt;ls —— 显示目录中的文件及其属性信息
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-2&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件目录名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux的目录特点&#34;&gt;Linux的目录特点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;linux文件或者目录名称最长可达256个字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以&lt;code&gt;.&lt;/code&gt;开头的文件是隐藏文件，需要用&lt;code&gt;-a&lt;/code&gt;参数才能显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt;代表当前目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;..&lt;/code&gt;代表上一级目录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux匹配技法&#34;&gt;Linux匹配技法
&lt;/h2&gt;&lt;p&gt;使用命令对文件进行操作的时候，如果有很多文件需要处理，我们一个个去寻找、执行，那就太过耗时&lt;/p&gt;
&lt;p&gt;为了减少时间，我们可以使用正则，也能使用shell自带的匹配方式，下面就来介绍两种&lt;/p&gt;
&lt;h3 id=&#34;通配符与pattern&#34;&gt;通配符与PATTERN
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Linux通配符是shell提供的一种字符模式匹配机制（PATTERN），常用于文件名匹配与路径匹配&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它属于通配符扩展机制，不是正则表达式，但语法上有些相似&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;星号&#34;&gt;星号：*
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;*&lt;/code&gt;可以匹配任意数量的任意字符（包括 0 个字符）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匹配所有以 &lt;code&gt;.txt&lt;/code&gt; 结尾的文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls *.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;匹配所有以 &lt;code&gt;file&lt;/code&gt; 开头的文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls file*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;问号&#34;&gt;问号：?
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;?&lt;/code&gt;可以匹配任意一个字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匹配&lt;code&gt;file1.txt&lt;/code&gt;、&lt;code&gt;fileA.txt&lt;/code&gt;，但不匹配&lt;code&gt;file10.txt&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls file?.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;中括号&#34;&gt;中括号：[]
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;匹配&lt;code&gt;[]&lt;/code&gt;内的任意一个字符或字符范围&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匹配 &lt;code&gt;file1.txt&lt;/code&gt;、&lt;code&gt;file2.txt&lt;/code&gt;、&lt;code&gt;file3.txt&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls file&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;123&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在&lt;code&gt;[]&lt;/code&gt;中使用连字符&lt;code&gt;-&lt;/code&gt;表示字符范围&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匹配 &lt;code&gt;filea.txt&lt;/code&gt; 到 &lt;code&gt;filez.txt&lt;/code&gt; 的所有单个字母文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls file&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可加 &lt;code&gt;^&lt;/code&gt; 或 &lt;code&gt;!&lt;/code&gt; 表示取反（排除匹配）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匹配不包含小写字母的文件名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls file&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;!a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;大括号扩展&#34;&gt;大括号扩展
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;大括号扩展用于生成字符串序列，执行前由shell展开，并不会匹配文件名&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;简单列举&#34;&gt;简单列举
&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;前缀&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;值1,值2,...&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;&amp;lt;后缀&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; file&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;A,B,C&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;展开为&lt;code&gt;fileA.txt fileB.txt fileC.txt&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;数字序列&#34;&gt;数字序列
&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;起始..结束&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; file&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;1..5&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;展开为&lt;code&gt;file1.txt file2.txt file3.txt file4.txt file5.txt&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;字符序列&#34;&gt;字符序列
&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;a..z&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo {a..d}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;展开为&lt;code&gt;a b c d&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;带步进的序列&#34;&gt;带步进的序列
&lt;/h4&gt;&lt;p&gt;格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;起始..结束..步长&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;1..10..2&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;展开为&lt;code&gt;1 3 5 7 9&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;嵌套大括号&#34;&gt;嵌套大括号
&lt;/h4&gt;&lt;p&gt;多个括号组合使用，会展开所有组合方式&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo {A,B}{1,2}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;展开为 &lt;code&gt;A1 A2 B1 B2&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用参数-2&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;内容显示&#34;&gt;内容显示
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示所有文件及目录，包括&lt;code&gt;.&lt;/code&gt;开头的隐藏目录&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-A&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;不显示当前目录(&lt;code&gt;.&lt;/code&gt;)和父目录(&lt;code&gt;..&lt;/code&gt;)&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-R&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归显示所有子文件&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-d&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;只显示目录本身，不列出目录内容&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件的 inode 号码&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-l&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件的详细信息，包含权限、所有者、大小、修改时间等&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-h&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;与&lt;code&gt;-l&lt;/code&gt;一起使用，以更易读的单位（如&lt;code&gt;K&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;）来显示文件大小&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件占用的磁盘块数&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-L&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示符号链接指向文件的详细信息&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;full-time&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示完整时间戳（精确到秒）&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;格式控制&#34;&gt;格式控制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-m&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;水平显示文件信息&lt;/strong&gt;&lt;br /&gt;间隔符是逗号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-F&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;在文件名后附加一个字符以表示文件类型：&lt;br /&gt;&lt;code&gt;/&lt;/code&gt;代表目录，&lt;code&gt;*&lt;/code&gt;代表可执行文件，&lt;code&gt;@&lt;/code&gt;代表符号链接&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-p&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;在目录名的末尾加上一个斜杠&lt;code&gt;/&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;与&lt;code&gt;-F&lt;/code&gt;类似但更简洁&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-1&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;强制每行只显示一个文件&lt;/strong&gt;&lt;br /&gt;没有-2，-3..&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;color=never/auto/always&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;为输出内容添加颜色以区分不同文件类型&lt;/strong&gt;&lt;br /&gt;&lt;code&gt;never&lt;/code&gt;不显示，&lt;code&gt;auto&lt;/code&gt;自动显示（默认），&lt;code&gt;always&lt;/code&gt;强制使用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-C&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按列显示&lt;/strong&gt;&lt;br /&gt;默认行为，当输出不是终端时生效&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-x&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;横向显示文件名&lt;/strong&gt;&lt;br /&gt;按行排列&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-N&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件名时不对特殊字符转义（显示原始文件名）&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;group-directories-first&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;让目录显示在前，文件显示在后&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;time=WORD&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;指定使用哪种时间&lt;/strong&gt;&lt;br /&gt;&lt;code&gt;mtime&lt;/code&gt;/&lt;code&gt;modification&lt;/code&gt;修改时间（默认）&lt;br /&gt;&lt;code&gt;atime&lt;/code&gt;/&lt;code&gt;access&lt;/code&gt;/&lt;code&gt;use&lt;/code&gt;访问时间&lt;br /&gt;&lt;code&gt;ctime&lt;/code&gt;/&lt;code&gt;change&lt;/code&gt;状态改变时间&lt;br /&gt;&lt;code&gt;birth&lt;/code&gt;创建时间&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;排序方式&#34;&gt;排序方式
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-t&lt;/td&gt;
          &lt;td&gt;按&lt;strong&gt;修改时间&lt;/strong&gt;排序，最新的文件排在最前面&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-S&lt;/td&gt;
          &lt;td&gt;按&lt;strong&gt;文件大小&lt;/strong&gt;排序，最大的文件排在最前面&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-r&lt;/td&gt;
          &lt;td&gt;将当前的排序结果&lt;strong&gt;反向&lt;/strong&gt;排列&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-X&lt;/td&gt;
          &lt;td&gt;按文件&lt;strong&gt;扩展名&lt;/strong&gt;的字母顺序排序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;按&lt;strong&gt;文件状态改变时间&lt;/strong&gt;排序（如权限变更时间）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;排序方式--sort&#34;&gt;排序方式 —— sort
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;--sort=WORD&lt;/code&gt;可以指定排序方式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;WORD&lt;/th&gt;
          &lt;th&gt;排序方式说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;none&lt;/td&gt;
          &lt;td&gt;不排序，按目录项原始顺序显示（通常是创建顺序）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;name&lt;/td&gt;
          &lt;td&gt;按名称（文件名）排序（默认行为）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;extension 或 version&lt;/td&gt;
          &lt;td&gt;按文件扩展名排序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;size&lt;/td&gt;
          &lt;td&gt;按文件大小排序（大文件在前）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;time&lt;/td&gt;
          &lt;td&gt;按默认时间（即&lt;code&gt;--time=modification&lt;/code&gt;）排序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;atime 或 access 或 use&lt;/td&gt;
          &lt;td&gt;按访问时间排序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ctime 或 status&lt;/td&gt;
          &lt;td&gt;按状态更改时间排序（如权限改变）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;birth&lt;/td&gt;
          &lt;td&gt;按创建时间排序（如果系统支持）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-2&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;显示&lt;code&gt;/dev&lt;/code&gt;目录下所有以&lt;code&gt;sd&lt;/code&gt;开头的文件列表（&lt;strong&gt;结合通配符&lt;/strong&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /dev/sd*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依据文件内容大小进行排序，显示指定目录里的文件名以及详细信息（&lt;strong&gt;组合使用参数&lt;/strong&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -Sl /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;从这里也能看出，linux命令参数是不需要使用多个&lt;code&gt;-&lt;/code&gt;的（&lt;code&gt;-S&lt;/code&gt; &lt;code&gt;-l&lt;/code&gt;），写在一起即可（&lt;code&gt;-Sl&lt;/code&gt;）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tree--以树状图格式显示目录内容&#34;&gt;tree —— 以树状图格式显示目录内容
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;会以图形化的树状结构来显示文件和目录，比&lt;code&gt;ls&lt;/code&gt;命令更直观、更清晰地展示目录的层次关系&lt;/p&gt;
&lt;p&gt;并非所有Linux发行版的最小化安装都自带此命令&lt;/p&gt;
&lt;h3 id=&#34;语法格式-3&#34;&gt;语法格式
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;目录路径&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;常用参数-3&#34;&gt;常用参数
&lt;/h3&gt;&lt;h4 id=&#34;核心功能&#34;&gt;核心功能
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-d&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;只显示目录&lt;/strong&gt;，不显示文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-L &amp;lt;层级&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;指定要显示的目录层级深度&lt;/strong&gt;&lt;br /&gt;例如，&lt;code&gt;-L 2&lt;/code&gt;表示最多显示到第二层目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示每个文件或目录的完整路径前缀&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示所有文件，包括以&lt;code&gt;.&lt;/code&gt;开头的隐藏文件&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;格式控制-1&#34;&gt;格式控制
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-h&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;以人类可读的格式（如 K, M, G）显示文件大小&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-p&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件和目录的权限&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-u&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件或目录的所有者&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-g&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示文件或目录的所属组&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;du&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示每个目录包含内容的总大小&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;内容筛选&#34;&gt;内容筛选
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-P PATTERN&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;只显示&lt;/strong&gt;匹配&lt;code&gt;PATTERN&lt;/code&gt;通配符模式的文件和目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-I PATTERN&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;不显示&lt;/strong&gt;匹配&lt;code&gt;PATTERN&lt;/code&gt;通-符模式的文件和目录&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-3&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;展示/etc目录下两层内的目录结构&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree -d -L &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只显示当前目录结构中所有以.c或.h结尾的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree -P &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;*.c|*.h&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;目录本身还是会显示出来，只是不再显示具体的文件，以便维持树状结构&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示当前目录的结构，但排除bak和none这两个目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree -I &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;bak|none&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;chmod--更改文件或目录的访问权限&#34;&gt;chmod —— 更改文件或目录的访问权限
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt;全称是&lt;strong&gt;ch&lt;/strong&gt;ange &lt;strong&gt;mod&lt;/strong&gt;e(改变模式)，其功能是更改文件或目录的访问权限，决定了哪些用户可以对它们进行读、写、执行等操作&lt;/p&gt;
&lt;h2 id=&#34;语法格式-4&#34;&gt;语法格式
&lt;/h2&gt;&lt;h3 id=&#34;数字模式&#34;&gt;数字模式
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;八进制权限码&amp;gt; &amp;lt;文件名&amp;gt;/&amp;lt;目录名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;符号模式&#34;&gt;符号模式
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;who&lt;span style=&#34;color:#56b6c2&#34;&gt;][&lt;/span&gt;operator&lt;span style=&#34;color:#56b6c2&#34;&gt;][&lt;/span&gt;permission&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;/&amp;lt;目录名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux文件权限模型&#34;&gt;Linux文件权限模型
&lt;/h2&gt;&lt;p&gt;Linux中的文件和目录权限使用三种基本权限 (Permission)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;r&lt;/code&gt;: read (读权限)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;w&lt;/code&gt;: write (写权限)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;x&lt;/code&gt;: execute (执行权限)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对文件而言&lt;/strong&gt;： 是否能运行这个文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对目录而言&lt;/strong&gt;：是否可以进入该目录（cd）或使用该路径（ln）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而这三个权限分别对应着八进制数值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读（r） = 4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;写（w） = 2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行（x） = 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过将这些权限数值相加，可以组合出不同的权限（&lt;code&gt;-&lt;/code&gt;表示没有对应权限），比如：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;数字&lt;/th&gt;
          &lt;th&gt;权限组合&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;4+2+1 = rwx&lt;/td&gt;
          &lt;td&gt;可读、可写、可执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;4+2 = rw-&lt;/td&gt;
          &lt;td&gt;可读、可写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;4+1 = r-x&lt;/td&gt;
          &lt;td&gt;可读、可执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;4 = r&amp;ndash;&lt;/td&gt;
          &lt;td&gt;只读&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0 = &amp;mdash;&lt;/td&gt;
          &lt;td&gt;没有权限&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Linux中权限分配给三类用户 (Who)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;u&lt;/code&gt;: user (文件所有者)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;g&lt;/code&gt;: group (文件所属组)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;o&lt;/code&gt;: others (其他人)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除此之外还有一个表示三类用户集合的标志：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;a&lt;/code&gt;: all (所有人, &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;的合集)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;u&lt;/code&gt;、&lt;code&gt;g&lt;/code&gt;、&lt;code&gt;o&lt;/code&gt;分别对应三个八进制权限码数值，利用三位数字组合我们就能表示出三类用户的权限，例如权限值 755 就表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户权限：7（rwx）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组权限：5（r-x）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他权限：5（r-x）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见权限对应关系如下：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;权限值&lt;/th&gt;
          &lt;th&gt;符号形式&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;777&lt;/td&gt;
          &lt;td&gt;rwxrwxrwx&lt;/td&gt;
          &lt;td&gt;所有人可读写执行（不安全）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;755&lt;/td&gt;
          &lt;td&gt;rwxr-xr-x&lt;/td&gt;
          &lt;td&gt;用户有全部权限，其他用户只能读执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;700&lt;/td&gt;
          &lt;td&gt;rwx&amp;mdash;&amp;mdash;&lt;/td&gt;
          &lt;td&gt;仅用户本人拥有权限&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;644&lt;/td&gt;
          &lt;td&gt;rw-r&amp;ndash;r&amp;ndash;&lt;/td&gt;
          &lt;td&gt;用户可读写，其他用户只读&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;600&lt;/td&gt;
          &lt;td&gt;rw&amp;mdash;&amp;mdash;-&lt;/td&gt;
          &lt;td&gt;仅用户本人可读写（常用于私密文件）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以使用之前学过的&lt;code&gt;ls -l&lt;/code&gt;命令查看权限，例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;drwxr-xr-x  2 user group 4096 Jul 29 10:00 mydir
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中的&lt;code&gt;rwxr-xr-x&lt;/code&gt;就是755&lt;/p&gt;
&lt;h2 id=&#34;符号模式-1&#34;&gt;符号模式
&lt;/h2&gt;&lt;p&gt;这是&lt;code&gt;chmod&lt;/code&gt;最直观易读的用法，它通过明确的符号来增、删或设定权限&lt;/p&gt;
&lt;p&gt;符号模式的命令由三部分构成（各部分之间没有空格，下面加空格是为了方便观看）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;who&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;operator&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;permission&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;who&lt;/code&gt; (作用对象)&lt;/strong&gt;：指定要为哪类用户更改权限
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;: user/所有者&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;: group/所属组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt;: others/其他人&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;: all/所有人（如果省略who，则默认为a）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;operator&lt;/code&gt; (操作符)&lt;/strong&gt;：指定要执行的操作
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;: &lt;strong&gt;添加&lt;/strong&gt;指定的权限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;: &lt;strong&gt;移除&lt;/strong&gt;指定的权限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;: &lt;strong&gt;覆盖&lt;/strong&gt;原有的权限，只给予指定的权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;permission&lt;/code&gt; (权限)&lt;/strong&gt;：指定&lt;code&gt;r&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;中的一种或多种&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将这三部分组合起来，就可以精确地调整权限&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以同时进行多个组合，用逗号&lt;code&gt;,&lt;/code&gt;隔开&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用参数-4&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;命令行选项&#34;&gt;命令行选项
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-R&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归地更改目录及其下所有文件和子目录的权限&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;，显示每个文件权限的更改情况&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;只在权限确实发生更改时才显示报告&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;reference=&amp;lt;参考文件&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;将权限设置成参考文件的权限&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-4&#34;&gt;使用示例
&lt;/h2&gt;&lt;h3 id=&#34;数字模式-1&#34;&gt;数字模式
&lt;/h3&gt;&lt;p&gt;这是最常用的设置权限的方法，但是需要一些记忆&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为脚本添加执行权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#d19a66&#34;&gt;755&lt;/span&gt; my_script.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这是常见用法之一，&lt;code&gt;755&lt;/code&gt;权限(&lt;code&gt;rwxr-xr-x&lt;/code&gt;)意味着：所有者可以读、写、执行；所属组和其他人可以读和执行，这使得脚本可以被所有者修改，被所有人执行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置一个私密文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#d19a66&#34;&gt;600&lt;/span&gt; private_key.pem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;600&lt;/code&gt;权限(&lt;code&gt;rw-------&lt;/code&gt;)意味着只有文件所有者可以读写该文件，其他人没有任何权限&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将/var/www/html目录以及其下所有文件和子目录的权限都设置为755（目录）或644（文件）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod -R &lt;span style=&#34;color:#d19a66&#34;&gt;755&lt;/span&gt; /var/www/html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;符号模式-2&#34;&gt;符号模式
&lt;/h3&gt;&lt;p&gt;这种模式在不希望重新计算整个三位数字，只想微调某个权限时非常有用，很方便&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为所有用户添加执行权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod a+x file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;与&lt;code&gt;chmod 755&lt;/code&gt;一样，常见于设置脚本权限&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为所属组和其他人移除写权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod go-w file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为文件所有者设置固定的读写权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#e06c75&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;rw file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;把new.txt文件权限修改成和old.txt一样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod --reference&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;old.txt new.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;chgrp--chown--更改文件或目录的所有者和所属组&#34;&gt;chgrp &amp;amp; chown —— 更改文件或目录的所有者和所属组
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;chgrp&lt;/code&gt;&lt;strong&gt;名称来源于 “&lt;strong&gt;ch&lt;/strong&gt;ange &lt;strong&gt;gr&lt;/strong&gt;ou&lt;/strong&gt;p&lt;/strong&gt;”，专门用于更改文件或目录的&lt;strong&gt;所属组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;chown&lt;/code&gt;&lt;strong&gt;名称来源于 “&lt;strong&gt;ch&lt;/strong&gt;ange &lt;strong&gt;own&lt;/strong&gt;er”，它更加强大，也更加常用，因为它既可以更改文件或目录的&lt;/strong&gt;所有者&lt;/strong&gt;，也可以同时更改&lt;strong&gt;所属组&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;语法格式-5&#34;&gt;语法格式
&lt;/h2&gt;&lt;h3 id=&#34;chown&#34;&gt;chown
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chown &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;新所有者&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;:&amp;lt;新所属组&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件&amp;gt;/&amp;lt;目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;chgrp&#34;&gt;chgrp
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chgrp &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;新所属组&amp;gt; &amp;lt;文件&amp;gt;/&amp;lt;目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux所有者与所属组&#34;&gt;Linux所有者与所属组
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在Linux中，每个文件和目录都有一个&lt;strong&gt;所有者（Owner）和一个所属组（Group）&lt;/strong&gt;，所有者通常是创建该文件的用户，而所属组允许多个用户共享对文件的访问权限，一个用户可以属于多个组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改所有权通常需要管理员权限（&lt;code&gt;sudo&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户名称和组名称在系统里是分开的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用户名存储在&lt;code&gt;/etc/passwd&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组名存储在&lt;code&gt;/etc/group&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，我们可以创建一个用户名叫&lt;code&gt;alice&lt;/code&gt;，也可以有一个组名叫&lt;code&gt;alice&lt;/code&gt;，它们是不同的实体，不冲突&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-5&#34;&gt;常用参数
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;这两个命令的大部分核心参数是通用的，只有&lt;code&gt;--from&lt;/code&gt;例外，是&lt;code&gt;chown&lt;/code&gt;独有&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-R&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归地更改目录及其子目录下所有文件和目录的所有权&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;，为每个被处理的文件打印一条所有权变更的消息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;只在所有权确实发生改变时才显示详细过程&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;from=&amp;lt;当前归属&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-(chown独有)&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/strong&gt; &lt;br /&gt; &lt;strong&gt;仅当文件的当前所有者和/或组匹配指定值时，才更改其所有权&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;reference=&amp;lt;参考文件&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;使用参考文件的所有者和所属组来设置目标文件&lt;/strong&gt;，而不是自己指定&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-5&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将file.txt的所有者更改为用户alice&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown alice file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改文件的所属组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用chgrp：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chgrp newgroup file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用chmod：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown :newgroup file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将file.txt的所有者设置为newuser，所属组设置为newgroup&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown newuser:newgroup file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将目录&lt;code&gt;/var/www/html&lt;/code&gt;及其下所有文件和子目录的所有者和所属组都设置为名为&lt;code&gt;www-data&lt;/code&gt;的用户和组&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown -R www-data:www-data /var/www/html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;www-data&lt;/code&gt;是Linux中常用的Web服务器（比如 Apache、Nginx）运行的用户和组&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mkdir--创建目录文件&#34;&gt;mkdir —— 创建目录文件
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-6&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;目录名1&amp;gt; &amp;lt;目录名2&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux的umask权限控制&#34;&gt;Linux的umask权限控制
&lt;/h2&gt;&lt;p&gt;在Linux中，每个新创建的目录或文件都会根据当前的&lt;code&gt;umask&lt;/code&gt;值决定其默认权限&lt;/p&gt;
&lt;p&gt;&lt;code&gt;umask&lt;/code&gt;是权限掩码，它会从默认的最大权限中&amp;quot;减去&amp;quot;（实际不是减法）指定的值，结果就是新建文件或目录的默认权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;默认权限&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; 最大权限 - &lt;span style=&#34;color:#e5c07b&#34;&gt;umask&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;umask&lt;/code&gt;有四位，通常我们设置&lt;code&gt;umask&lt;/code&gt;只关注后三位（用户、组、其他），第一位用于以下特殊权限控制：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;权限位&lt;/th&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;setuid&lt;/td&gt;
          &lt;td&gt;文件以创建者身份运行（对文件）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;setgid&lt;/td&gt;
          &lt;td&gt;组权限继承（对目录）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;sticky&lt;/td&gt;
          &lt;td&gt;只有文件所有者可删除（对目录）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;但在大多数实际中，&lt;strong&gt;&lt;code&gt;umask&lt;/code&gt;的第一位几乎都是 0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为我们通常不通过&lt;code&gt;umask&lt;/code&gt;控制特殊权限，而是用&lt;code&gt;chmod +s&lt;/code&gt;、&lt;code&gt;+t&lt;/code&gt;显式设置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于目录，最大默认权限是 777；对于文件，最大默认权限是 666（因为默认不为新文件设置执行权限）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;umask 为 0022&lt;/li&gt;
&lt;li&gt;新建目录的权限为 777 - 022 = 755&lt;/li&gt;
&lt;li&gt;新建文件的权限为 666 - 022 = 644&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;可以使用&lt;code&gt;umask&lt;/code&gt;命令查看当前掩码，也可以使用&lt;code&gt;umask&lt;/code&gt;新值来设置，例如：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;umask&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0027&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将修改新建目录权限为750（777-027），文件权限为640（666-027）&lt;/p&gt;
&lt;p&gt;这里需要解释一个误区：&lt;strong&gt;umask其实不是减法，而是按位操作，先对&lt;code&gt;umask&lt;/code&gt;取反后与运算&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;默认权限&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; 最大权限 &amp;amp; &lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;~umask&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;比如上面的&lt;code&gt;umask 0027&lt;/code&gt;，文件权限为 640（666-027），你会发现6-7不等于0，但按位计算就是对的&lt;/p&gt;
&lt;p&gt;我们使用二进制表示，分别计算每一位：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;默认权限 (666)&lt;/th&gt;
          &lt;th&gt;umask (0027)&lt;/th&gt;
          &lt;th&gt;~umask (按位取反)&lt;/th&gt;
          &lt;th&gt;实际权限（按位与）&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;所有者&lt;/td&gt;
          &lt;td&gt;110&lt;/td&gt;
          &lt;td&gt;000&lt;/td&gt;
          &lt;td&gt;111&lt;/td&gt;
          &lt;td&gt;110 （rw-）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;所属组&lt;/td&gt;
          &lt;td&gt;110&lt;/td&gt;
          &lt;td&gt;010&lt;/td&gt;
          &lt;td&gt;101&lt;/td&gt;
          &lt;td&gt;100 （r&amp;ndash;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;其他人&lt;/td&gt;
          &lt;td&gt;110&lt;/td&gt;
          &lt;td&gt;111&lt;/td&gt;
          &lt;td&gt;000&lt;/td&gt;
          &lt;td&gt;000 （&amp;mdash;）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;合起来就是&lt;code&gt;640&lt;/code&gt;，即&lt;code&gt;rw-r-----&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用参数-6&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-1&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-p&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归创建&lt;/strong&gt;&lt;br /&gt;当需要创建的目录，其父目录尚不存在时，这个参数会自动创建所有不存在的父目录&amp;lt;br /&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;&lt;br /&gt;每创建一个新目录，都会打印一条消息。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;权限控制&#34;&gt;权限控制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-m&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;设置权限&lt;/strong&gt;&lt;br /&gt;在创建目录的同时，直接为其设定权限（例如&lt;code&gt;-m 755&lt;/code&gt;），忽略系统的&lt;code&gt;umask&lt;/code&gt;默认值&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-6&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在当前位置一次性创建多个目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir docs images scripts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建多级目录，并显示创建过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -pv dir1/dir2/dir3/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个权限为&lt;code&gt;777&lt;/code&gt;的目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -m &lt;span style=&#34;color:#d19a66&#34;&gt;777&lt;/span&gt; dir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;touch--创建空文件更新文件的时间戳&#34;&gt;touch —— 创建空文件/更新文件的时间戳
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;touch&lt;/code&gt;有两个主要功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;如果文件不存在，则创建一个新的空文件&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;如果文件已存在，则更新该文件的访问和修改时间戳为当前时间&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语法格式-7&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux文件时间戳&#34;&gt;Linux文件时间戳
&lt;/h2&gt;&lt;p&gt;Linux系统为每个文件维护的三个主要时间戳：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;访问时间 (atime)&lt;/strong&gt;: 最后一次访问（读取）文件内容的时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修改时间 (mtime)&lt;/strong&gt;: 最后一次修改文件内容的时间。这是我们用&lt;code&gt;ls -l&lt;/code&gt;默认看到的时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更改时间 (ctime)&lt;/strong&gt;: 最后一次更改文件元数据（metadata，如权限、所有者）或内容的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;touch&lt;/code&gt;命令的主要作用就是更新这些时间戳，特别是&lt;code&gt;atime&lt;/code&gt;和&lt;code&gt;mtime&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用参数-7&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;只更改文件的访问时间（atime）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-m&lt;/td&gt;
          &lt;td&gt;只更改文件的修改时间（mtime）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;如果文件不存在，不创建新文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-r &amp;lt;文件&amp;gt;&lt;/td&gt;
          &lt;td&gt;使用另一个文件的时间戳来更新目标文件，而不是使用当前时间&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-d &amp;lt;日期字符串&amp;gt;&lt;/td&gt;
          &lt;td&gt;使用指定的日期字符串&lt;code&gt;&amp;quot;YYYY-MM-DD HH:MM:SS&amp;quot;&lt;/code&gt;来更新时间戳&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-t &amp;lt;时间戳&amp;gt;&lt;/td&gt;
          &lt;td&gt;使用指定的&lt;code&gt;[CC]YYMMDDhhmm[.ss]&lt;/code&gt;格式的时间戳来更新&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-7&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建多个空文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch read.md file.txt note.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新一个已存在文件的时间戳&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将new.txt的时间戳设置得和old.txt完全一样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch -r old.txt new.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;new.txt&lt;/code&gt;不存在，&lt;code&gt;touch&lt;/code&gt;会创建&lt;code&gt;new.txt&lt;/code&gt;文件，并将其时间戳设置为&lt;code&gt;old.txt&lt;/code&gt;的时间戳&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个指定日期的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch -d &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;2023-01-01 12:30:00&amp;#34;&lt;/span&gt; time.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个指定时间戳的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch -t 202508011030.45 time.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;find--在目录中搜索文件&#34;&gt;find —— 在目录中搜索文件
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;find&lt;/code&gt;会&lt;strong&gt;递归地&lt;/strong&gt;遍历指定的目录树，根据用户设定的条件来查找文件，并能对查找到的文件执行指定的操作&lt;/p&gt;
&lt;h2 id=&#34;语法格式-8&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find &amp;lt;起始路径&amp;gt; &amp;lt;表达式&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           /      |      &lt;span style=&#34;color:#98c379&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&lt;/span&gt;                 &amp;lt;选项&amp;gt; &amp;lt;测试&amp;gt; &amp;lt;动作&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;find命令的核心表达式引擎&#34;&gt;find命令的核心：表达式引擎
&lt;/h2&gt;&lt;p&gt;与其他命令使用简单参数不同，&lt;code&gt;find&lt;/code&gt;命令的核心是一系列&lt;strong&gt;可以组合的表达式&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;选项&amp;gt; &amp;lt;条件&amp;gt; &amp;lt;动作&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;测试（选项+条件）&lt;/strong&gt;：用来判断文件是否符合某个条件，例如按名称或大小匹配，如果符合，测试返回真&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动作&lt;/strong&gt;：指定对找到的文件执行什么操作，最常见的动作是打印路径、执行命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作符&lt;/strong&gt;：用于组合多个测试，例如&lt;code&gt;-and&lt;/code&gt;(与),&lt;code&gt;-or&lt;/code&gt;(或),&lt;code&gt;-not&lt;/code&gt;(非)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;整个&lt;code&gt;find&lt;/code&gt;命令就是构建一个逻辑表达式，&lt;code&gt;find&lt;/code&gt;会用这个表达式去测试路径下的每一个文件&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用参数-8&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;按名称路径测试&#34;&gt;按名称/路径测试
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-name /PATTERN/&lt;/td&gt;
          &lt;td&gt;按文件名匹配（区分大小写），支持通配符&lt;code&gt;*&lt;/code&gt;和&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-iname /PATTERN/&lt;/td&gt;
          &lt;td&gt;按文件名匹配（不区分大小写）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-path /PATTERN/&lt;/td&gt;
          &lt;td&gt;按完整路径（包含目录名和文件名）进行匹配&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-regex /PATTERN/&lt;/td&gt;
          &lt;td&gt;使用正则表达式匹配完整路径&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;按类型大小时间测试&#34;&gt;按类型/大小/时间测试
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-type TYPE&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按文件类型查找&lt;/strong&gt;&lt;br /&gt;&lt;code&gt;f&lt;/code&gt;代表普通文件，&lt;code&gt;d&lt;/code&gt;代表目录，&lt;code&gt;l&lt;/code&gt;代表符号链接&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-size N[cwbkMG]&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按文件大小查找&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;code&gt;N&lt;/code&gt;是数字&lt;/strong&gt;，&lt;code&gt;+N&lt;/code&gt;表示大于N，&lt;code&gt;-N&lt;/code&gt;表示小于N，&lt;code&gt;N&lt;/code&gt;表示等于N&lt;br /&gt;&lt;strong&gt;&lt;code&gt;N&lt;/code&gt;的单位&lt;/strong&gt;：&lt;code&gt;c&lt;/code&gt;(字节)，&lt;code&gt;w&lt;/code&gt;(字,2字节)，&lt;code&gt;b&lt;/code&gt;(块,512字节)，&lt;code&gt;k&lt;/code&gt;(KB)，&lt;code&gt;M&lt;/code&gt;(MB)，&lt;code&gt;G&lt;/code&gt;(GB)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-mtime N&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按修改时间查找&lt;/strong&gt;&lt;br /&gt;&lt;code&gt;N&lt;/code&gt;代表天数&lt;code&gt;+N&lt;/code&gt;表示超过N天前修改，&lt;code&gt;-N&lt;/code&gt;表示N天内修改，&lt;code&gt;N&lt;/code&gt;表示正好第N天前修改&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-ctime N&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按状态改变时间查找&lt;/strong&gt;&lt;br /&gt;类似&lt;code&gt;-mtime&lt;/code&gt;，针对权限、所有者等属性变化时间&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-atime N&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按访问时间查找&lt;/strong&gt;&lt;br /&gt;类似&lt;code&gt;-mtime&lt;/code&gt;，针对最后访问时间&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-user NAME&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按文件所有者查找&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-group NAME&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按文件所属组查找&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-perm MODE&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;按文件权限查找&lt;/strong&gt;&lt;br /&gt;支持数字（如&lt;code&gt;0755&lt;/code&gt;）或符号模式（如&lt;code&gt;u=rwx,g=rx,o=rx&lt;/code&gt;）&lt;br /&gt;&lt;code&gt;MODE&lt;/code&gt;表示权限正好等于，&lt;code&gt;-MODE&lt;/code&gt;表示完全包含，&lt;code&gt;/MODE&lt;/code&gt;表示任意一位包含&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;对结果执行的动作&#34;&gt;对结果执行的动作
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-print&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;打印出匹配文件的完整路径&lt;/strong&gt;&lt;br /&gt;这是&lt;code&gt;find&lt;/code&gt;的默认动作，通常可以省略&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-ls&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;对匹配的文件执行&lt;code&gt;ls -lids&lt;/code&gt;命令，显示详细信息&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-delete&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;删除找到的文件&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-exec COMMAND {} ;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;对每个找到的文件执行指定的&lt;code&gt;COMMAND&lt;/code&gt;命令&lt;br /&gt;&lt;code&gt;{}&lt;/code&gt;会被替换为当前文件名，&lt;code&gt;\;&lt;/code&gt;表示命令结束，必须转义！&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-ok COMMAND {} ;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;与-exec类似，但在执行每个命令前会进行交互式确认&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-prune&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;跳过指定目录，不进入递归查找&lt;br /&gt;常用：&lt;code&gt;find &amp;lt;起始目录&amp;gt; -path &amp;quot;&amp;lt;要排除的路径&amp;gt;&amp;quot; -prune -o &amp;lt;其他查找条件&amp;gt; &amp;lt;动作&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;如果要排除多个目录，可以写多个 &lt;code&gt;-path ... -prune&lt;/code&gt; 条件组合&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;逻辑操作符&#34;&gt;逻辑操作符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作符&lt;/th&gt;
          &lt;th&gt;完整形式&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;-and&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;逻辑与&lt;/strong&gt;（默认行为，可省略）表示两个条件都满足&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-o&lt;/td&gt;
          &lt;td&gt;-or&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;逻辑或&lt;/strong&gt;，表示只要满足任一条件即可&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;!&lt;/td&gt;
          &lt;td&gt;-not&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;逻辑非&lt;/strong&gt;，取反，表示不满足某个条件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;()&lt;/td&gt;
          &lt;td&gt;无&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;组合多个条件表达式&lt;/strong&gt;，用于改变默认的优先级，&lt;strong&gt;括号需加转义：&lt;code&gt;\(&lt;/code&gt; 和 &lt;code&gt;\)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-8&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在/log目录下，查找所有类型为普通文件且大小超过10MB的文件，并列出详细信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /log -type f -size +10MB -ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查找/etc目录下，最近7天内被修改过的所有文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /etc -mtime -7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查找/home下所有所有属于用户alice的，且权限为777的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /home -type f -user alice -perm &lt;span style=&#34;color:#d19a66&#34;&gt;777&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在当前目录及其所有子目录下，查找所有以.log结尾的文件，并移动到/log中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;*.log&amp;#34;&lt;/span&gt; -exec mv -n &lt;span style=&#34;color:#56b6c2&#34;&gt;{}&lt;/span&gt; /log/ &lt;span style=&#34;color:#98c379&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找出所有包含了“main”这个词的C语言源文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -type f -name &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;*.c&amp;#34;&lt;/span&gt; -exec grep -l &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在/home下查找所有.txt和.png文件，但跳过其中的/log和/mod子目录，并打印出完整路径&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /home &lt;span style=&#34;color:#98c379&#34;&gt;\(&lt;/span&gt; -path &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;./log&amp;#34;&lt;/span&gt; -o -path &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;./mod&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;\)&lt;/span&gt; -prune -o &lt;span style=&#34;color:#98c379&#34;&gt;\(&lt;/span&gt; -name &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;*.txt&amp;#34;&lt;/span&gt; -o -name &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;*.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;\)&lt;/span&gt; -print
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\( -path &amp;quot;./log&amp;quot; -o -path &amp;quot;./mod&amp;quot; \) -prune&lt;/code&gt;：&lt;strong&gt;排除这两个目录&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;：如果不是被剪枝的目录，则继续执行下一部分&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\( -name &amp;quot;*.txt&amp;quot; -o -name &amp;quot;*.png&amp;quot; \)&lt;/code&gt;：查找 txt 或 png 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-print&lt;/code&gt;：打印完整路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;最好使用括号包裹过滤和查找的条件，否则无法保证结果&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cp--复制文件目录&#34;&gt;cp —— 复制文件/目录
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-9&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;源文件1&amp;gt; &amp;lt;源文件2&amp;gt;... &amp;lt;目标文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux文件属性&#34;&gt;Linux文件属性
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;cp&lt;/code&gt;命令的很多参数都与文件属性相关，这些我们在上文大多都提到过：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个文件和目录都有其所有者和所属组&lt;/li&gt;
&lt;li&gt;每个文件都有读（r）、写（w）、执行（x）的权限
这些权限分别针对&amp;quot;所有者&amp;quot;、&amp;ldquo;所属组&amp;rdquo;、&amp;ldquo;其他人&amp;rdquo;&lt;/li&gt;
&lt;li&gt;每个文件都有多个时间戳，最常用的是最后修改时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-9&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-2&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-r, -R&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归复制&lt;/strong&gt;&lt;br /&gt;这是复制目录时必须使用的参数，它会复制该目录下所有的文件和子目录&lt;br /&gt;最好使用&lt;code&gt;-R&lt;/code&gt;，它是更标准化的写法&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;交互模式&lt;/strong&gt;&lt;br /&gt;在覆盖一个已存在的文件前，会先进行提示并要求用户确认&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-n&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;不覆盖已存在的文件&lt;/strong&gt;&lt;br /&gt;如果在目标位置有同名文件，则跳过该文件的复制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-u&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;更新复制&lt;/strong&gt;&lt;br /&gt;仅当源文件比目标文件新，或者目标文件不存在时，才执行复制操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;&lt;br /&gt;列出每个正在被复制的文件名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-p&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;保留文件属性&lt;/strong&gt;&lt;br /&gt;复制时，使新文件保留源文件的权限、所有者、时间戳等属性&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;链接&#34;&gt;链接
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-d&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;保留符号链接&lt;/strong&gt;&lt;br /&gt;当复制一个符号链接（软链接）时，直接复制链接本身，而不是它所指向的文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-l&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;创建硬链接&lt;/strong&gt;，而不是复制文件内容&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;创建符号链接&lt;/strong&gt;，而不是复制文件内容&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-a&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;归档模式&lt;/strong&gt;&lt;br /&gt;这是一个强大的组合参数，通常等效于&lt;code&gt;-dR --preserve=all&lt;/code&gt; (在某些系统中是&lt;code&gt;-pPR&lt;/code&gt;)&lt;br /&gt;它表示递归复制、保留链接、并保留所有文件属性，常用于备份&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;强制&#34;&gt;强制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;强制&lt;/strong&gt;&lt;br /&gt;如果目标文件已存在且无法打开进行写入，cp会先尝试将其删除，然后再复制&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;备份&#34;&gt;备份
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--backup[=CONTROL]&lt;/code&gt;&lt;br /&gt;或&lt;code&gt;-b[=CONTROL]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;为每个已存在的目标文件创建一个备份&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;这个和&lt;code&gt;-a&lt;/code&gt;参数不同，是用来备份目标位置同名文件的，防止误覆盖&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CONTROL可选值：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;值&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;none&lt;/td&gt;
          &lt;td&gt;不进行备份（与不加&lt;code&gt;--backup&lt;/code&gt;等效）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;numbered&lt;/td&gt;
          &lt;td&gt;使用编号方式备份文件，如：&lt;code&gt;file~&lt;/code&gt;, &lt;code&gt;file.~1~&lt;/code&gt;, &lt;code&gt;file.~2~&lt;/code&gt; 等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;existing&lt;/td&gt;
          &lt;td&gt;如果之前使用的是&lt;code&gt;numbered&lt;/code&gt;，则继续编号；否则使用 &lt;code&gt;simple&lt;/code&gt;（见下）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;simple&lt;/td&gt;
          &lt;td&gt;简单备份，文件名加一个 &lt;code&gt;~&lt;/code&gt; 号，如：&lt;code&gt;file~&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果省略&lt;code&gt;=CONTROL&lt;/code&gt;，则使用默认的备份方式，通常是&lt;code&gt;existing&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用示例-9&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;递归复制整个文件夹到指定目录下，如果目标已存在则提示是否覆盖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -Ri dir1/ dir2/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制文件到&lt;code&gt;/etc&lt;/code&gt;目录下，覆盖已有文件不再询问&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -f file /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;递归复制文件夹的内容到指定目录下，保留所有属性，只更新变动过的文件，并显示过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -auv dir1/. dir2/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意这里使用的是&lt;code&gt;dir1/.&lt;/code&gt;而不是&lt;code&gt;dir1/&lt;/code&gt;，区别在于前者不包括目录&lt;code&gt;dir1&lt;/code&gt;本身，只包括其中内容&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结合{}，把file1复制为file1.bak&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp file1&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;,.bak&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这里的命令展开就是&lt;code&gt;cp file1 file1.bak&lt;/code&gt;，是一个非常巧妙的缩写方法&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mv--移动重命名文件&#34;&gt;mv —— 移动/重命名文件
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-10&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;源文件或目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mv的工作原理&#34;&gt;mv的工作原理
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;mv&lt;/code&gt;行为根据操作是否在同一个文件系统内而有所不同&lt;/p&gt;
&lt;h3 id=&#34;在同一个文件系统内移动&#34;&gt;在同一个文件系统内移动
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;此操作几乎是瞬时完成的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv&lt;/code&gt;并不会真的移动磁盘上的数据，它只是修改了文件的路径记录（inode中的指针），所以速度极快&lt;/p&gt;
&lt;h3 id=&#34;在不同的文件系统间移动&#34;&gt;在不同的文件系统间移动
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这个过程的速度取决于文件的大小&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如从本地硬盘移动到U盘，此时&lt;code&gt;mv&lt;/code&gt;无法只修改路径记录，它会执行一个完整的复制操作，将文件内容从源位置复制到目标位置，然后在确认复制成功后删除原始文件，实际上相当于先执行&lt;code&gt;cp&lt;/code&gt;再执行&lt;code&gt;rm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实类似windows在不同盘符之间移动文件&lt;/p&gt;
&lt;h2 id=&#34;常用参数-10&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-3&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;交互模式&lt;/strong&gt;&lt;br /&gt;在覆盖一个已存在的文件前，会先进行提示并要求用户确认，可以有效防止误操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-n&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;不覆盖已存在的文件&lt;/strong&gt;&lt;br /&gt;如果在目标位置有同名文件，则跳过该操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-u&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;br /&gt;仅当源文件比目标文件新，或者目标文件不存在时，才执行移动操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;&lt;br /&gt;列出每个文件在移动前后的路径&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;强制-1&#34;&gt;强制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;强制&lt;/strong&gt;&lt;br /&gt;不经任何提示，直接覆盖已存在的目标文件，通常是默认行为，与&lt;code&gt;-i&lt;/code&gt;相反&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;备份-1&#34;&gt;备份
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-b[=CONTROL]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;**备份&lt;br /&gt;**在覆盖已存在的目标文件时，会为原目标文件创建一个备份&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;具体使用方法和&lt;code&gt;cp&lt;/code&gt;命令该参数一致：&lt;a class=&#34;link&#34; href=&#34;#%e5%a4%87%e4%bb%bd-1&#34; &gt;cp备份
    
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用示例-10&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;重命名txt文件为jpg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv file.txt file.jpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以使用&lt;code&gt;{}&lt;/code&gt;一步到位：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv file.&lt;span style=&#34;color:#56b6c2&#34;&gt;{&lt;/span&gt;txt,jpg&lt;span style=&#34;color:#56b6c2&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将当前目录下所有以.log结尾的文件，一次性全部移动到logs目录中（&lt;strong&gt;结合通配符&lt;/strong&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv *.log logs/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移动文件，显示过程，并进行确认&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv -iv file dir/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;目录名称最好加上&lt;code&gt;/&lt;/code&gt;表示为目录，否则可能进行重命名操作（如果没有该目录的话）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将目录移动到tmp目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv dir/ /tmp/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;与&lt;code&gt;cp&lt;/code&gt;不同，&lt;code&gt;mv&lt;/code&gt;在移动目录时不需要&lt;code&gt;-r&lt;/code&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rm--删除文件或目录&#34;&gt;rm —— 删除文件或目录
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-11&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件或目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux文件删除的重要特性&#34;&gt;Linux文件删除的重要特性
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;与Windows等图形界面的“移动到回收站”不同，&lt;code&gt;rm&lt;/code&gt;命令默认是永久性删除&lt;/li&gt;
&lt;li&gt;一旦文件被&lt;code&gt;rm&lt;/code&gt;删除，通常情况下无法轻易恢复，使用时谨慎再谨慎！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-11&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-r, -R&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;递归删除&lt;/strong&gt;&lt;br /&gt;这是删除目录时必须使用的参数，它会删除该目录下所有的文件和子目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;强制删除&lt;/strong&gt;&lt;br /&gt;忽略不存在的文件，并且从不提示用户进行确认，即使文件是只读的，也会直接删除。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;**交互模式&lt;br /&gt;**在删除每个文件前都会进行提示并要求用户确认，可以有效防止误删&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程，列出每个正在被删除的文件名&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-11&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;删除目录下多个文件，每个文件删除之前询问**（结合通配符）**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -i *.tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;递归删除整个目录及其内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -r old_project/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;强制递归删除整个目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf dir/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个命令组合会强制、无提示地删除一个目录及其全部内容！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是一个极其危险的命令组合，常被戏称为“删库跑路”，一定要慎用！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rmdir--删除空目录&#34;&gt;rmdir —— 删除空目录
&lt;/h1&gt;&lt;h2 id=&#34;语法格式-12&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rmdir &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;目录名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rmdir-与-rm--r&#34;&gt;rmdir 与 rm -r
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rmdir&lt;/code&gt;是一个专门用来删除空目录的命令，如果目录中含有任何文件或子目录，&lt;code&gt;rmdir&lt;/code&gt;命令都会执行失败并报错&lt;/li&gt;
&lt;li&gt;由于它只能删除空目录，所以它比&lt;code&gt;rm -r&lt;/code&gt;要安全得多&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用参数-12&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-p&lt;/td&gt;
          &lt;td&gt;**递归删除目录&lt;br /&gt;**当子目录被删除后，如果其父目录也因此变成了空目录，则一并删除&lt;br /&gt;依此类推，直到遇到非空目录为止&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-12&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;删除一个空的目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rmdir empty_dir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;递归删除空的嵌套目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rmdir -p dir1/dir2/dir3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;首先删除&lt;code&gt;dir3 &lt;/code&gt;目录&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;然后发现&lt;code&gt;dir2&lt;/code&gt;目录变空了，于是也删除&lt;code&gt;dir2&lt;/code&gt;目录&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最后发现&lt;code&gt;dir1&lt;/code&gt;目录也变空了，于是也删除&lt;code&gt;dir1&lt;/code&gt;目录&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;通过一条命令，就可以清理掉一整条空的目录路径&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同时删除多个空目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rmdir empty_dir1 empty_dir2/xxx/xxx 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tar--文件归档与压缩工具&#34;&gt;tar —— 文件归档与压缩工具
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;tar&lt;/code&gt;命令是Linux中用于打包归档和压缩/解压文件的核心工具&lt;/p&gt;
&lt;p&gt;它的名称是 tape archive（磁带归档）的缩写，最初被设计用于将文件备份到磁带上，现在广泛用于将多个文件和目录打包成一个单独的文件&lt;/p&gt;
&lt;h2 id=&#34;语法格式-13&#34;&gt;语法格式
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tar&lt;/code&gt;命令的参数风格比较独特，其主选项通常不需要在前面加&lt;code&gt;-&lt;/code&gt;，但为了统一和清晰，加上&lt;code&gt;-&lt;/code&gt;也是完全兼容的&lt;/p&gt;
&lt;h3 id=&#34;创建归档&#34;&gt;创建归档
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;主选项&lt;span style=&#34;color:#56b6c2&#34;&gt;][&lt;/span&gt;辅助选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;归档文件名&amp;gt; &amp;lt;要归档的文件或目录...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看归档内容&#34;&gt;查看归档内容
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;主选项&lt;span style=&#34;color:#56b6c2&#34;&gt;][&lt;/span&gt;辅助选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;归档文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;提取归档内容&#34;&gt;提取归档内容
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;主选项&lt;span style=&#34;color:#56b6c2&#34;&gt;][&lt;/span&gt;辅助选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;归档文件名&amp;gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;要提取的文件...&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;归档与压缩&#34;&gt;归档与压缩
&lt;/h2&gt;&lt;p&gt;理解&lt;code&gt;tar&lt;/code&gt;，需要先区分这两个概念&lt;/p&gt;
&lt;h3 id=&#34;归档&#34;&gt;归档
&lt;/h3&gt;&lt;p&gt;这是&lt;code&gt;tar&lt;/code&gt;的本职工作，它将许多文件和目录打包成一个单独的大文件（通常称为&lt;code&gt;tarball&lt;/code&gt;，以&lt;code&gt;.tar&lt;/code&gt;结尾）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个过程不减小文件总体积&lt;/strong&gt;，就像把很多零散物品放进一个大箱子里&lt;/p&gt;
&lt;h3 id=&#34;压缩&#34;&gt;压缩
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是减小文件体积的过程，由&lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;bzip2&lt;/code&gt;, &lt;code&gt;xz&lt;/code&gt;等专门的压缩工具完成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通常，我们先用&lt;code&gt;tar&lt;/code&gt;将文件归档成一个&lt;code&gt;.tar&lt;/code&gt;文件，然后再用&lt;code&gt;gzip&lt;/code&gt;等工具将其压缩成&lt;code&gt;.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar&lt;/code&gt;命令提供了便捷的参数（&lt;code&gt;-z&lt;/code&gt;, &lt;code&gt;-j&lt;/code&gt;, &lt;code&gt;-J&lt;/code&gt;），可以在一条命令内连续完成“归档”和“压缩”两个步骤&lt;/p&gt;
&lt;h2 id=&#34;常用参数-13&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;主选项必须选择其一&#34;&gt;主选项（必须选择其一）
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-c&lt;/td&gt;
          &lt;td&gt;创建一个新的归档文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-x&lt;/td&gt;
          &lt;td&gt;从归档文件中提取文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-t&lt;/td&gt;
          &lt;td&gt;列出归档文件中的内容，但不提取&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-r&lt;/td&gt;
          &lt;td&gt;向已存在的归档文件末尾追加文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-u&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;更新&lt;/strong&gt;。仅当文件比归档中的同名文件新时，才将其追加到归档中&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;辅助选项常用&#34;&gt;辅助选项（常用）
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;指定归档文件的名称&lt;br /&gt;这个参数几乎总是必需的，并且通常放在参数组合的最后&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;显示详细过程。在处理文件时，将其名称打印在屏幕上&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-z&lt;/td&gt;
          &lt;td&gt;通过&lt;code&gt;gzip&lt;/code&gt;进行压缩或解压，生成的文件通常以&lt;code&gt;.tar.gz&lt;/code&gt;或&lt;code&gt;.tgz&lt;/code&gt;结尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-j&lt;/td&gt;
          &lt;td&gt;通过&lt;code&gt;bzip2&lt;/code&gt;进行压缩或解压，生成的文件通常以&lt;code&gt;.tar.bz2&lt;/code&gt;或&lt;code&gt;.tbz2&lt;/code&gt;结尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-J&lt;/td&gt;
          &lt;td&gt;通过&lt;code&gt;xz&lt;/code&gt;进行压缩或解压，生成的文件通常以&lt;code&gt;.tar.xz&lt;/code&gt;结尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-C&lt;/td&gt;
          &lt;td&gt;指定一个目录，在解压时，&lt;code&gt;tar&lt;/code&gt;会先切换到这个目录，再开始提取文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ndash;exclude=PATTERN&lt;/td&gt;
          &lt;td&gt;在归档时，排除掉匹配&lt;code&gt;PATTERN&lt;/code&gt;模式的文件&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-13&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将file文件和dir1目录打包成一个名为archive.tar的归档文件，并显示过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -cvf archive.tar file1.txt directory1/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;先写打包后的名称（&lt;code&gt;-f&lt;/code&gt;），再列举打包的文件&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将两个目录打包并使用gzip压缩，生成archive.tar.gz&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -czf archive.tar.gz dir1/ dir2/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不解压文件，只列出archive.tar.gz压缩包里包含哪些文件和目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -tzf archive.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解压定要选择&lt;code&gt;-x&lt;/code&gt;，不选择就不会解压，只是预览&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将archive.tar.gz解压到当前tmp/目录，并显示解压过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xzvf archive.tar.gz -C /tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ln--创建文件或目录的链接&#34;&gt;ln —— 创建文件或目录的链接
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;ln&lt;/code&gt;的名称是 &lt;strong&gt;l&lt;/strong&gt;i&lt;strong&gt;n&lt;/strong&gt;k 的缩写，用于为文件或目录创建链接&lt;/p&gt;
&lt;h2 id=&#34;语法格式-14&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;源文件&amp;gt;/&amp;lt;目录&amp;gt; &amp;lt;链接名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;硬链接-hard-link-vs-符号链接-symbolic-link&#34;&gt;硬链接 (Hard Link) vs. 符号链接 (Symbolic Link)
&lt;/h2&gt;&lt;p&gt;链接是Linux文件系统的一个重要特性，它允许一个文件拥有多个可访问的路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln&lt;/code&gt;命令能创建的两种不同的链接类型：硬链接和符号链接（也称软链接）&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特性&lt;/th&gt;
          &lt;th&gt;硬链接 (Hard Link)&lt;/th&gt;
          &lt;th&gt;符号链接 (Symbolic Link / Soft Link)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;本质&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;是&lt;strong&gt;同一个文件的多个别名&lt;/strong&gt;，它们共享同一个inode号和数据块，除了路径不同外都共享&lt;/td&gt;
          &lt;td&gt;是一个&lt;strong&gt;独立的文件&lt;/strong&gt;，其内容是另一个文件的路径，类似Windows的快捷方式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;inode号&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;与源文件&lt;strong&gt;相同&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;拥有&lt;strong&gt;自己独立&lt;/strong&gt;的inode号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;权限和访问控制&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;继承&lt;/strong&gt;原文件权限&lt;/td&gt;
          &lt;td&gt;链接权限由链接自身决定（但一般是777），访问成功与否由目标文件的权限决定，同时也要考量是否能进入目标文件所在的目录（对该目录的执行权限）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;是否能识别为链接&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;❌用&lt;code&gt;ls -l&lt;/code&gt;&lt;strong&gt;看不出&lt;/strong&gt;是否为硬链接（除非看 inode）&lt;/td&gt;
          &lt;td&gt;✅用&lt;code&gt;ls -l&lt;/code&gt;&lt;strong&gt;明确显示为链接&lt;/strong&gt;，如 &lt;code&gt;link -&amp;gt; target&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;跨文件系统&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;strong&gt;不能&lt;/strong&gt;跨越不同的文件系统创建&lt;/td&gt;
          &lt;td&gt;✅&lt;strong&gt;可以&lt;/strong&gt;跨越不同的文件系统创建&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;对目录操作&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;strong&gt;不能&lt;/strong&gt;对目录创建硬链接&lt;/td&gt;
          &lt;td&gt;✅&lt;strong&gt;可以&lt;/strong&gt;对目录创建符号链接&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;删除源文件后&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;链接文件&lt;strong&gt;依然有效&lt;/strong&gt;，可以正常访问数据（直到所有硬链接都被删除）&lt;/td&gt;
          &lt;td&gt;链接文件会&lt;strong&gt;失效&lt;/strong&gt;，因为其指向的路径不再存在&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;常用参数-14&#34;&gt;常用参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;创建符号链接（软链接），不加此参数则默认创建硬链接&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;强制&lt;/strong&gt;&lt;br /&gt;如果目标位置已存在同名文件或链接，则先将其删除再创建&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;交互模式&lt;/strong&gt;&lt;br /&gt;在覆盖（删除）已存在的目标文件前进行提示&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-v&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;显示详细过程&lt;/strong&gt;&lt;br /&gt;显示每个成功创建的链接&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-14&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为file.txt创建一个名为hard_link.txt的硬链接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln file.txt hard_link.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以使用&lt;code&gt;ls -i&lt;/code&gt;命令查看，会发现它们的inode号完全相同&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在用户主目录下强制创建一个名为nginx_access.log的符号链接，指向Nginx的访问日志文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -sf /var/log/nginx/access.log ~/nginx_access.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为/mnt/disk1这个目录创建一个符号链接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /mnt/disk1 ~/disk1_link
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;执行&lt;code&gt;cd ~/disk1_link&lt;/code&gt;就等同于执行&lt;code&gt;cd /mnt/disk1&lt;/code&gt;，和快捷方式是一个用法&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;file--辨别文件类型&#34;&gt;file —— 辨别文件类型
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;file&lt;/code&gt;命令是Linux中一个用于探测并显示文件类型的工具&lt;/p&gt;
&lt;p&gt;它不依赖于文件的扩展名，而是通过一系列的测试来确定文件的真实类型&lt;/p&gt;
&lt;h2 id=&#34;语法格式-15&#34;&gt;语法格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;文件名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux文件类型与魔数&#34;&gt;Linux文件类型与“魔数”
&lt;/h2&gt;&lt;p&gt;在Windows系统中，文件类型通常由其扩展名（如&lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.exe&lt;/code&gt;）决定&lt;/p&gt;
&lt;p&gt;然而，在Linux中，文件扩展名主要是为了方便用户识别，&lt;strong&gt;系统本身并不依赖扩展名来判断文件类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个可执行文件可以没有任何扩展名！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;命令主要通过三种测试来判断文件类型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;文件系统测试&lt;/strong&gt;：首先检查文件是否是目录、符号链接、Socket等内核已知的特殊文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;魔数测试&lt;/strong&gt;：接下来，它会检查文件开头的几个字节，这部分字节被称为**“魔数”（Magic Number）**，几乎所有标准文件类型（如JPEG, PNG, ELF可执行文件）都有一个独特的、像“指纹”一样的魔数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语言测试&lt;/strong&gt;：如果文件看起来像是一个文本文档，&lt;code&gt;file&lt;/code&gt;会尝试分析其内容，判断它可能是哪种编程语言的源码（如C, Shell, Python）或配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常用参数-15&#34;&gt;常用参数
&lt;/h2&gt;&lt;h3 id=&#34;核心功能-4&#34;&gt;核心功能
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-b&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;简介模式&lt;/strong&gt;&lt;br /&gt;不输出文件名，只输出文件类型描述&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-i&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;以MIME类型格式输出，而不是人类可读的描述&lt;/strong&gt;&lt;br /&gt;例如输出&lt;code&gt;image/jpeg&lt;/code&gt;而不是&lt;code&gt;JPEG image data...&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-L&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;跟随符号链接&lt;/strong&gt;&lt;br /&gt;默认情况下，&lt;code&gt;file&lt;/code&gt;会报告这是一个符号链接；使用此参数，它会去分析链接指向的那个原始文件。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-z&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;尝试查看压缩文件内部的内容类型&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;文件列表控制&#34;&gt;文件列表控制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-f &amp;lt;列表文件&amp;gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;从指定的列表文件中读取要检查的文件名列表&lt;/strong&gt;，而不是在命令行上指定&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用示例-15&#34;&gt;使用示例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;识别一个未知文件的类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file unknown_file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输出示例&lt;/strong&gt;： &lt;code&gt;unknown_file: PNG image data, 1024 x 768, 8-bit/color RGB, non-interlaced&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;可以清晰地区分可执行的二进制文件和可读的文本文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 查看bash程序的文件类型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 查看一个shell脚本的类型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输出示例&lt;/strong&gt;： &lt;code&gt;/bin/bash: ELF 64-bit LSB pie executable, x86-64...&lt;/code&gt; &lt;code&gt;~/.bashrc: UTF-8 Unicode text&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看符号链接及其指向的原始文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 先创建一个符号链接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /bin/bash ./my_bash_link
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 默认行为：识别链接本身&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file my_bash_link
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;# 使用-L参数：识别链接指向的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file -L my_bash_link
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输出示例&lt;/strong&gt;： &lt;code&gt;my_bash_link: symbolic link to /bin/bash&lt;/code&gt; &lt;code&gt;my_bash_link: ELF 64-bit LSB pie executable, x86-64...&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;批量识别文件类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file *
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;file拓展--mime类型&#34;&gt;file拓展 —— MIME类型
&lt;/h1&gt;&lt;h2 id=&#34;什么是mime类型&#34;&gt;什么是MIME类型
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;MIME（Multipurpose Internet Mail Extensions）类型&lt;/strong&gt;，又称为&lt;strong&gt;媒体类型（Media Type）&lt;/strong&gt;，用于标识文件或数据的格式和性质&lt;/p&gt;
&lt;p&gt;它最初为电子邮件附件设计，但现在广泛应用于HTTP协议、浏览器内容协商等&lt;/p&gt;
&lt;h2 id=&#34;mime类型的格式&#34;&gt;MIME类型的格式
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;type&lt;/span&gt;/&lt;span style=&#34;color:#e06c75&#34;&gt;subtype&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;是主类型（比如 &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;application&lt;/code&gt; 等）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subtype&lt;/code&gt;是具体的格式（比如 &lt;code&gt;jpeg&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见mime类型&#34;&gt;常见MIME类型
&lt;/h2&gt;&lt;h3 id=&#34;text&#34;&gt;text
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;plain&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;纯文本内容&lt;/strong&gt;，无格式修饰（如&lt;code&gt;.txt&lt;/code&gt;文件）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;html&lt;/td&gt;
          &lt;td&gt;HTML超文本标记语言（网页源代码）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;css&lt;/td&gt;
          &lt;td&gt;层叠样式表（网页样式）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;csv&lt;/td&gt;
          &lt;td&gt;逗号分隔值文本，常用于表格或数据库导出&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;javascript / js&lt;/td&gt;
          &lt;td&gt;JavaScript脚本代码&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xml&lt;/td&gt;
          &lt;td&gt;可被人类和机器读取的标签化数据格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;markdown / md&lt;/td&gt;
          &lt;td&gt;Markdown标记语言，常用于文档编写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;yaml / yml&lt;/td&gt;
          &lt;td&gt;简洁的配置文件格式，常用于开发与部署&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;image&#34;&gt;image
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;jpeg / jpg&lt;/td&gt;
          &lt;td&gt;有损压缩的位图图像格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;png&lt;/td&gt;
          &lt;td&gt;无损压缩的位图图像格式，支持透明&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gif&lt;/td&gt;
          &lt;td&gt;支持动画和透明的图像格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;bmp&lt;/td&gt;
          &lt;td&gt;Windows位图图像格式，不压缩&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;svg+xml&lt;/td&gt;
          &lt;td&gt;可缩放的矢量图像，基于XML&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;webp&lt;/td&gt;
          &lt;td&gt;Google开发的高效图像格式，兼顾压缩率和质量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ico&lt;/td&gt;
          &lt;td&gt;Windows图标格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;tiff / tif&lt;/td&gt;
          &lt;td&gt;高质量图像格式，常用于扫描、印刷&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;audio&#34;&gt;audio
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;mpeg / mp3&lt;/td&gt;
          &lt;td&gt;有损压缩音频格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;wav&lt;/td&gt;
          &lt;td&gt;无损音频格式，体积大&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ogg&lt;/td&gt;
          &lt;td&gt;开放格式音频容器&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;aac&lt;/td&gt;
          &lt;td&gt;高压缩率音频格式，常用于流媒体&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;flac&lt;/td&gt;
          &lt;td&gt;无损压缩音频格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opus&lt;/td&gt;
          &lt;td&gt;适用于语音和流媒体的高效音频格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;quicktime / mov&lt;/td&gt;
          &lt;td&gt;Apple开发的视频格式，兼容性强&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;video&#34;&gt;video
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;mp4&lt;/td&gt;
          &lt;td&gt;最常见的视频格式，压缩效率高&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mpeg&lt;/td&gt;
          &lt;td&gt;老的视频格式，兼容性好&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ogg&lt;/td&gt;
          &lt;td&gt;支持视频的OGG容器格式（如&lt;code&gt;.ogv&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;webm&lt;/td&gt;
          &lt;td&gt;Google开发的为网页优化的视频格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;avi&lt;/td&gt;
          &lt;td&gt;微软开发的老视频格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-matroska / mkv&lt;/td&gt;
          &lt;td&gt;多媒体容器格式，支持多轨音视频&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;application&#34;&gt;application
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;json&lt;/td&gt;
          &lt;td&gt;结构化数据交换格式，广泛用于 API&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xml&lt;/td&gt;
          &lt;td&gt;结构化文档或数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;pdf&lt;/td&gt;
          &lt;td&gt;Adobe的便携文档格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;zip&lt;/td&gt;
          &lt;td&gt;常见的压缩文件格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-www-form-urlencoded&lt;/td&gt;
          &lt;td&gt;HTML表单默认提交格式（键值对编码）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;octet-stream&lt;/td&gt;
          &lt;td&gt;二进制数据流，常用作通用下载类型（未知二进制数据）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;msword&lt;/td&gt;
          &lt;td&gt;旧版Microsoft Word 文档（&lt;code&gt;.doc&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vnd.ms-excel&lt;/td&gt;
          &lt;td&gt;旧版Microsoft Excel 表格（&lt;code&gt;.xls&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vnd.openxmlformats-officedocument.wordprocessingml.document&lt;/td&gt;
          &lt;td&gt;新版Office Word（&lt;code&gt;.docx&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vnd.openxmlformats-officedocument.spreadsheetml.sheet&lt;/td&gt;
          &lt;td&gt;新版Office Excel（&lt;code&gt;.xlsx&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-tar&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;.tar&lt;/code&gt;归档文件格式，用于打包多个文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-7z-compressed&lt;/td&gt;
          &lt;td&gt;7-Zip压缩格式（&lt;code&gt;.7z&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-rar-compressed&lt;/td&gt;
          &lt;td&gt;RAR压缩格式（&lt;code&gt;.rar&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-debian-package&lt;/td&gt;
          &lt;td&gt;Debian软件包格式（&lt;code&gt;.deb&lt;/code&gt;）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-executable&lt;/td&gt;
          &lt;td&gt;Linux/Unix可执行文件（无拓展名时也可用此类型）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x-shockwave-flash&lt;/td&gt;
          &lt;td&gt;Flash动画格式（已淘汰）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;javascript&lt;/td&gt;
          &lt;td&gt;JavaScript代码**（部分浏览器仍使用application而非text）**&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;multipart&#34;&gt;multipart
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;form-data&lt;/td&gt;
          &lt;td&gt;用于上传文件的表单数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mixed&lt;/td&gt;
          &lt;td&gt;多部分邮件体，每部分可以是不同类型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;alternative&lt;/td&gt;
          &lt;td&gt;同一内容的多种表示（如 HTML 和纯文本版本的邮件）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;byteranges&lt;/td&gt;
          &lt;td&gt;用于分块下载/断点续传&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;message&#34;&gt;message
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;rfc822&lt;/td&gt;
          &lt;td&gt;标准电子邮件消息格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;partial&lt;/td&gt;
          &lt;td&gt;邮件的部分片段&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;external-body&lt;/td&gt;
          &lt;td&gt;邮件外部引用内容&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;font&#34;&gt;font
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;子类型（常见格式）&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;woff, woff2&lt;/td&gt;
          &lt;td&gt;Web优化字体格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;truetype / ttf&lt;/td&gt;
          &lt;td&gt;常见字体格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opentype / otf&lt;/td&gt;
          &lt;td&gt;TTF的扩展格式，功能更丰富&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;embedded-opentype&lt;/td&gt;
          &lt;td&gt;EOT字体，IE专用的Web字体格式&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>快速上手docker</title>
        <link>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bdocker/</link>
        <pubDate>Wed, 23 Jul 2025 19:24:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bdocker/</guid>
        <description>&lt;img src="http://picture.928330.xyz/typora/docker.jpg" alt="Featured image of post 快速上手docker" /&gt;&lt;p&gt;&lt;span style=&#34;color:aqua;font-size:20px&#34;&gt;本教程针对的是linux环境下的docker&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker简介&#34;&gt;Docker简介
&lt;/h1&gt;&lt;h2 id=&#34;什么是docker&#34;&gt;什么是Docker
&lt;/h2&gt;&lt;p&gt;Docker是一个开源的容器化平台，旨在简化应用程序的开发、交付和运行&lt;/p&gt;
&lt;p&gt;它允许开发者将应用程序及其所有依赖项打包到一个轻量级的、可移植的容器中，从而确保在不同环境中都能一致地运行&lt;/p&gt;
&lt;p&gt;容器之间是隔离的，像一个个小型的沙箱&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一句话&lt;/strong&gt;：Docker就像一个轻量级虚拟机，可以在不同的环境中快速部署运行同样的应用程序&lt;/p&gt;
&lt;h2 id=&#34;docker的主要概念&#34;&gt;Docker的主要概念
&lt;/h2&gt;&lt;h3 id=&#34;容器container&#34;&gt;容器（Container）
&lt;/h3&gt;&lt;p&gt;容器是Docker的核心，&lt;strong&gt;它就像是一个隔离的小程序环境，打包了应用运行所需的一切&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与传统虚拟机相比，容器不需要包含整个操作系统，只共享宿主机内核，因此占用资源小、启动速度快&lt;/p&gt;
&lt;p&gt;无论在本地、测试环境，还是部署到服务器，运行结果都一致&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个容器互相隔离，修改不会影响宿主机或其他容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如，运行一个Python应用的容器，就像在一个只包含Python的迷你Linux系统里运行它&lt;/p&gt;
&lt;h3 id=&#34;镜像image&#34;&gt;镜像（Image）
&lt;/h3&gt;&lt;p&gt;镜像是构建容器的模板或快照，可以理解为包含了&lt;strong&gt;系统环境+应用程序代码+配置&lt;/strong&gt;的“包”&lt;/p&gt;
&lt;p&gt;镜像一经创建就不变，部署更可靠&lt;/p&gt;
&lt;p&gt;比如我们下载&lt;code&gt;nginx&lt;/code&gt;这个镜像，然后就能启动一个&lt;code&gt;nginx&lt;/code&gt;容器，&lt;strong&gt;就像虚拟机的快照和启动运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即使我们更改了容器，镜像也不会改变，我们也可以把改动的容器制作为新的镜像，类似拍摄快照&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个镜像可以启动成多个容器，就像一个类能被实例化成多个对象&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;dockerfile&#34;&gt;Dockerfile
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;它是用来构建镜像的配置脚本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;里面写入了构建命令，如基于哪个镜像、复制哪些文件、安装哪些软件等&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;docker build&lt;/code&gt;命令可以将&lt;code&gt;Dockerfile&lt;/code&gt;构建成镜像，然后启动对应的容器&lt;/p&gt;
&lt;h3 id=&#34;仓库registry&#34;&gt;仓库（Registry）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;存储和分发镜像的平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如DockerHub，就是Docker官方提供的镜像仓库平台（类似GitHub），有很多官方镜像可以免费下载&lt;/p&gt;
&lt;h1 id=&#34;systemctl命令使用&#34;&gt;systemctl命令使用
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;systemctl&lt;/code&gt;是现代Linux发行版中核心的系统和服务管理器&lt;/p&gt;
&lt;p&gt;它负责启动、停止、检查和管理系统上的各种后台服务（也称为守护进程）&lt;/p&gt;
&lt;p&gt;在使用任何Docker命令之前，必须确保Docker的后台服务正在运行&lt;/p&gt;
&lt;p&gt;接下来我们将以Docker服务为例结合介绍它的各种命令&lt;/p&gt;
&lt;h2 id=&#34;服务的生命周期管理&#34;&gt;服务的生命周期管理
&lt;/h2&gt;&lt;p&gt;这是 &lt;code&gt;systemctl&lt;/code&gt;最核心的功能，用于控制一个服务的运行、停止和重启等&lt;/p&gt;
&lt;h3 id=&#34;启动服务&#34;&gt;启动服务
&lt;/h3&gt;&lt;p&gt;当一个服务处于停止状态时，使用&lt;code&gt;start&lt;/code&gt;命令来启动它&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会启动Docker服务，Docker守护进程会在后台开始运行，准备接收和处理Docker相关的命令&lt;/p&gt;
&lt;p&gt;通常执行此类操作需要管理员权限&lt;/p&gt;
&lt;h3 id=&#34;停止服务&#34;&gt;停止服务
&lt;/h3&gt;&lt;p&gt;停止一个正在运行的服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会向Docker服务发送停止信号，使其安全地终止&lt;/p&gt;
&lt;p&gt;对于Docker来说，这意味着Docker守护进程会关闭，所有通过该守护进程运行的容器也会停止&lt;/p&gt;
&lt;h3 id=&#34;重启服务&#34;&gt;重启服务
&lt;/h3&gt;&lt;p&gt;这是一个便捷的组合命令，相当于先停止服务再立即启动它&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这在修改了服务的配置文件后，需要让新配置生效时非常有用&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果修改了Docker的配置文件（例如 &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;），执行此命令会重启 Docker 服务，使其加载并应用新的配置&lt;/p&gt;
&lt;h3 id=&#34;重新加载服务配置&#34;&gt;重新加载服务配置
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在不中断服务的情况下，重新加载其配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl reload 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl reload docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令比&lt;code&gt;restart&lt;/code&gt;更为温和，它会请求服务重新读取其配置文件，而不会终止正在运行的主进程&lt;/p&gt;
&lt;p&gt;但是，并非所有服务都支持&lt;code&gt;reload&lt;/code&gt;操作，如果服务不支持此操作，&lt;code&gt;systemctl&lt;/code&gt;可能会转而执行&lt;code&gt;restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker服务通常建议使用&lt;code&gt;restart&lt;/code&gt;而不是&lt;code&gt;reload&lt;/code&gt;来应用配置更改&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;服务的状态与信息查看&#34;&gt;服务的状态与信息查看
&lt;/h2&gt;&lt;h3 id=&#34;查看服务详细状态&#34;&gt;查看服务详细状态
&lt;/h3&gt;&lt;p&gt;获取一个服务的全面信息，包括它是否正在运行、最近的日志、进程ID (PID) 等&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是排查服务问题的首选&lt;/p&gt;
&lt;p&gt;它会清晰地显示服务的&lt;code&gt;active&lt;/code&gt;状态，如 &lt;code&gt;active (running)&lt;/code&gt; 或 &lt;code&gt;inactive (dead)&lt;/code&gt;），并附带最近几条相关的日志记录&lt;/p&gt;
&lt;h3 id=&#34;检查服务是否正在运行&#34;&gt;检查服务是否正在运行
&lt;/h3&gt;&lt;p&gt;快速检查一个服务当前是否处于活动状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-active 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-active docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令的返回值非常简洁：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果服务正在运行，它会输出&lt;code&gt;active&lt;/code&gt;并返回状态码 0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果服务未运行，它会输出&lt;code&gt;inactive&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这在编写自动化脚本时很有用，可以根据返回值来判断是否需要执行某些操作&lt;/p&gt;
&lt;h2 id=&#34;服务的开机自启动管理&#34;&gt;服务的开机自启动管理
&lt;/h2&gt;&lt;h3 id=&#34;设置开机自启动&#34;&gt;设置开机自启动
&lt;/h3&gt;&lt;p&gt;将一个服务设置为在系统启动时自动运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl &lt;span style=&#34;color:#e5c07b&#34;&gt;enable&lt;/span&gt; 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl &lt;span style=&#34;color:#e5c07b&#34;&gt;enable&lt;/span&gt; docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行此命令后，&lt;code&gt;systemd&lt;/code&gt;会创建必要的符号链接，确保下次系统启动时，Docker服务会自动启动&lt;/p&gt;
&lt;p&gt;这是一个一次性的设置，之后无需再手动启动&lt;/p&gt;
&lt;h3 id=&#34;禁止开机自启动&#34;&gt;禁止开机自启动
&lt;/h3&gt;&lt;p&gt;取消一个服务的开机自启动设置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会移除&lt;code&gt;enable&lt;/code&gt;命令创建的符号链接，下次系统重启后，Docker服务将不会自动运行&lt;/p&gt;
&lt;p&gt;这并不会影响当前正在运行的服务状态&lt;/p&gt;
&lt;h3 id=&#34;检查服务是否开机自启动&#34;&gt;检查服务是否开机自启动
&lt;/h3&gt;&lt;p&gt;查看一个服务当前是否被设置为开机自启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-enabled 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-enabled docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会返回 &lt;code&gt;enabled&lt;/code&gt; (已设置) 或 &lt;code&gt;disabled&lt;/code&gt; (未设置)&lt;/p&gt;
&lt;h1 id=&#34;docker更改源&#34;&gt;Docker更改源
&lt;/h1&gt;&lt;p&gt;不知道为什么国内忽然无法访问官方的镜像仓库了，为了加快Docker镜像的下载速度，我们通常需要将 Docker的默认源&lt;code&gt;registry.docker.io&lt;/code&gt;更换为国内的镜像加速源&lt;/p&gt;
&lt;h2 id=&#34;检查安装状态&#34;&gt;检查安装状态
&lt;/h2&gt;&lt;p&gt;首先要确认你的系统已正确安装了Docker，可以执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回的是docker版本，确认无误后继续&lt;/p&gt;
&lt;h2 id=&#34;编辑配置文件&#34;&gt;编辑配置文件
&lt;/h2&gt;&lt;p&gt;Docker 的镜像源配置文件通常位于&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;，如果文件不存在，可以手动创建&lt;/p&gt;
&lt;p&gt;使用任意文本编辑器打开，例如使用vim（不知道怎么使用vim的可以看一眼：&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vim使用教程
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /etc/docker/daemon.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后将内容修改为以下格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e06c75&#34;&gt;&amp;#34;registry-mirrors&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;https://&amp;lt;加速地址1&amp;gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;https://&amp;lt;加速地址2&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然你还能添加更多加速地址，但是注意最后一个加速地址后面就不能有逗号了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b站up:大海资源&lt;/strong&gt;整理的当前可用的国内镜像源：https://www.dhzy.fun/archives/6852.html&lt;/p&gt;
&lt;h2 id=&#34;重启服务-1&#34;&gt;重启服务
&lt;/h2&gt;&lt;p&gt;修改完配置后，需要重启 Docker 服务以使配置生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;验证是否生效&#34;&gt;验证是否生效
&lt;/h2&gt;&lt;p&gt;可以执行如下命令查看当前镜像加速器配置是否生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker info | grep -A &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Registry Mirrors&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从输出中查找包含&lt;code&gt;Registry Mirrors&lt;/code&gt;的那一行，并显示它后面10行&lt;/p&gt;
&lt;p&gt;如果是下面这样的输出，说明配置成功了：&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722202433203&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722202433203.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722202433203.png&#34; alt=&#34;image-20250722202433203&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;p&gt;修改配置文件时要确保JSON格式正确，例如逗号不能多不能少&lt;/p&gt;
&lt;p&gt;有些加速源如阿里云需要登录账号并绑定使用，获取专属地址&lt;/p&gt;
&lt;p&gt;如果使用的是非systemd系统，要使用service命令重启Docker&lt;/p&gt;
&lt;h1 id=&#34;docker使用&#34;&gt;Docker使用
&lt;/h1&gt;&lt;h2 id=&#34;镜像管理&#34;&gt;镜像管理
&lt;/h2&gt;&lt;h3 id=&#34;查找镜像&#34;&gt;查找镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker search &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;docker search&lt;/code&gt;使用的是DockerHub的HTTP API，没有镜像源概念，无法走国内加速&lt;/p&gt;
&lt;p&gt;如果无法访问，必须使用代理，或者通过别的方式访问官网：https://hub.docker.com/&lt;/p&gt;
&lt;h3 id=&#34;拉取镜像&#34;&gt;拉取镜像
&lt;/h3&gt;&lt;p&gt;从仓库中下载一个镜像到你的本地机器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜像名称&lt;/strong&gt;：想要下载的软件，例如&lt;code&gt;nginx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt; ：通常用来表示软件的版本，例如&lt;code&gt;latest&lt;/code&gt;表示最新版，&lt;code&gt;1.21&lt;/code&gt;表示特定版本&lt;/p&gt;
&lt;p&gt;​           如果省略标签，Docker 会默认使用&lt;code&gt;latest&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull nginx:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会从镜像源下载最新版本的Nginx镜像&lt;/p&gt;
&lt;h3 id=&#34;查看本地镜像&#34;&gt;查看本地镜像
&lt;/h3&gt;&lt;p&gt;列出所有已经下载到本地计算机上的镜像&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722204915819&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722204915819.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722204915819.png&#34; alt=&#34;image-20250722204915819&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;：仓库名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TAG&lt;/strong&gt; ：标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMAGE ID&lt;/strong&gt;：镜像的唯一ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CREATED&lt;/strong&gt;：创建时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SIZE&lt;/strong&gt;：镜像大小&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;保存更改的镜像&#34;&gt;保存更改的镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker commit &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;容器ID&amp;gt;/&amp;lt;容器名称&amp;gt; &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-m &amp;quot;提交信息&amp;quot;&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;为此次操作添加描述性说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类似于 Git 的 commit message，便于记录修改内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-a &amp;quot;作者&amp;quot;&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;指定作者信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方便追踪是谁进行了修改或创建操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker commit -m&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt; -a&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;kakahuote&amp;#34;&lt;/span&gt; 8950b5741b30 mynginx:mod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把名为&lt;code&gt;8950b5741b30&lt;/code&gt;的容器保存为一个新的镜像&lt;/li&gt;
&lt;li&gt;添加说明信息&lt;code&gt;&amp;quot;update&amp;quot;&lt;/code&gt;，记录镜像的更改内容&lt;/li&gt;
&lt;li&gt;指定作者为&lt;code&gt;kakahuote&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建一个名为&lt;code&gt;mynginx&lt;/code&gt;、标签为&lt;code&gt;mod&lt;/code&gt;的新镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723135839721&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723135839721.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723135839721.png&#34; alt=&#34;image-20250723135839721&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;删除镜像&#34;&gt;删除镜像
&lt;/h3&gt;&lt;p&gt;当某个镜像不再需要时，可以将其从本地删除以释放磁盘空间&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rmi &amp;lt;镜像ID&amp;gt;/&amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只能删除没有被任何容器（包括已停止的容器）使用的镜像&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果需要删除一个被使用的镜像，必须先删除所有依赖它的容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;-f&lt;/code&gt;选项强制删除，但这可能会导致依赖该镜像的容器无法再次启动或者其他未知错误，慎用！&lt;/p&gt;
&lt;p&gt;如果不指定标签，默认删除的会是&lt;code&gt;latest&lt;/code&gt;标签，如果没有&lt;code&gt;latest&lt;/code&gt;则会报错，所以&lt;strong&gt;建议指定标签删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rmi mynginx:mod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723140153114&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723140153114.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723140153114.png&#34; alt=&#34;image-20250723140153114&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;容器管理&#34;&gt;容器管理
&lt;/h2&gt;&lt;h3 id=&#34;创建并运行容器&#34;&gt;创建并运行容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--name&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;为容器指定一个自定义的名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果省略，Docker会自动生成一个随机名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;以分离模式在后台运行容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这对于运行像Web服务器这样的长期服务很重要，否则容器会占据你的终端进行输出和报错等行为&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-P&lt;/code&gt;(大写)&lt;/strong&gt;：将容器内部所有暴露的端口&lt;strong&gt;随机映射&lt;/strong&gt;到主机的空闲端口上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-p&lt;/code&gt;(小写)&lt;/strong&gt;：&lt;strong&gt;指定端口映射&lt;/strong&gt;，其常用格式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;主机端口:容器端口&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 8080:80 nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令将主机的&lt;code&gt;8080&lt;/code&gt;端口映射到容器的&lt;code&gt;80&lt;/code&gt;端口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;IP地址&amp;gt;:主机端口:容器端口&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定只将主机的特定IP地址的端口映射到容器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 127.0.0.1:8081:80 nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令将主机&lt;code&gt;127.0.0.1&lt;/code&gt;这个回环地址的&lt;code&gt;8081&lt;/code&gt;端口映射到容器的&lt;code&gt;80&lt;/code&gt;端口&lt;/p&gt;
&lt;p&gt;这样，只有在本机才能通过&lt;code&gt;127.0.0.1:8081&lt;/code&gt;访问，来自外部网络的访问会被拒绝&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;主机端口:&amp;lt;容器端口/协议&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，端口映射使用的是TCP协议，也可以显式指定UDP协议&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pdocker run -d -p 8082:53/udp nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令将主机的&lt;code&gt;8082&lt;/code&gt;端口映射到nginx容器的&lt;code&gt;53&lt;/code&gt;UDP端口&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--rm&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;使容器在停止后被自动删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;适合用于测试和运行一次性任务&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name my-nginx -d -p 8080:80 nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;检查本地是否存在&lt;code&gt;nginx:latest&lt;/code&gt;镜像，如果不存在，会自动拉取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于此镜像创建一个名为 &lt;code&gt;my-nginx&lt;/code&gt; 的容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;：让这个容器在后台持续运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-p 8080:80&lt;/code&gt;：将你本机的8080端口的流量转发到容器内部的80端口（Nginx默认在80端口监听）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;命令执行后，在浏览器中访问&lt;code&gt;http://你的主机IP地址:8080&lt;/code&gt;或&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果看到Nginx的欢迎页面，则表示容器已成功运行&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722140517678&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34; alt=&#34;image-20250722140517678&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;查看正在运行的容器&#34;&gt;查看正在运行的容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723112548978&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723112548978.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723112548978.png&#34; alt=&#34;image-20250723112548978&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CONTAINER ID&lt;/strong&gt;：容器的唯一标识，&lt;strong&gt;可以用全部或者前几位操作该容器，只要能唯一识别&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMAGE&lt;/strong&gt;：使用的镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;COMMAND&lt;/strong&gt;：容器启动时运行的命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CREATED&lt;/strong&gt;：容器创建的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;STATUS&lt;/strong&gt;：容器状态，这里的字段值是&lt;code&gt;UP&lt;/code&gt;，说明是一个正在运行的容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PORTS&lt;/strong&gt;：端口映射&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;0.0.0.0:8080-&amp;gt;80/tcp&lt;/code&gt;：主机所有IPv4地址的8080端口被映射到容器内部的80端口（TCP 协议）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:::8080-&amp;gt;80/tcp&lt;/code&gt;：主机所有IPv6地址的8080端口也映射到容器内部的80端口（TCP 协议）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAMES&lt;/strong&gt;：自定义的容器的名字&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看所有容器&#34;&gt;查看所有容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;-a&lt;/code&gt;是&lt;code&gt;all&lt;/code&gt;的缩写，代表列出所有容器，包括那些已经停止运行的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个命令可以找到旧的、已停止的容器，以便重新启动它们或将它们删除以进行清理&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723113333889&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723113333889.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113333889.png&#34; alt=&#34;image-20250723113333889&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这里的&lt;code&gt;STATUS&lt;/code&gt;字段是&lt;code&gt;exited&lt;/code&gt;，说明这是一个退出的、不在运行的容器&lt;/p&gt;
&lt;h3 id=&#34;停止容器&#34;&gt;停止容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;说明: 此命令会向容器内的主进程发送一个 &lt;code&gt;SIGTERM&lt;/code&gt; 信号，请求其正常关闭。应用程序会接收到这个信号并执行关闭前的清理工作。&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723113823707&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723113823707.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113823707.png&#34; alt=&#34;image-20250723113823707&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;停止后，容器不在运行列表之中&lt;/p&gt;
&lt;h3 id=&#34;启动一个已停止的容器&#34;&gt;启动一个已停止的容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker start &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会使一个处于Exited状态的容器恢复到Up状态，容器会保留其上次停止时的所有配置和数据。&lt;/p&gt;
&lt;p&gt;示例: docker start my-nginx&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723113946571&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723113946571.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113946571.png&#34; alt=&#34;image-20250723113946571&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;删除容器&#34;&gt;删除容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rm &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;默认情况下，不能删除一个正在运行的容器，必须先使用&lt;code&gt;docker stop&lt;/code&gt;将其停止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果确定要删除一个运行中的容器，可以添加&lt;code&gt;-f&lt;/code&gt;参数来强制执行&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;容器信息查看与交互&#34;&gt;容器信息查看与交互
&lt;/h2&gt;&lt;h3 id=&#34;查看端口映射&#34;&gt;查看端口映射
&lt;/h3&gt;&lt;p&gt;此命令可以快捷地查看一个容器的端口映射情况&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker port &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker port nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723173634143&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723173634143.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723173634143.png&#34; alt=&#34;image-20250723173634143&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;容器内部的80端口被映射到了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0.0.0.0:8080&lt;/code&gt;：表示主机的所有&lt;strong&gt;IPv4&lt;/strong&gt;地址上的8080端口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[::]:8080&lt;/code&gt;：表示主机的所有&lt;strong&gt;IPv6&lt;/strong&gt;地址上的8080端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是说，我们可以使用以下任意方式访问这个容器内的Nginx服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://&amp;lt;主机的IP&amp;gt;:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果启用了IPv6网络，还可以使用IPv6地址访问，如&lt;code&gt;http://[::1]:8080&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看容器日志&#34;&gt;查看容器日志
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/strong&gt;：持续跟踪并输出日志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--tail&lt;/code&gt;&lt;/strong&gt;：仅显示日志的最后N行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723115500967&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723115500967.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723115500967.png&#34; alt=&#34;image-20250723115500967&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;在容器内部执行命令&#34;&gt;在容器内部执行命令
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;可以在一个运行中的容器内执行命令，而不进入其交互式Shell&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt; &amp;lt;命令&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; nginx ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723115709524&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723115709524.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723115709524.png&#34; alt=&#34;image-20250723115709524&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;此命令会在名为&lt;code&gt;nginx&lt;/code&gt;的容器内部执行&lt;code&gt;ls -l&lt;/code&gt; 命令，并返回结果，而我们的终端仍然停留在主机上&lt;/p&gt;
&lt;h3 id=&#34;进入容器的交互式终端&#34;&gt;进入容器的交互式终端
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;对于更复杂的调试，我们就需要一个完整的Shell环境来在容器内部进行操作&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt; /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;-it&lt;/code&gt;是两个选项的组合：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-i&lt;/code&gt;保持标准输入开启，&lt;code&gt;-t&lt;/code&gt;分配一个伪终端，这共同创建了一个可以交互的命令行界面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/bin/bash&lt;/code&gt;是一个常见的Shell程序，有些镜像可能提供的是&lt;code&gt;/bin/sh&lt;/code&gt;，比较不好用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也可以在创建容器的时候就进入其交互式终端：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt; /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it nginx /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723121248325&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723121248325.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723121248325.png&#34; alt=&#34;image-20250723121248325&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;执行后命令提示符改变，表示已经进入了容器，可以像在普通Linux环境中一样运行命令&lt;/p&gt;
&lt;p&gt;如果想要退出，可以使用&lt;code&gt;Ctrl+D&lt;/code&gt;，或者输入&lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;容器网络与连接&#34;&gt;容器网络与连接
&lt;/h2&gt;&lt;p&gt;除了端口映射，Docker还提供了强大的网络功能，允许容器之间方便、安全地互相通信&lt;/p&gt;
&lt;p&gt;在开始之前，我们需要知道docker的网络类型有哪些&lt;/p&gt;
&lt;h3 id=&#34;网络类型&#34;&gt;网络类型
&lt;/h3&gt;&lt;h4 id=&#34;bridge&#34;&gt;bridge
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;bridge&lt;/code&gt;是Docker默认的网络类型，适用于单个主机上容器之间的通信&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个容器会获得一个虚拟网卡和私有IP地址&lt;/li&gt;
&lt;li&gt;容器之间可以通过容器名通信&lt;/li&gt;
&lt;li&gt;可以使用&lt;code&gt;-p&lt;/code&gt;参数将容器端口映射到宿主机端口，实现外部访问&lt;/li&gt;
&lt;li&gt;默认的&lt;code&gt;bridge&lt;/code&gt;网络名称就是&lt;code&gt;bridge&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要隔离、但仍允许访问外部网络的容器场景&lt;/p&gt;
&lt;h4 id=&#34;host&#34;&gt;host
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;容器与宿主机共享网络栈，不做任何隔离&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器没有自己的IP地址&lt;/li&gt;
&lt;li&gt;使用宿主机的IP和端口&lt;/li&gt;
&lt;li&gt;性能更好，网络开销低&lt;/li&gt;
&lt;li&gt;容器中暴露的端口不需要通过&lt;code&gt;-p&lt;/code&gt;映射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于对网络性能要求极高的场景&lt;/p&gt;
&lt;h4 id=&#34;none&#34;&gt;none
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;容器没有网络连接&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有分配IP地址&lt;/li&gt;
&lt;li&gt;不能访问外部网络，也不能与其他容器通信&lt;/li&gt;
&lt;li&gt;除非手动配置网络，否则容器完全断网&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要自定义网络配置或完全隔离网络的场景&lt;/p&gt;
&lt;h4 id=&#34;overlay&#34;&gt;overlay
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;用于Docker Swarm集群环境中，支持多主机容器通信&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可跨宿主机连接容器&lt;/li&gt;
&lt;li&gt;基于VXLAN技术封装&lt;/li&gt;
&lt;li&gt;需要Swarm模式支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要将多个 Docker 主机上的容器连接成一个网络的分布式应用&lt;/p&gt;
&lt;h4 id=&#34;macvlan&#34;&gt;macvlan
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;让容器像宿主机一样，直接拥有局域网内的独立IP&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器像物理主机一样直接连接到物理网络&lt;/li&gt;
&lt;li&gt;容器具有独立MAC和IP地址&lt;/li&gt;
&lt;li&gt;可被局域网中的其他设备直接访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于容器需要与局域网设备完全对等通信的场景，例如作为局域网服务节点&lt;/p&gt;
&lt;h4 id=&#34;container&#34;&gt;container
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;多个容器共享同一个网络命名空间，通过&lt;code&gt;--network container:&amp;lt;容器名&amp;gt;&lt;/code&gt;实现&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用另一个容器的网络配置&lt;/li&gt;
&lt;li&gt;容器之间通过进程间通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于容器需要共享网络堆栈（如日志、监控）的情况&lt;/p&gt;
&lt;h3 id=&#34;查看当前已创建的网络&#34;&gt;查看当前已创建的网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723185658135&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723185658135.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185658135.png&#34; alt=&#34;image-20250723185658135&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NETWORK ID&lt;/strong&gt;：网络的唯一标识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAME&lt;/strong&gt;：网络名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DRIVER&lt;/strong&gt;：网络类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SCOPE&lt;/strong&gt;：作用范围，通常是local(本地网络)或swarm(集群网络)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建自定义网络&#34;&gt;创建自定义网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create -d bridge &amp;lt;网络名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;：指定网络类型。对于单机环境，&lt;code&gt;bridge&lt;/code&gt;是最常用的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create -d bridge my-net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723185004431&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723185004431.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185004431.png&#34; alt=&#34;image-20250723185004431&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;删除已定义的网络&#34;&gt;删除已定义的网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network rm &amp;lt;网络名&amp;gt;/&amp;lt;网络ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network rm my-net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723185631213&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723185631213.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185631213.png&#34; alt=&#34;image-20250723185631213&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;连接容器到网络&#34;&gt;连接容器到网络
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;我们可以在启动容器时使用&lt;code&gt;--network&lt;/code&gt;选项将其连接到指定的网络&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name &amp;lt;容器名称&amp;gt; --network &amp;lt;网络名称&amp;gt; &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;p&gt;我们创建两个容器并都连接到&lt;code&gt;my-net&lt;/code&gt;网络&lt;/p&gt;
&lt;p&gt;首先创建第一个容器 &lt;code&gt;nginx-1&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name nginx-1 --network my-net nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后创建第二个容器 &lt;code&gt;nginx-2&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name nginx-2 --network my-net nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723190434746&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723190434746.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723190434746.png&#34; alt=&#34;image-20250723190434746&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;容器间通信&#34;&gt;容器间通信
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;当多个容器连接到同一个自定义网络时，它们可以通过容器名称作为主机名直接互相访问&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们可以进入一个容器来测试与另一个容器的连通性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;p&gt;进入&lt;code&gt;nginx-1&lt;/code&gt;容器，然后&lt;code&gt;ping nginx-2&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it nginx-1 /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入容器后，由于nginx镜像默认没有 &lt;code&gt;ping&lt;/code&gt; 工具，我们需要先安装它：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y iputils-ping
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，执行&lt;code&gt;ping&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping nginx-2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723190515708&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723190515708.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723190515708.png&#34; alt=&#34;image-20250723190515708&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以看到，&lt;code&gt;nginx-1&lt;/code&gt;能够成功解析&lt;code&gt;nginx-2&lt;/code&gt;的名称并与之通信，这证明了容器间的互联已经建立shell&lt;/p&gt;
&lt;h3 id=&#34;查看容器网络信息&#34;&gt;查看容器网络信息
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker inspect &amp;lt;对象ID或名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;docker inspect&lt;/code&gt;是一个非常强大的命令，用于查看容器、镜像、网络、卷等对象的详细底层信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它会返回一段JSON 格式的数据，包含几乎所有属性，比如网络配置、挂载卷、环境变量、启动命令等&lt;/p&gt;
&lt;p&gt;这里我们查看容器的信息，并过滤网络部分：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker inspect &amp;lt;容器ID&amp;gt;/&amp;lt;名称&amp;gt; | grep -A &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;NetworkSettings&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250723191822266&#34; href=&#34;http://picture.928330.xyz/typora/image-20250723191822266.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723191822266.png&#34; alt=&#34;image-20250723191822266&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;dns配置&#34;&gt;DNS配置
&lt;/h3&gt;&lt;h4 id=&#34;全局配置&#34;&gt;全局配置
&lt;/h4&gt;&lt;p&gt;我们可以为所有Docker容器配置默认的DNS服务器&lt;/p&gt;
&lt;p&gt;这需要在Docker的守护进程配置文件&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;中添加&lt;code&gt;dns&lt;/code&gt;字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e06c75&#34;&gt;&amp;#34;dns&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;114.114.114.114&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;8.8.8.8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;修改此文件后，必须重启 Docker 服务才能生效&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;容器独立配置&#34;&gt;容器独立配置
&lt;/h4&gt;&lt;p&gt;如果只想为某个特定的容器指定 DNS，可以在&lt;code&gt;docker run&lt;/code&gt;时使用相关选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;DNS选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用DNS选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--dns=&amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;/strong&gt;：指定容器使用的DNS服务器地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--dns-search=&amp;lt;域名&amp;gt;&lt;/code&gt;&lt;/strong&gt;：指定DNS搜索域。当查找一个短主机名时，会自动追加这个域名进行尝试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--hostname=&amp;lt;主机名&amp;gt;&lt;/code&gt;&lt;/strong&gt;：设置容器内部的主机名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm --hostname&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;myhost --dns&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;114.114.114.114  nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会启动一个临时的&lt;code&gt;nginx&lt;/code&gt;容器，其主机名为&lt;code&gt;myhost&lt;/code&gt;，使用&lt;code&gt;114.114.114.114&lt;/code&gt;作为DNS服务器&lt;/p&gt;
&lt;h4 id=&#34;常用dns服务器&#34;&gt;常用DNS服务器
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;阿里云公共 DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;223.5.5.5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;223.6.6.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;114 DNS&lt;/strong&gt;（国内知名公共 DNS）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;114.114.114.114
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;114.114.115.115
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Google 公共 DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8.8.8.8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8.8.4.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Cloudflare DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.1.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;OpenDNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;208.67.222.222
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;208.67.220.220
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;docker实例安装&#34;&gt;Docker实例安装
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;各种镜像安装过程都大差不差，这里以nginx为例，其他的也能作参考&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;查看可用版本&#34;&gt;查看可用版本
&lt;/h2&gt;&lt;h3 id=&#34;访问nginx镜像库地址&#34;&gt;访问Nginx镜像库地址
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/_/nginx?tab=tags&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hub.docker.com/_/nginx?tab=tags
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722123536066&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722123536066.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722123536066.png&#34; alt=&#34;image-20250722123536066&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以copy的字段是拉取当前版本镜像的命令，下面是一些介绍：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Digest&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;每个平台构建出的镜像唯一标识符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;OS/ARCH&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;表示支持的操作系统和架构&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Vulnerabilities&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;镜像中检测出的安全漏洞数量&lt;br /&gt;分等级：严重（红）、高（橙）、中（黄）、低（灰）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Compressed size&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;镜像下载时的压缩大小&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;使用命令查看&#34;&gt;使用命令查看
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker search nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;我们一般都使用最新的，也就是latest&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;拉取最新镜像&#34;&gt;拉取最新镜像
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull nginx:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722140134826&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722140134826.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140134826.png&#34; alt=&#34;image-20250722140134826&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;查看是否拉取成功&#34;&gt;查看是否拉取成功
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722140111160&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722140111160.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140111160.png&#34; alt=&#34;image-20250722140111160&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;运行容器&#34;&gt;运行容器
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name nginx -p 8080:80 -d nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;name nginx&lt;/strong&gt;：容器名称改成nginx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-p 8080:80&lt;/strong&gt;： 端口进行映射，将本地8080端口映射到容器内部的80端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;：设置容器在在后台一直运行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;测试访问&#34;&gt;测试访问
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; data-caption=&#34;image-20250722140517678&#34; href=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34;&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34; alt=&#34;image-20250722140517678&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Vim编辑器完全使用教程</title>
        <link>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
        <pubDate>Thu, 08 May 2025 15:28:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;img src="http://picture.928330.xyz/typora/DeWatermark.ai_1756040226707.jpeg" alt="Featured image of post Vim编辑器完全使用教程" /&gt;&lt;h1 id=&#34;vim使用方式&#34;&gt;VIM使用方式
&lt;/h1&gt;&lt;h2 id=&#34;vim键盘图&#34;&gt;vim键盘图
&lt;/h2&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/vi-vim-cheat-sheet-sch.gif&#34; alt=&#34;img&#34; style=&#34;zoom: 80%;&#34; /&gt;
&lt;h2 id=&#34;vim操作文件基本方式&#34;&gt;vim操作文件基本方式
&lt;/h2&gt;&lt;h3 id=&#34;打开文件&#34;&gt;打开文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该方式打开文件，显示屏默认显示第一个文件也就是 file1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件之间的切换&#34;&gt;文件之间的切换
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:ls&lt;/strong&gt; &amp;ndash; 列出 VIM 打开的所有文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200724231.png&#34; alt=&#34;image-20250309200724231&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:bn&lt;/strong&gt; &amp;ndash; 显示屏上显示第n个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200823642.png&#34; alt=&#34;image-20250309200823642&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;h3 id=&#34;显示多个文件&#34;&gt;显示多个文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左右分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -On file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的 n 是代表有几个文件需要分屏，从左至右依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309201414346.png&#34; alt=&#34;image-20250309201414346&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;上下分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -on file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟上一个命令不同的是 -on 中的 &lt;strong&gt;o 是小写&lt;/strong&gt;，这样将会上下依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20250309201606096.png&#34; alt=&#34;image-20250309201606096&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分屏操作ctrlw系列&#34;&gt;分屏操作（ctrl+w系列）
&lt;/h3&gt;&lt;h4 id=&#34;左右分屏&#34;&gt;左右分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+s&lt;/strong&gt;  &amp;ndash; 上下分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:sp file&lt;/strong&gt; &amp;ndash; 上下分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;上下分屏&#34;&gt;上下分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+v&lt;/strong&gt;  &amp;ndash; 左右分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:vsp file&lt;/strong&gt; &amp;ndash; 左右分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;移动分屏&#34;&gt;移动分屏
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+H&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到左边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+L&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到右边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+J&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到上边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+K&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到下边&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;在文件间切换光标&#34;&gt;在文件间切换光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;小写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+h&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+l&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+j&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+k&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关闭分屏&#34;&gt;关闭分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+c&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏(多个分屏就只关闭光标所在的分屏)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+q&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏，如果是最后一个分屏将会退出 VIM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim五大模式&#34;&gt;vim五大模式
&lt;/h2&gt;&lt;h3 id=&#34;普通模式&#34;&gt;普通模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用户刚刚启动 vi/vim，便进入了普通模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;普通模式移动光标&#34;&gt;普通模式移动光标
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;快速移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;输入[数字n＋方向]，代表向某个方向移动n&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;h / ← / [backspace]&lt;/strong&gt;：向左移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;j / ↓&lt;/strong&gt;：向下移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;k / ↑&lt;/strong&gt;：向上移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l / → / [space]&lt;/strong&gt;：向右移动光标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在当前行上移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0 或功能键[Home]&lt;/strong&gt; &amp;ndash; 移动到行头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;^&lt;/strong&gt; &amp;ndash; 移动到本行的第一个不是 blank 字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$ 或功能键[End]&lt;/strong&gt; &amp;ndash; 移动到行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g_&lt;/strong&gt; &amp;ndash; 移动到本行最后一个不是 blank 字符的位置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;w&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;e&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fa&lt;/strong&gt; &amp;ndash; 移动到本行下一个为 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nfa&lt;/strong&gt; &amp;ndash; 移动到本行光标处开始的第 n 个 字符为 a 的地方&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fa&lt;/strong&gt; &amp;ndash; 同fa一样，光标移动方向同fa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nFa&lt;/strong&gt; &amp;ndash; 同 nfa 类似，光标移动方向同 nfa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ta&lt;/strong&gt; &amp;ndash; 移动光标至 a 字符的前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nta&lt;/strong&gt; &amp;ndash; 移动到第n个 a 字符的前一个字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ta&lt;/strong&gt; &amp;ndash; 同ta移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nTa&lt;/strong&gt; &amp;ndash; 同 nta 移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;; &amp;amp; ,&lt;/strong&gt; &amp;ndash; 当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用**；&lt;strong&gt;可以快速跳转到&lt;/strong&gt;下一个&lt;strong&gt;指定的字符，&lt;/strong&gt;,** 是跳到&lt;strong&gt;前一个&lt;/strong&gt;指定的字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨行移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nG&lt;/strong&gt; &amp;ndash; 光标定位到第 n 行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gg&lt;/strong&gt; &amp;ndash; 光标定位到第一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; &amp;ndash; 光标定位到最后一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; &amp;ndash; 光标定位到&lt;strong&gt;当前屏幕&lt;/strong&gt;的第一行行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zt&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的最上方，也就是第一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zz&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zb&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%&lt;/strong&gt; &amp;ndash; 匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;* &amp;amp; #&lt;/strong&gt; &amp;ndash; 匹配光标当前所在的单词， ***** 是下一个，&lt;strong&gt;#&lt;/strong&gt; 是上一个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;翻页操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ctrl+u&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+b&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+d&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+f&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;普通模式操作文本&#34;&gt;普通模式操作文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;d 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dw&lt;/strong&gt; &amp;ndash; 删除一个单词&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnw&lt;/strong&gt; &amp;ndash; 删除 n 个单词，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dfa&lt;/strong&gt; &amp;ndash; 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnfa&lt;/strong&gt; &amp;ndash; 删除光标处到第 n 个 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dd&lt;/strong&gt; &amp;ndash; 删除一整行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ndd&lt;/strong&gt; &amp;ndash; 删除光标处开始的 n 行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d$&lt;/strong&gt; &amp;ndash; 删除光标到本行的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d0&lt;/strong&gt; &amp;ndash; 删除游标所在处到该行的最前面一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dH&lt;/strong&gt; &amp;ndash; 删除屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d1G&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dG&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;当前所在的&lt;/strong&gt;字符**(delete)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;前面的一个&lt;/strong&gt;字符**(backspace)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nx&lt;/strong&gt; &amp;ndash; 向后连续删除n个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;复制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;y 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;yw&lt;/strong&gt; &amp;ndash; 复制一个单词，还有ynw&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yfa&lt;/strong&gt; &amp;ndash; 复制光标到下一个 a 的字符处,还有ynfa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yy&lt;/strong&gt; &amp;ndash; 复制一行，还有nyy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y$&lt;/strong&gt; &amp;ndash; 复制光标到本号的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yH&lt;/strong&gt; &amp;ndash; 复制屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y1G&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yG&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;粘贴&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;p是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p(小写)&lt;/strong&gt; &amp;ndash; 在光标后开始黏贴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;P(大写)&lt;/strong&gt; &amp;ndash; 在光标前开始粘贴&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;撤销操作和恢复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;u&lt;/strong&gt; &amp;ndash; 撤销刚才的操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+r&lt;/strong&gt; &amp;ndash; 恢复撤销操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 将光标下的字母改变大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3~&lt;/strong&gt; &amp;ndash; 将光标位置开始的3个字母改变其大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g~~&lt;/strong&gt; &amp;ndash; 改变当前行字母的大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUU&lt;/strong&gt; &amp;ndash; 将当前行的字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guu&lt;/strong&gt; &amp;ndash; 将当前行的字母全改成小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3gUU&lt;/strong&gt; &amp;ndash; 将从光标开始到下面3行字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成小写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重复操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;.&lt;/strong&gt; &amp;ndash; 重复上一个操作的命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&amp;lt;command&amp;gt;&lt;/strong&gt; &amp;ndash; 重复某个命令 n 次，如 10p复制 10 次，10dd 删除十次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt; &amp;ndash; 将光标所在行与下一行的数据结合成同一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 重复删除多个数据，例如向下删除 10 行，10cj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;插入模式&#34;&gt;插入模式
&lt;/h3&gt;&lt;h4 id=&#34;进入插入模式&#34;&gt;进入插入模式
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i, I&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;i &amp;ndash; 从目前光标所在处输入&lt;br /&gt;I &amp;ndash; 在目前所在行的第一个非空格符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;a, A&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a &amp;ndash; 从目前光标所在的下一个字符处开始输入&lt;br /&gt;A &amp;ndash; 从光标所在行的最后一个字符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;o, O&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;o &amp;ndash; 在目前光标所在的下一行处输入新的一行&lt;br /&gt;O &amp;ndash; 在目前光标所在的上一行处输入新的一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s，S&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;s &amp;ndash; 删除光标所在处的字符然后插入需要录入的文本&lt;br /&gt;S &amp;ndash; 删除光标所在行，在当前行的行首开始插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;cw&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;删除&lt;strong&gt;从光标处开始到该单词结束&lt;/strong&gt;的所有字符，然后插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;插入模式的命令&#34;&gt;插入模式的命令
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;必须知道的：&lt;code&gt;#&lt;/code&gt;是vim中的注释符号&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在输入模式中，可以使用以下按键：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符按键以及Shift组合&lt;/strong&gt;，输入字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ENTER&lt;/strong&gt;，回车键，换行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BACK SPACE&lt;/strong&gt;，退格键，删除光标前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DEL&lt;/strong&gt;，删除键，删除光标后一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方向键&lt;/strong&gt;，在文本中移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOME&lt;/strong&gt;/&lt;strong&gt;END&lt;/strong&gt;，移动光标到行首/行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Page Up&lt;/strong&gt;/&lt;strong&gt;Page Down&lt;/strong&gt;，上/下翻页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insert&lt;/strong&gt;，切换光标为输入/替换模式，光标将变成竖线/下划线&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;ESC&lt;/strong&gt;，&lt;strong&gt;退出输入模式，切换到命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;替换模式&#34;&gt;替换模式
&lt;/h3&gt;&lt;h4 id=&#34;进入替换模式&#34;&gt;进入替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;替换模式&lt;/strong&gt;，此时新输入的文本将直接替代/覆盖已经存在的内容，点击ESC键返回常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符替换模式&lt;/strong&gt;，此时新输入的字符将替代光标之下的当前字符，然后自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gR&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;虚拟替换模式&lt;/strong&gt;，其与替换模式最主要的区别在于，对&amp;lt;Tab&amp;gt;键和换行符的不同处理方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gr&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符虚拟替换模式&lt;/strong&gt;，在替换光标下的当前字符之后，将自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;虚拟替换模式&#34;&gt;虚拟替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;Tab&amp;gt;键&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;直接替代&amp;lt;Tab&amp;gt;键所占用的所有空格的位置&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309213229157.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;仅仅替代单个空格&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250310190903275.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;NL&amp;gt;换行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;增加新行&lt;/strong&gt;：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214201236.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;用新行替代当前行内容&lt;/strong&gt;（即清空当前行）：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309215042518.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;命令模式&#34;&gt;命令模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在命令模式下按下 :（英文冒号）就进入了底线命令模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;有的命令要输入 / 执行&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式常用命令&#34;&gt;命令模式常用命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w&lt;/strong&gt; &amp;ndash; 保存文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q&lt;/strong&gt; &amp;ndash; 退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:wq&lt;/strong&gt; &amp;ndash; 保存文件并退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q!&lt;/strong&gt; &amp;ndash; 强制退出Vim编辑器，不保存修改&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nu&lt;/strong&gt; &amp;ndash; 显示行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nonu&lt;/strong&gt; &amp;ndash; 取消行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n&lt;/strong&gt; &amp;ndash; 定位到第n行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2d&lt;/strong&gt; &amp;ndash; 删除行号n1至n2之间的内容（n1和n2都代表数字）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出底线命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式处理文件&#34;&gt;命令模式处理文件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w [filename]&lt;/strong&gt; &amp;ndash; 将编辑的数据储存成另一个文件（类似另存新档）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:r [filename]&lt;/strong&gt; &amp;ndash; 在编辑的数据中，读入另一个档案的数据，即将filenam的内容加到光标所在行后面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2 w [filename]&lt;/strong&gt; &amp;ndash; 将 n1 到 n2 的内容储存成 filename&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式搜索文本&#34;&gt;命令模式搜索文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;?{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;上&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;下&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&lt;/strong&gt; &amp;ndash; 重复前一个搜寻的动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; &amp;ndash; &lt;strong&gt;反向&lt;/strong&gt;进行前一个搜寻动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set ic&lt;/strong&gt; &amp;ndash; 编辑器将不会区分大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set noic&lt;/strong&gt; &amp;ndash; 编辑器将区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式替换文本&#34;&gt;命令模式替换文本
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;格式：&lt;/strong&gt;&lt;mark&gt;&lt;strong&gt;:(作用范围)s/{目标}/{替换}(/替换的标志)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的作用范围&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;当前行替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;%s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;全文替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;n1,n2s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定行替换，替换n1到n2间所有行的目标，&lt;strong&gt;n2可以是$，代指最后一行&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;&amp;rsquo;&amp;lt;,&amp;rsquo;&amp;gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定区域替换&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的标志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[无]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;只替换作用范围内，&lt;strong&gt;每行第一次出现&lt;/strong&gt;的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;g&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;一次性替换所有&lt;/strong&gt;作用范围内所有的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写不敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;I&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;对作用范围内的目标&lt;strong&gt;逐个替换&lt;/strong&gt;，替换前需进行确认&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;替换标志可以使用多个，比如/gic&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式执行linux命令&#34;&gt;命令模式执行linux命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开终端窗口并打印执行命令的结果，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:!bash&lt;/code&gt;打开bash shell并执行命令&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:!date		//执行 date 命令显示时间，执行完命令以后按下键盘上的 Enter 就会返回到文件
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:r ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将shell命令command的结果插入到当前行的下一行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:r !date		//读取系统时间并插入到当前行的下一行
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将n1至n2行范围内的内容交给命令command处理，并将处理结果替换起始行号和结束行号指定范围中的内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1,4 !sort		//将第1行到第4行的内容进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以只指定起始行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1 !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将第1行的小写字母转为大写字母
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以用.表示当前光标所在行&lt;/strong&gt;  &lt;strong&gt;(输入&lt;code&gt;!!&lt;/code&gt;会变成&lt;code&gt;:.!&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:. !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将当前行的小写转为大写
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 w ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将起始行号和结束行号所指定范围的内容作为命令command的输入，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:1 w !bash&lt;/code&gt;，将会把第1行的内容作为bash命令来执行并显示结果，而且不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;同样的 &lt;code&gt;: . w !bash&lt;/code&gt;将当前行的内容作为bash命令来执行&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重新执行最近一次运行过的命令&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:shell&lt;/strong&gt; / &lt;strong&gt;:terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开命令终端（输入exit结束并返回vim）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;:version&lt;/code&gt;命令（按&lt;code&gt;q&lt;/code&gt;退出），查看是否包含+terminal关键字，以确认是否能使用 &lt;code&gt;:terminal&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式定义快捷键&#34;&gt;命令模式定义快捷键
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基本格式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模式&lt;/th&gt;
          &lt;th&gt;基本格式&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;仅在普通模式下有效，定义普通模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:imap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义插入模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义可视模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;命令行模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:cmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义命令行模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:map &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;定义快捷键，适用于普通、可视、操作和选择模式，但不建议用于有冲突的情况。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体不可递归映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:noremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;类似&lt;code&gt;:map&lt;/code&gt;，但是不会递归地扩展已经存在的映射，避免意外行为。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在普通模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:inoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在插入模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在可视模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;缩写&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:ab [缩写] [完整文本]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;输入缩写后空格，自动扩展为完整文本&lt;/strong&gt;。例如：&lt;code&gt;:ab email xxxx@gmail.com&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;什么是&amp;lt;key&amp;gt;？&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;key&amp;gt; 对应的是 ^[A-Z] ， 定义快捷键时使用ctrl+v+[a-z]，使用快捷键时用对应的ctrl+[a-z]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;什么是递归映射？&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果已经做了以上映射，那么按下Q，执行的将是gg而不是j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了避免以上问题，应该这样定义：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;几个例子&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^D Ahelloworld&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件的光标所在行的行尾，添加 helloworld 字符串，按住组合键 ctrl + d 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^M I#&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件光标处所在行的行首插入#，按住组合键 ctrl + m 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:ab email xxxx@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输入 email+空格 会把输入的 email 自动替换成 xxxx @gmail.com&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可视化模式&#34;&gt;可视化模式
&lt;/h3&gt;&lt;h4 id=&#34;进入可视化模式&#34;&gt;进入可视化模式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可视化模式可以分为以下三种：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;v&lt;/strong&gt; &amp;ndash; &lt;strong&gt;字符可视化模式&lt;/strong&gt;，文本选择是以&lt;strong&gt;字符&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;行可视化模式&lt;/strong&gt;，文本选择是&lt;strong&gt;以行&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl-V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;块可视化模式&lt;/strong&gt;，可以选择一个&lt;strong&gt;矩形内&lt;/strong&gt;的文本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用以上命令，将会切换到对应模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用I（大写i），将会切换到插入模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gv&lt;/strong&gt; &amp;ndash; 进入上一次的可视化模式，并选中当时选中的文本**（命令模式也能用此命令）**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出可视化模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;可视化模式下移动光标&#34;&gt;可视化模式下移动光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;命令模式下的光标移动方法仍然适用&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;进入任意可视化模式，移动光标，会从当前位置开始，以相应方式高亮选中字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;o&lt;/strong&gt; &amp;ndash;  移动光标到已经选取的文本的&lt;strong&gt;结尾处&lt;/strong&gt;或者&lt;strong&gt;开头处&lt;/strong&gt;（根据现在光标所在位置确定）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;如果是块可视化模式，移动光标到对角处
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;O&lt;/strong&gt; &amp;ndash; 在&lt;strong&gt;块可视化&lt;/strong&gt;模式下，移动光标到&lt;strong&gt;同一行的结尾处或者开头处&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;可视化模式下编辑&#34;&gt;可视化模式下编辑
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大部分命令模式对内容操作的命令都能在可视化模式下使用，比如：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;d&lt;/strong&gt; &amp;ndash; 删除高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt; &amp;ndash; 删除一整行文本，&lt;strong&gt;即使只有一部分被选中了&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 删除高亮文本并进入插入模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; 复制高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Y&lt;/strong&gt; &amp;ndash; 复制一整行文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p&lt;/strong&gt; &amp;ndash; 黏贴复制的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 对高亮文本进行&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt; / &amp;lt;&lt;/strong&gt; &amp;ndash; 对高亮文本增加/减少缩进，幅度为&lt;strong&gt;一个Tab键&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 输入单个字符，把高亮文本所有字符逐个替换为该字符&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim宏录制&#34;&gt;vim宏录制
&lt;/h2&gt;&lt;h3 id=&#34;宏录制的录制操作&#34;&gt;宏录制的录制操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;假设需要将文本的每一行的行首插入入一个 tab 键&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先将光标移动到第一行，在普通模式下按下 q 键（&lt;strong&gt;宏录制是 q 键启动的&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;按一个 a （字母随意）,表示该宏注册为 a&lt;/li&gt;
&lt;li&gt;按下 I 在行首插入一个 tab 键&lt;/li&gt;
&lt;li&gt;按下ESC退出编辑模式&lt;/li&gt;
&lt;li&gt;按下 j 将光标移动到下一行行首&lt;/li&gt;
&lt;li&gt;按下 q 键完成录制操作（&lt;strong&gt;宏录制是 q 键结束的&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;mark&gt;主要步骤：&lt;strong&gt;q(开始）&lt;/strong&gt;-&amp;gt; &lt;strong&gt;a(命名)&lt;/strong&gt; -&amp;gt; &lt;strong&gt;操作&lt;/strong&gt; -&amp;gt; &lt;strong&gt;q(结束)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;宏录制的使用&#34;&gt;宏录制的使用
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;@a&lt;/strong&gt; &amp;ndash; 执行a宏录制的一系列动作，注意&lt;strong&gt;a是录制的操作名称&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n@a&lt;/strong&gt; &amp;ndash; 执行&lt;strong&gt;n次&lt;/strong&gt;a宏&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@@&lt;/strong&gt; &amp;ndash; 重复上一次使用的宏操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vim相关案例&#34;&gt;VIM相关案例
&lt;/h1&gt;&lt;h2 id=&#34;vim缓存泄露&#34;&gt;vim缓存泄露
&lt;/h2&gt;&lt;h3 id=&#34;vim交换文件&#34;&gt;vim交换文件
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在用vim打开文件1.txt，直接关闭终端，再次试图用vim打开1.txt时会出现如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311194714710.png&#34; alt=&#34;image-20250311194714710&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;选择恢复（R），弹出如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311195430374.png&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Vim 中，当处理同一个文件发生多次异常退出时，它会依次使用不同的后缀来命名交换文件。按照你给出的模式，首次产生的交换文件名为 &lt;code&gt;.index.php.swp&lt;/code&gt;，再次意外退出后产生 &lt;code&gt;.index.php.swo&lt;/code&gt;，第三次产生的交换文件为 &lt;code&gt;.index.php.swn&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从第四次开始及之后的交换文件，Vim 会循环使用这三个后缀（.swp, .swo, .swn）&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题
&lt;/h3&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/4b76d009d10ed0cb65aaad6f5f85d2cc.png&#34; alt=&#34;在这里插入图片描述&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;使用以下命令获取网站中的vim文件缓存：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget http://xxx/.index.php.swp -P /home       //-P指定下载位置
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用vim -r恢复文件并打开:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -r .index.php.swp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;获取到网站源码后，进行代码审计即可&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
