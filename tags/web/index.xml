<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Web on kakahuote</title>
        <link>https://blog.928330.xyz/tags/web/</link>
        <description>Recent content in Web on kakahuote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Thu, 24 Jul 2025 22:41:31 +0800</lastBuildDate><atom:link href="https://blog.928330.xyz/tags/web/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Nginx入门</title>
        <link>https://blog.928330.xyz/p/nginx%E5%85%A5%E9%97%A8/</link>
        <pubDate>Thu, 24 Jul 2025 22:15:30 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/nginx%E5%85%A5%E9%97%A8/</guid>
        <description>&lt;p&gt;&lt;span style=&#34;color:aqua;font-size:20px&#34;&gt;本教程暂时只针对Docker容器的nginx，切勿看错&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginxdocker使用教程&#34;&gt;Nginx（docker）使用教程
&lt;/h1&gt;&lt;h2 id=&#34;什么是nginx&#34;&gt;什么是Nginx
&lt;/h2&gt;&lt;p&gt;Nginx（发音为 &amp;ldquo;engine-X&amp;rdquo;）是一款开源的、高性能的HTTP和反向代理服务器&lt;/p&gt;
&lt;p&gt;它的设计哲学是提供极致的性能、稳定性、丰富的功能、简单的配置和低资源消耗，看上去就很厉害&lt;/p&gt;
&lt;h3 id=&#34;高性能的工作进程模型&#34;&gt;高性能的工作进程模型
&lt;/h3&gt;&lt;p&gt;Nginx采用事件驱动的异步非阻塞架构&lt;/p&gt;
&lt;p&gt;与传统的Apache等服务器为每个请求创建一个新进程或线程不同，Nginx使用一个主进程和少数几个工作进程&lt;/p&gt;
&lt;p&gt;主进程负责读取配置、管理工作进程，而真正处理网络请求的是工作进程&lt;/p&gt;
&lt;p&gt;每个工作进程都是单线程的，异步地处理成千上万个并发连接&lt;/p&gt;
&lt;p&gt;这种模型避免了创建和销毁进程/线程的开销以及上下文切换的成本，因此能以极低的内存占用应对高并发场景&lt;/p&gt;
&lt;h3 id=&#34;主要用法&#34;&gt;主要用法
&lt;/h3&gt;&lt;h4 id=&#34;web服务器&#34;&gt;Web服务器
&lt;/h4&gt;&lt;p&gt;直接向客户端提供静态资源（如HTML、CSS、图片）的服务&lt;/p&gt;
&lt;p&gt;由于其高效的文件读取和网络传输能力，Nginx在处理静态内容方面表现极其出色,&lt;del&gt;适合搭建博客&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&#34;反向代理服务器&#34;&gt;反向代理服务器
&lt;/h4&gt;&lt;p&gt;它是是客户端和后端真实服务器之间的中间人&lt;/p&gt;
&lt;p&gt;它可以将客户端请求转发到后端的应用服务器（如Node.js、Java、Python应用），并将后端响应返回给客户端，从而实现请求分发、负载均衡，并能隐藏后端服务的真实IP和端口，提升安全性&lt;/p&gt;
&lt;h4 id=&#34;负载均衡器&#34;&gt;负载均衡器
&lt;/h4&gt;&lt;p&gt;当后端有多台服务器时，Nginx可以根据预设的策略将请求分发到这些服务器上，从而分担单一服务器的压力&lt;/p&gt;
&lt;h4 id=&#34;api网关&#34;&gt;API网关
&lt;/h4&gt;&lt;p&gt;在微服务架构中，Nginx可以作为所有API请求的统一入口，执行如身份验证、速率限制、日志记录、服务发现等通用功能&lt;/p&gt;
&lt;h2 id=&#34;目录结构&#34;&gt;目录结构
&lt;/h2&gt;&lt;p&gt;以国内Docker镜像源的&lt;code&gt;nginx:latest&lt;/code&gt;为例（没用过看这里：&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bdocker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;快速上手Docker
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;），容器内的目录结构通常如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;/&lt;/span&gt;                                                  &lt;span style=&#34;color:#7f848e&#34;&gt;# 根目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;etc/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;   &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;nginx/&lt;/span&gt;                            &lt;span style=&#34;color:#7f848e&#34;&gt;# 配置文件目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;nginx.conf&lt;/span&gt;                  &lt;span style=&#34;color:#7f848e&#34;&gt;# 主配置文件（Nginx 的核心配置）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;mime.types&lt;/span&gt;                &lt;span style=&#34;color:#7f848e&#34;&gt;# MIME类型映射表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;conf.d/&lt;/span&gt;                       &lt;span style=&#34;color:#7f848e&#34;&gt;# 子配置目录（用于虚拟主机）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;           &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;default.conf&lt;/span&gt;           &lt;span style=&#34;color:#7f848e&#34;&gt;# 默认网站配置文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;usr/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;   &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;share/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;nginx/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;           &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;html/&lt;/span&gt;                     &lt;span style=&#34;color:#7f848e&#34;&gt;# 默认的 Web 根目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;               &lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.html&lt;/span&gt;         &lt;span style=&#34;color:#7f848e&#34;&gt;# 默认欢迎页面
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;               &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;50x.html&lt;/span&gt;            &lt;span style=&#34;color:#7f848e&#34;&gt;# 服务器错误页面（如 500、502）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;var/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;   &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;log/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;nginx/&lt;/span&gt;                       &lt;span style=&#34;color:#7f848e&#34;&gt;# 日志文件目录（部分精简镜像无日志输出）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;           &lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;access.log&lt;/span&gt;             &lt;span style=&#34;color:#7f848e&#34;&gt;# 访问日志（默认可能未启用）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;           &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;error.log&lt;/span&gt;                &lt;span style=&#34;color:#7f848e&#34;&gt;# 错误日志（默认可能未启用）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;│&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;usr/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;sbin/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;nginx&lt;/span&gt;                          &lt;span style=&#34;color:#7f848e&#34;&gt;# 主程序二进制文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要注意以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;日志默认输出到标准输出/错误（stdout/stderr），而不是文件中&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在编译安装的传统方式中，Nginx日志会记录在：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;logs&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;而在Docker官方镜像中，日志默认不写入文件，而是输出到标准输出（stdout）和标准错误（stderr）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看日志的方式&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs &amp;lt;容器ID&amp;gt;/&amp;lt;名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;&lt;code&gt;/etc/nginx/conf.d/&lt;/code&gt;是主配置目录，&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;是主配置文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在Docker镜像中，Nginx的主配置文件仍然是&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但在这个文件中有这样一行代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;/etc/nginx/conf.d/*.conf&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;include&lt;/code&gt;是Nginx配置语言中的指令，用于包含其他配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也就是说，&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;默认会包含&lt;code&gt;/etc/nginx/conf.d/&lt;/code&gt;这个子目录中的所有配置（.conf）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;常用命令
&lt;/h2&gt;&lt;h3 id=&#34;查看版本&#34;&gt;查看版本
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出当前安装的 Nginx 版本号，用于确认是否正确安装Nginx及其版本信息&lt;/p&gt;
&lt;h3 id=&#34;检查配置文件语法&#34;&gt;检查配置文件语法
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -t
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是极其重要的安全步骤。在每次修改配置文件后&lt;strong&gt;必须执行&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主进程会 fork 一个临时子进程&lt;/li&gt;
&lt;li&gt;子进程尝试解析所有配置文件，但不会绑定端口或真正启动服务&lt;/li&gt;
&lt;li&gt;若语法无误，会提示&lt;code&gt;syntax is ok&lt;/code&gt;和 &lt;code&gt;test is successful&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若有错误，会明确指出是哪一行、哪个文件配置有误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250724132842292.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250724132842292&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;重新加载配置文件&#34;&gt;重新加载配置文件
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s reload
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;强制停止&#34;&gt;强制停止
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置文件&#34;&gt;配置文件
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Nginx的所有功能都是通过配置文件&lt;code&gt;nginx.conf&lt;/code&gt;来驱动的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该文件主要由多个配置块组成，这些块由花括号&lt;code&gt;{}&lt;/code&gt;界定，可以嵌套，形成了层级分明的结构&lt;/p&gt;
&lt;p&gt;一个典型的&lt;code&gt;nginx.conf&lt;/code&gt;结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;nginx.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;全局块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;events块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;server块（可多个）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;location块（可多个）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;具体示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;nginx&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;worker_processes&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;auto&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;error_log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;/var/log/nginx/error.log&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;warn&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;pid&lt;/span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;/var/run/nginx.pid&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;events&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;worker_connections&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;http&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;include&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;/etc/nginx/mime.types&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;default_type&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;application/octet-stream&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;log_format&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;main&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$remote_addr&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$remote_user&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$time_local]&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$request&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$status&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$body_bytes_sent&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_referer&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_user_agent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_x_forwarded_for&amp;#34;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;access_log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;/var/log/nginx/access.log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;main&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;sendfile&lt;/span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;on&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;tcp_nopush&lt;/span&gt;      &lt;span style=&#34;color:#e06c75&#34;&gt;on&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;keepalive_timeout&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;65&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt;       &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;localhost&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c678dd&#34;&gt;root&lt;/span&gt;   &lt;span style=&#34;color:#98c379&#34;&gt;/usr/share/nginx/html&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c678dd&#34;&gt;index&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.htm&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;全局块&#34;&gt;全局块
&lt;/h3&gt;&lt;p&gt;位于配置文件顶部，未嵌套于任何块中&lt;/p&gt;
&lt;p&gt;用于配置Nginx整体运行环境，影响所有子模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;nginx&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;worker_processes&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;auto&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;error_log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;/var/log/nginx/error.log&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;warn&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;pid&lt;/span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;/var/run/nginx.pid&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user&lt;/code&gt;：指定运行工作进程的用户和用户组&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;worker_processes&lt;/code&gt;：指定工作进程数量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auto&lt;/code&gt;表示自动与 CPU 核心数一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;error_log&lt;/code&gt;：设置错误日志的路径和日志级别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nginx支持的日志级别（从高到低）如下：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;级别&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录所有信息，主要用于开发或调试，信息量极大。通常需编译时启用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;普通信息，如配置加载成功、进程启动、连接创建等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;notice&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;正常但重要的事件，如配置文件重载、进程关闭等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;警告信息，非致命错误，比如配置中存在问题但可以忽略或继续运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;error&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;运行过程中出现的错误，如连接失败、服务不可达等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;crit&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;严重错误，Nginx可能无法继续运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;alert&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;必须立刻处理的严重问题&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;emerg&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;紧急状态，比如系统崩溃，Nginx无法启动&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pid&lt;/code&gt;：指定记录主进程PID的文件路径&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;events块&#34;&gt;events块
&lt;/h3&gt;&lt;p&gt;紧随全局块之后，一级块&lt;/p&gt;
&lt;p&gt;用于配置与网络连接处理相关的指令，影响工作进程的并发性能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;events&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;worker_connections&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;worker_connections&lt;/code&gt;：每个工作进程可同时处理的最大连接数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总并发连接数约为&lt;code&gt;worker_processes * worker_connections&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http块&#34;&gt;http块
&lt;/h3&gt;&lt;p&gt;紧随events块之后，一级块&lt;/p&gt;
&lt;p&gt;用于配置HTTP协议相关的指令，是配置Web服务的核心部分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;http&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;include&lt;/span&gt;       &lt;span style=&#34;color:#98c379&#34;&gt;/etc/nginx/mime.types&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;default_type&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;application/octet-stream&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;log_format&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;main&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$remote_addr&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$remote_user&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$time_local]&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$request&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$status&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$body_bytes_sent&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_referer&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_user_agent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$http_x_forwarded_for&amp;#34;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;access_log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;/var/log/nginx/access.log&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;main&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;sendfile&lt;/span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;on&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;tcp_nopush&lt;/span&gt;      &lt;span style=&#34;color:#e06c75&#34;&gt;on&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;keepalive_timeout&lt;/span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;65&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;include&lt;/code&gt;：引入外部文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;/etc/nginx/mime.types&lt;/code&gt;用于MIME类型配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;default_type&lt;/code&gt;：未明确 MIME 类型时的默认类型&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;log_format&lt;/code&gt;：定义日志格式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;access_log&lt;/code&gt;：指定访问日志的输出路径及格式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sendfile&lt;/code&gt;：启用高效文件传输方式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;tcp_nopush&lt;/code&gt;：优化网络传输性能，避免频繁发送小包&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;keepalive_timeout&lt;/code&gt;：设置长连接超时时间&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;server块&#34;&gt;server块
&lt;/h3&gt;&lt;p&gt;嵌套于http块内部，二级块，可存在多个，用于配置多个虚拟主机&lt;/p&gt;
&lt;p&gt;用于定义单个虚拟主机的配置，通过监听端口和服务器名称对请求进行分发&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;localhost&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;listen&lt;/code&gt;：设置监听的端口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只有访问主机该端口的请求才会被接受&lt;/p&gt;
&lt;p&gt;基本用法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;lt;地址&amp;gt;:&amp;lt;端口&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;[参数]&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;地址&lt;/code&gt;&lt;/strong&gt;（可选）：指定绑定的 IP（默认是所有IP）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;端口&lt;/code&gt;&lt;/strong&gt;：监听的端口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;参数&lt;/code&gt;&lt;/strong&gt;（可选）：例如&lt;code&gt;default_server&lt;/code&gt;、&lt;code&gt;ssl&lt;/code&gt;、&lt;code&gt;http2&lt;/code&gt; 等（我们后面都会提到）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有一个比较特殊的参数：&lt;code&gt;default_server&lt;/code&gt;，用来指定默认的server块，当Nginx收到请求但找不到任何&lt;code&gt;server_name&lt;/code&gt;匹配时，就会使用这个默认配置来处理请求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:yellow;&#34;&gt;&lt;strong&gt;介绍几种常见&lt;code&gt;listen&lt;/code&gt;字段写法：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;80&lt;/code&gt;：监听所有IP的80端口（80是默认HTTP端口），相当于&lt;code&gt;0.0.0.0:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;127.0.0.1:8080&lt;/code&gt;：仅监听本地回环地址的8080端口&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[::]:80&lt;/code&gt;：IPv6地址监听80端口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;server_name&lt;/code&gt;：匹配请求的主机名或域名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只有请求头中的Host字段符合，Nginx才会把请求交给这个&lt;code&gt;server&lt;/code&gt;块处理&lt;/p&gt;
&lt;p&gt;可以在&lt;code&gt;server_name&lt;/code&gt;中写多个值，也支持通配符&lt;code&gt;*&lt;/code&gt;，也可以使用&lt;code&gt;_&lt;/code&gt;表示任何Host值&lt;/p&gt;
&lt;p&gt;如果不写这个字段，http块又只有一个server，那么这个server块会所有请求都匹配（包括 IP）&lt;/p&gt;
&lt;p&gt;如果不写这个字段，http块又有多个server，那么这个server块会作为默认server，处理未匹配的请求&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;location块&#34;&gt;location块
&lt;/h3&gt;&lt;p&gt;嵌套于server块内部，三级块&lt;/p&gt;
&lt;p&gt;用于对URI（注意不是URL）进行匹配，制定请求的处理方式，如资源路径、代理规则等&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;root&lt;/span&gt;   &lt;span style=&#34;color:#98c379&#34;&gt;/usr/share/nginx/html&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;index&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.htm&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;location&lt;/code&gt;：用于匹配客户端请求的URI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;示例这里是匹配以&lt;code&gt;/&lt;/code&gt;开头的URI（实际上就是匹配所有请求，因为URI就是以&lt;code&gt;/&lt;/code&gt;开头的）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此外，Nginx提供多种匹配方式，优先级不同：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;精确匹配&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;location = /login {}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;仅匹配 URI 等于 &lt;code&gt;/login&lt;/code&gt; 的请求&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;前缀匹配&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;location /images/ {}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;匹配以 &lt;code&gt;/images/&lt;/code&gt; 开头的 URI&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;正则匹配&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;~&lt;/code&gt;（区分大小写）&lt;br /&gt;&lt;code&gt;~*&lt;/code&gt;（不区分大小写）&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;location ~ \.php$ {}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;使用正则表达式匹配 URI&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;优先匹配&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;^~&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;location ^~ /static/ {}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;前缀匹配优先于正则匹配&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;root&lt;/code&gt;：设置请求资源的根目录路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个请求到达时，Nginx会将请求的 URI 拼接到这个路径后面，以确定文件的具体位置&lt;/p&gt;
&lt;p&gt;如果客户端访问&lt;code&gt;/index.html&lt;/code&gt;，那么实际访问的是服务器上的&lt;code&gt;/var/www/html/index.html&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;index&lt;/code&gt;：指定访问目录时的默认文件名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果用户访问的是目录而不是具体文件，Nginx会在&lt;code&gt;/usr/share/nginx/html/&lt;/code&gt;目录下按顺序查找：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.htm&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;只要找到其中一个文件，就立即返回该文件作为响应；如果都找不到，会返回 403（禁止访问）或 404（未找到），视配置而定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;index&lt;/code&gt;也可以直接写在server块里面，作为所有location块的默认值&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:yellow;font-size:18px&#34;&gt;&lt;strong&gt;说了这么多，我们最后总结一下&lt;code&gt;listen&lt;/code&gt;、&lt;code&gt;server_name&lt;/code&gt;、&lt;code&gt;location&lt;/code&gt; 三者是如何配合工作的：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;用户访问浏览器输入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-url&#34; data-lang=&#34;url&#34;&gt;http://localhost/images/logo.png
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Nginx内部处理流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;看端口：&lt;/strong&gt;
该请求是发给哪个端口，是80，那就匹配所有listen 80的server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;看Host头：&lt;/strong&gt;
Host是localhost，找哪个server_name匹配上了，进入该server块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;看URI：&lt;/strong&gt;
URI是/images/logo.png，在这个server中找哪个location匹配得最好，执行该location的规则&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心功能--web服务&#34;&gt;核心功能 —— Web服务
&lt;/h2&gt;&lt;p&gt;Web 服务是 Nginx 最基础，也是最核心的功能，它能够高效地处理客户端对静态资源的请求&lt;/p&gt;
&lt;p&gt;这主要通过&lt;code&gt;server&lt;/code&gt;块中的&lt;code&gt;root&lt;/code&gt;、&lt;code&gt;index&lt;/code&gt;、&lt;code&gt;location&lt;/code&gt;来协同完成&lt;/p&gt;
&lt;h3 id=&#34;部署静态资源&#34;&gt;部署静态资源
&lt;/h3&gt;&lt;p&gt;可以把Nginx作为静态资源服务器，当用户请求时，Nginx从服务器的指定文件路径中查找并返回对应的文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;root&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/var/www/my-project/public&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.htm&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;try_files&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$uri&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$uri/&lt;/span&gt; =&lt;span style=&#34;color:#d19a66&#34;&gt;404&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; ~&lt;span style=&#34;color:#98c379&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;\.(jpg|jpeg|gif|png|css|js|ico|webp)&lt;/span&gt;$ {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;expires&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;30d&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;try_files $uri $uri/ =404&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个非常强大的指令，常用于处理单页应用（SPA）的路由，它的工作原理是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$uri&lt;/code&gt;：尝试将URI直接作为文件名进行查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$uri/&lt;/code&gt;：如果上一步失败，则尝试将URI作为一个目录名，并在该目录下查找由&lt;code&gt;index&lt;/code&gt;指令定义的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=404&lt;/code&gt;：如果前两步都失败，则返回一个404 Not Found错误&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp)$&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个正则匹配，&lt;code&gt;~*&lt;/code&gt;表示不区分大小写的正则，它会匹配所有以上述后缀结尾的请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;expires 30d&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于设置HTTP响应头中的&lt;code&gt;Expires&lt;/code&gt;和&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;告诉客户端浏览器可以将这些静态资源缓存30天，从而减少不必要的请求，提升后续访问速度&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置https服务&#34;&gt;配置HTTPS服务
&lt;/h3&gt;&lt;p&gt;为网站启用HTTPS可以对客户端和服务器之间的传输数据进行加密，确保数据安全&lt;/p&gt;
&lt;p&gt;配置前，我们需要从证书颁发机构（CA）获取SSL/TLS证书文件和私钥文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Nginx&#34; data-lang=&#34;Nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;443&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;ssl&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;yourdomain.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_certificate&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/path/to/fullchain.pem&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_certificate_key&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/path/to/privkey.pem&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_session_cache&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;shared:SSL:10m&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_session_timeout&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10m&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_protocols&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;TLSv1.2&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;TLSv1.3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_ciphers&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;off&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;root&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/var/www/my-project/public&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;index.html&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;try_files&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$uri&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$uri/&lt;/span&gt; =&lt;span style=&#34;color:#d19a66&#34;&gt;404&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;yourdomain.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;301&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;https://&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$server_name$request_uri&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;listen 443 ssl http2&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;443&lt;/code&gt;是HTTPS的标准端口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssl&lt;/code&gt;参数表示在此端口上启用SSL/TLS加密&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;http2&lt;/code&gt;参数表示同时启用HTTP/2协议，它可以显著提升页面加载性能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_certificate&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定证书文件的路径，这通常是&lt;code&gt;.pem&lt;/code&gt;或&lt;code&gt;.crt&lt;/code&gt;格式的公钥证书链文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_certificate_key&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定与证书配对的私钥文件的路径，通常是&lt;code&gt;.key&lt;/code&gt;格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_session_cache&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开启SSL会话缓存，用于复用TLS握手过程，提升性能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_session_timeout&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置SSL会话的有效时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_protocols TLSv1.2 TLSv1.3&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定只使用安全的TLS协议版本，废弃老旧且不安全的SSLv3, TLSv1.0, TLSv1.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_ciphers&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定加密时使用的加密套件列表，配置安全的套件可以防止降级攻击&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssl_prefer_server_ciphers&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是否优先使用服务器端指定的加密套件，&lt;code&gt;off&lt;/code&gt;表示客户端优先&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;return 301 https://$server_name$request_uri&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return 301&lt;/code&gt;表示发送一个永久重定向的HTTP状态码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$server_name&lt;/code&gt;和&lt;code&gt;$request_uri&lt;/code&gt;是Nginx变量，分别代表当前请求的域名和完整的 URI（包含参数）&lt;/p&gt;
&lt;p&gt;这能确保用户访问任何HTTP页面时都能被准确地重定向到对应的HTTPS版本&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;核心功能--反向代理&#34;&gt;核心功能 —— 反向代理
&lt;/h2&gt;&lt;p&gt;反向代理是Nginx的一个核心功能&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nginx作为一个中间层，接收客户端的请求，再将请求转发给后端服务器处理，然后将响应返回给客户端&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这种方式的好处包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以隐藏后端服务器的真实地址和结构&lt;/li&gt;
&lt;li&gt;可以统一对外的入口，便于安全控制和运维管理&lt;/li&gt;
&lt;li&gt;可以实现负载均衡、高可用等复杂功能（后续再讲）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是一个最简单的Nginx配置示例，只实现把请求转发到后端服务器的功能：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;www.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http://127.0.0.1:3000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;proxy_pass http://127.0.0.1:3000;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;&#34;&gt;&lt;strong&gt;这是反向代理的核心语句，即将匹配到的请求转发到本机的3000端口，由本地某个服务来实际处理请求&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认情况下，Nginx把请求转发给后端时，不会携带原始客户端的信息&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:yellow;&#34;&gt;&lt;strong&gt;如果后端服务要获取用户的真实IP、请求协议、原始域名等信息，就需要使用&lt;code&gt;proxy_set_header&lt;/code&gt;来手动设置&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;www.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http://127.0.0.1:3000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;Host&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Real-IP&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$remote_addr&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Forwarded-For&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$scheme&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这些&lt;code&gt;proxy_set_header&lt;/code&gt;是给后端应用用的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Host $host&lt;/code&gt;&lt;/strong&gt;：原始请求中的主机名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;X-Real-IP $remote_addr&lt;/code&gt;&lt;/strong&gt;：客户端的真实 IP&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;X-Forwarded-For $proxy_add_x_forwarded_for&lt;/code&gt;&lt;/strong&gt;：经过的所有代理 IP 列表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;X-Forwarded-Proto $scheme&lt;/code&gt;&lt;/strong&gt;：原始请求的协议（http 或 https）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:yellow;&#34;&gt;&lt;strong&gt;如果我们有多个后端服务（比如多个进程、多个机器），可以用&lt;code&gt;upstream&lt;/code&gt;来统一管理后端服务器组&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;127.0.0.1&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;3000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#7f848e&#34;&gt;# server 127.0.0.1:3001;     #可以添加多个
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;www.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http://backend&lt;/span&gt;;   &lt;span style=&#34;color:#7f848e&#34;&gt;#&amp;lt;--这里不一样了，使用的是upstream
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;Host&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Real-IP&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$remote_addr&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Forwarded-For&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$scheme&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，我们只需要在&lt;code&gt;proxy_pass&lt;/code&gt;中写 &lt;code&gt;http://backend&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;具体的地址都集中写在&lt;code&gt;upstream backend&lt;/code&gt;块中，方便管理和负载均衡&lt;/p&gt;
&lt;h2 id=&#34;核心功能--负载均衡&#34;&gt;核心功能 —— 负载均衡
&lt;/h2&gt;&lt;p&gt;当&lt;code&gt;upstream&lt;/code&gt;块中定义了多台&lt;code&gt;server&lt;/code&gt;时，Nginx就自然地成为了一个负载均衡器&lt;/p&gt;
&lt;p&gt;它会根据指定的策略将请求分发到不同的服务器，以分担流量压力&lt;/p&gt;
&lt;h3 id=&#34;http负载均衡配置&#34;&gt;HTTP负载均衡配置
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Nginx&#34; data-lang=&#34;Nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend_cluster&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend1.example.com&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;weight=5&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend2.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend3.example.com&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backup&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend4.example.com&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;down&lt;/span&gt;;   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;http://backend_cluster&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_connect_timeout&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;5s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_read_timeout&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;10s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;weight=5&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为服务器设置权重，在默认的轮询策略下，权重越高的服务器接收到的请求比例就越高&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;backend1&lt;/code&gt;的请求量大约是&lt;code&gt;backend2&lt;/code&gt;的5倍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;backup&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将服务器标记为备用服务器&lt;/p&gt;
&lt;p&gt;只有当所有非备用的主服务器都无法访问时，Nginx才会将请求转发给它&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;down&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将服务器标记为永久下线，Nginx不会向它转发任何请求&lt;/p&gt;
&lt;p&gt;这通常用于服务器维护&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;proxy_connect_timeout&lt;/code&gt; &amp;amp; &lt;code&gt;proxy_read_timeout&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置Nginx与后端服务器建立连接的超时时间和读取响应的超时时间&lt;/p&gt;
&lt;p&gt;可以防止因个别后端服务响应缓慢而导致请求长时间挂起&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;负载均衡策略&#34;&gt;负载均衡策略
&lt;/h3&gt;&lt;h4 id=&#34;轮询&#34;&gt;轮询
&lt;/h4&gt;&lt;p&gt;默认策略，无需任何指令&lt;/p&gt;
&lt;p&gt;请求被按顺序、轮流分发到每台服务器，并考虑权重&lt;/p&gt;
&lt;h4 id=&#34;权重weight&#34;&gt;权重（weight）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;就像我们之前提到过的例子，&lt;code&gt;weight&lt;/code&gt;越高，分配的请求越多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此策略适合后端性能不一致的情况（强机多干活）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend_cluster&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;192.168.0.1&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;weight=3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;192.168.0.2&lt;/span&gt;  &lt;span style=&#34;color:#98c379&#34;&gt;weight=1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上例中，第一个服务器将获得大约75%的请求，第二个约25%&lt;/p&gt;
&lt;h4 id=&#34;ip哈希ip_hash&#34;&gt;IP哈希（ip_hash）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;根据客户端IP地址的哈希值来选择服务器&lt;/strong&gt;，这能确保来自同一个客户端的请求始终被定向到同一台后端服务器&lt;/p&gt;
&lt;p&gt;此策略对于需要保持用户会话状态的应用非常重要&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Nginx&#34; data-lang=&#34;Nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend_cluster&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;ip_hash&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend1.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend2.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;最少连接-least_conn&#34;&gt;最少连接 (least_conn)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;将新请求发送到当前活动连接数最少的服务器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此策略在处理耗时不同或长连接较多的请求时，能使负载分布得更加均匀&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Nginx&#34; data-lang=&#34;Nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend_cluster&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;least_conn&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend1.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;backend2.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;核心功能--tcpudp代理&#34;&gt;核心功能 —— TCP/UDP代理
&lt;/h2&gt;&lt;p&gt;Nginx不仅能代理HTTP，还能通过&lt;code&gt;stream&lt;/code&gt;模块在更底层的传输层（TCP/UDP）进行代理&lt;/p&gt;
&lt;p&gt;例如代理数据库连接、游戏服务器、DNS 查询等&lt;/p&gt;
&lt;p&gt;&lt;code&gt;stream&lt;/code&gt;块必须配置在&lt;code&gt;http&lt;/code&gt;块之外，位于主配置文件的顶层，和&lt;code&gt;http&lt;/code&gt;是平级的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Nginx&#34; data-lang=&#34;Nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;stream&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;mysql_cluster&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;192.168.1.101&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;3306&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;weight=2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;192.168.1.102&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;3306&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3307&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;mysql_cluster&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_timeout&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;20s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;udp&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;8.8.8.8&lt;/span&gt;:&lt;span style=&#34;color:#d19a66&#34;&gt;53&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以看到，stream块和http块的写法基本上是一样的，但是细节上还是有些不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;stream&lt;/code&gt;块不支持&lt;code&gt;location&lt;/code&gt;，没有路径匹配&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;stream&lt;/code&gt;块不解析协议内容，没有&lt;code&gt;proxy_set_header&lt;/code&gt;，只转发原始TCP/UDP数据流&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;stream&lt;/code&gt;块不支持&lt;code&gt;ip_hash&lt;/code&gt;的负载均衡策略&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>wireshark&amp;tshark简易指北</title>
        <link>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</link>
        <pubDate>Wed, 14 May 2025 01:15:30 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</guid>
        <description>&lt;h1 id=&#34;wireshark过滤语法&#34;&gt;wireshark过滤语法
&lt;/h1&gt;&lt;h2 id=&#34;运算符&#34;&gt;运算符
&lt;/h2&gt;&lt;h3 id=&#34;比较运算符&#34;&gt;比较运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;操作符&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;别名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;类C风格&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src == 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src != 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;===&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src === 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src !== 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;gt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;gt; 10&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;lt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt; 128&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ge&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len ge 0x100&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;le&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt;= 0x20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;contains&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;协议、字段或切片包含某个值&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sip.To contains &amp;ldquo;a1762&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;matches&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;~&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;右侧的正则表达式将被用来匹配左侧的字符串&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;http.host matches &amp;ldquo;acme.(org|com|net)&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:20px;color:red&#34;&gt;&lt;strong&gt;等于（==）和全等（===）的区别：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;== 是一种宽松的比较，只要有一个值匹配即可（any if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;=== 是一种严格的比较，所有可能的值都必须匹配（all if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同一个包，使用等于（==）可以过滤出源或目的端口为80报文，使用全等（===）则会匹配源目的端口都为80的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr == 10.0.0.0/8    等价于   ip.src==10.0.0.0/8 || ip.dst==10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr === 10.0.0.0/8    等价于   ip.src==10.0.0.0/8 &amp;amp;&amp;amp; ip.dst==10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;逻辑运算符&#34;&gt;逻辑运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作符&lt;/th&gt;
          &lt;th&gt;类C风格&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;and&lt;/td&gt;
          &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
          &lt;td&gt;逻辑与&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;and&lt;/strong&gt; tcp.flags.fin == 1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;or&lt;/td&gt;
          &lt;td&gt;||&lt;/td&gt;
          &lt;td&gt;逻辑或&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;or&lt;/strong&gt; ip.src == 192.1.1.1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xor&lt;/td&gt;
          &lt;td&gt;^^&lt;/td&gt;
          &lt;td&gt;逻辑异或，能且只能满足其中一个&lt;/td&gt;
          &lt;td&gt;tr.dst[0:3] == 0.6.29 &lt;strong&gt;xor&lt;/strong&gt; tr.src[0:3] == 0.6.29&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;not&lt;/td&gt;
          &lt;td&gt;!&lt;/td&gt;
          &lt;td&gt;逻辑非&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;!&lt;/strong&gt; udp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[…]&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;[a:b]：从第a个字符开始取b个字符&lt;/td&gt;
          &lt;td&gt;http.request.method**[0:3]**==&amp;ldquo;GET&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;in&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;匹配集合内的元素，代替==&lt;/td&gt;
          &lt;td&gt;http.request.method &lt;strong&gt;in&lt;/strong&gt; {&amp;ldquo;HEAD&amp;rdquo;, &amp;ldquo;GET&amp;rdquo;}&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;函数&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;upper&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为大写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;lower&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为小写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;len&lt;/td&gt;
          &lt;td&gt;返回字符串字段或字节字段的字节长度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;count&lt;/td&gt;
          &lt;td&gt;返回帧中字段的出现次数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;将非字符串字段转换为字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vals&lt;/td&gt;
          &lt;td&gt;将字段值转换为其值字符串（如果有）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;dec&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;hex&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十六进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;max&lt;/td&gt;
          &lt;td&gt;返回参数的最大值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;min&lt;/td&gt;
          &lt;td&gt;返回参数的最小值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;abs&lt;/td&gt;
          &lt;td&gt;返回参数的绝对值&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;upperlower&#34;&gt;upper()、lower()
&lt;/h3&gt;&lt;p&gt;可以使用这两个函数，将字符串转化为大小写，再进行正则匹配，做到不区分大小写的功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lower&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.server&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;apache&amp;#34;&lt;/span&gt;  //过滤HTTP响应头的server字段为apache的
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;upper&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.method&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;post|get&amp;#34;&lt;/span&gt;  //过滤http请求方法为POST或GET
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;len&#34;&gt;len()
&lt;/h3&gt;&lt;p&gt;len()函数将返回字段的字节大小，因此可以和比较操作符配合使用，过滤某个报文字段符合大小要求的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.uri&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;   //过滤http头部的URI字段，大于等于10字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.host&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;20&lt;/span&gt;    //过滤HTTP主机名大于等于20字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;string&#34;&gt;string()
&lt;/h3&gt;&lt;p&gt;当字段为非字符串类型，而又想转换为字符串字段再进行正则匹配时，很方便&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.addr&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^10|^11&amp;#34;&lt;/span&gt;    //过滤IP为10网段开头或者23网段开头的IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; matches r&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^172\.(1[6-9]|2[0-9]|3[0-1])\.[0-9]{1,3}\.255&amp;#34;&lt;/span&gt;   //匹配目的IP中以255结尾的IP地址&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;172.16到172.31&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maxmin&#34;&gt;max()、min()
&lt;/h3&gt;&lt;p&gt;max()和min()接受相同类型的任意数量的参数，并分别返回集合中最大/最小的参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;max&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport,tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口、目的端口，最大不能超过1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;min&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport+tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口+目的端口大于等于1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤ip&#34;&gt;过滤IP
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）源地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.src == 192.168.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2）目的地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.dst == 192.168.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3）源地址或目的地址是192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr == 192.168.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要原地址和目标地址一样就用===&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4）排除上述包&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!(表达式)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤协议&#34;&gt;过滤协议
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）仅捕获某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接写协议名即可，如http（区分大小写）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）捕获多种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑或&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http or telent
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3）排除某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑非&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;not http
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;! http
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤端口需要指明协议&#34;&gt;过滤端口（需要指明协议）
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）捕获某一端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp.port == 80
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2）捕获多端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以用and来表示多端口并列&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp.port == 80 and 8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也可以用比较运算符&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;udp.port &amp;gt;= 2048
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤长度内容&#34;&gt;过滤长度、内容
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）长度（数据段的长度）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;udp.length &amp;gt;= 30                        //udp的payload长度
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http.content_length &amp;lt;= 20          //http消息体长度
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2）数据包内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用matches/contains&lt;/p&gt;
&lt;h2 id=&#34;过滤时间&#34;&gt;过滤时间
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;frame.time &amp;gt;= &amp;#34;Apr 16, 2021 06:00:00.0&amp;#34; &amp;amp;&amp;amp; frame.time &amp;lt;= &amp;#34;Apr 16, 2021 06:59:00.0&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;frame.time &amp;gt; &amp;#34;2024-04-11 11:00:00&amp;#34; and frame.time &amp;lt; &amp;#34;2024-04-11 11:01:00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：时间是字符串，要用双引号括起来&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;tshark基本命令&#34;&gt;tshark基本命令
&lt;/h1&gt;&lt;h2 id=&#34;-r--从一个已有的捕获文件读取数据包进行分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-r&lt;/span&gt; &amp;ndash; 从一个已有的捕获文件读取数据包进行分析
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-r 111.pcap&lt;/code&gt;：**从名为 &lt;code&gt;111.pcap&lt;/code&gt; 的文件中读取数据包并简略打印出来&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951      192.168.1.12 -&amp;gt;192.168.1.5        TCP              72                 8080   -&amp;gt;  45940          [FIN, ACK] Seq=1 ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​      &lt;strong&gt;时间戳            原IP           目标IP          协议     数据包长度      源端口    目标端口       报文标头信息&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;-n-n--禁止反向解析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-n/-N&lt;/span&gt; &amp;ndash; 禁止反向解析
&lt;/h2&gt;&lt;h3 id=&#34;-n--禁用域名解析不对-ip-地址和端口号进行名称解析&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-n&lt;/span&gt; &amp;ndash; 禁用域名解析，不对 IP 地址和端口号进行名称解析
&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;tshark&lt;/code&gt; 会尝试将捕获到的 IP 地址解析为主机名（192.168.1.1-&amp;gt;exaple.com），同时也会将端口号转换为服务名称（如 80 变成 &lt;code&gt;http&lt;/code&gt;，443 变成 &lt;code&gt;https&lt;/code&gt; 等）&lt;/p&gt;
&lt;p&gt;通过使用 &lt;code&gt;-n&lt;/code&gt; 参数，可以避免这些解析，直接显示原始的 IP 地址和端口号&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; example.com &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  //-n输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; 93.184.216.34 &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-n--精准控制解析哪些层级&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-N&lt;/span&gt; &amp;ndash; 精准控制解析哪些层级
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;格式：-N &amp;lt;反向解析flag1&amp;gt; -N &amp;lt;反向解析flag2&amp;gt;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;flag取值&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;d&lt;/td&gt;
          &lt;td&gt;对于DNS包启用解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;m&lt;/td&gt;
          &lt;td&gt;启用MAC地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;n&lt;/td&gt;
          &lt;td&gt;启用网络地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;N&lt;/td&gt;
          &lt;td&gt;使用外部解析器（例如DNS）进行网络地址解析，n需要被同时启用才有效果&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;t&lt;/td&gt;
          &lt;td&gt;启用传输层端口解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v&lt;/td&gt;
          &lt;td&gt;启用VLAN ID的名称解析&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -N t -r file.pcap  //-N t&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;解析传输层端口&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                            ↑
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-t--指定输出格式&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-T&lt;/span&gt; &amp;ndash; 指定输出格式
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-T fields&lt;/code&gt;：**仅输出指定的字段（需配合 -e 使用）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T text&lt;/code&gt;：**以普通文本格式输出（默认）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T json&lt;/code&gt;：**以 JSON 格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T jsonraw&lt;/code&gt;：**以 JSON（包含原始数据）格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T ek&lt;/code&gt;：**以 ElasticSearch 格式输出&lt;/p&gt;
&lt;h2 id=&#34;-e--指定显示数据包中的特定字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-e&lt;/span&gt; &amp;ndash; 指定显示数据包中的特定字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-e &amp;ldquo;字段1&amp;rdquo; -e &amp;ldquo;字段2&amp;rdquo;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.src&lt;/code&gt;：**显示源 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.dst&lt;/code&gt;：**显示目标 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.host&lt;/code&gt;：**显示 HTTP 请求中的主机名&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.request.uri&lt;/code&gt;：**显示 HTTP 请求中的 URI（即请求的 URL 路径）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;usbhid.data&lt;/code&gt;：**只提取USB HID 设备数据&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.number&lt;/code&gt;：**显示数据包的报文帧数&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.time&lt;/code&gt;：**显示数据包捕获的时间戳&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.len&lt;/code&gt;：**显示数据包的长度&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;frame.number&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;ip.addr&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.port&amp;#34;&lt;/span&gt; -e tcp -T fields
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//输出报文帧数、ip地址、端口、tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;                  192.168.1.12,192.168.1.8                    37546,80                Transmission Control Protocol,SrcPort: ... 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;报文帧数                        ip地址                                        端口                                   tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-y--筛选过滤报文&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-Y&lt;/span&gt; &amp;ndash; 筛选过滤报文
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-Y &amp;ldquo;过滤条件&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用来过滤分析符合过滤表达式的报文，相当于wireshark最上面的过滤筛选栏功能&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r &amp;lt;filename&amp;gt; -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;http.host == &amp;#34;&lt;/span&gt;web-server1&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;  //通过http.host过滤
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r http-keep-alive.pcap -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.flags.syn==1&amp;amp;&amp;amp;tcp.flags.ack==0&amp;#34;&lt;/span&gt;  //过滤第一次握手的请求
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-e--设置输出的控制字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-E&lt;/span&gt; &amp;ndash; 设置输出的控制字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;通过&lt;code&gt;-T&lt;/code&gt;参数来输出特定格式时，可以配合&lt;code&gt;-E&lt;/code&gt;参数来设置一些选项&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;参数选项&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;默认&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;bom=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;在输出前加上UTF-8字节顺序标记（十六进制ef、bb、bf）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;header=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印一个使用-e作为输出第一行的字段名称头部&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;separator=/t|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/t&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置字段分隔符，默认为/t，可以指定/s，即单个空格，或者自定义的其它字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;occurrence=f|l|a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印每个字段的第一次(f)/最后一次(l)/或所有出现的内容(a)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;aggregator=,|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;,&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于每个字段内的分割字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;quote=d|s|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于环绕字段的引号字符&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;n是null，无设置&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  -E &lt;span style=&#34;color:#e06c75&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;y -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq&amp;#39;&lt;/span&gt; ...  -T fields |column -t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l：包通过IPIP封装，occurrence&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l指定输出外层IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt;：指定icmp.seq等于21的ICMP包
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    | column -t：将输出通过管道传输给 column 命令，使结果以表格的形式对齐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;icmp.seq                          ip.src                            ip.dst                                ip     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;21&lt;/span&gt;                                    114.132.116.32            113.145.123.23                 Internet Protocol Version 4，Src:，Dst:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-2--二次依赖分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-2&lt;/span&gt; &amp;ndash; 二次依赖分析
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;没有2以外的参数&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;tshark会根据上下文报文的依赖关系（tshark称之为&lt;strong&gt;two-pass&lt;/strong&gt;，即进行两次分析），来显示相关报文关联信息，如：&lt;code&gt;response in frame #&lt;/code&gt;、&lt;code&gt;reply in frame&lt;/code&gt;、&lt;code&gt;TCP Port numbers reused&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;-i--指定要捕获数据的网络接口&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-i&lt;/span&gt; &amp;ndash; 指定要捕获数据的网络接口
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-i eth0&lt;/code&gt;：**表示从 &lt;code&gt;eth0&lt;/code&gt; 网络接口捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i wlan0&lt;/code&gt;：**表示从无线网卡 &lt;code&gt;wlan0&lt;/code&gt; 捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i any&lt;/code&gt;：**表示捕获所有接口的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**表示从标准输入（stdin）捕获数据流&lt;/p&gt;
&lt;h2 id=&#34;-f--应用捕获过滤器只捕获特定的流量&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-f&lt;/span&gt; &amp;ndash; 应用捕获过滤器，只捕获特定的流量
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-f &amp;quot;tcp&amp;quot;&lt;/code&gt;：**只捕获 TCP 流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;port 80&amp;quot;&lt;/code&gt;：**只捕获端口为 80（HTTP）的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;src host 192.168.1.1&amp;quot;&lt;/code&gt;：**只捕获源地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的流量&lt;/p&gt;
&lt;h2 id=&#34;-w--将捕获的数据包写入到文件中&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-w&lt;/span&gt; &amp;ndash; 将捕获的数据包写入到文件中
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-w output.pcap&lt;/code&gt;：**将捕获的数据包保存到 &lt;code&gt;output.pcap&lt;/code&gt; 文件&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**将捕获的内容输出到标准输出（stdout）&lt;/p&gt;
&lt;h2 id=&#34;options--其他可选参数&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;options&lt;/span&gt; &amp;ndash; 其他可选参数
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-V&lt;/code&gt;：**显示详细的包信息&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-c &amp;lt;count&amp;gt;&lt;/code&gt;：**捕获指定数量的包后停止&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-n&lt;/code&gt;：**禁止域名解析，使用 IP 地址而不是主机名显示&lt;/p&gt;
&lt;h2 id=&#34;filter指定显示过滤器&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;&amp;lt;filter&amp;gt; &lt;/span&gt;指定显示过滤器
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;如果要用过滤器，一定要放到最后&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.addr == 192.168.1.1&lt;/code&gt;：**仅显示源或目标地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的包。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tcp.port == 443&lt;/code&gt;：**仅显示端口为 443 的 TCP 数据包（通常用于 HTTPS 流量）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http&lt;/code&gt;：**仅显示 HTTP 协议的数据包&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
